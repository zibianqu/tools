/*
Navicat MySQL Data Transfer

Source Server         : localhost
Source Server Version : 50547
Source Host           : 127.0.0.1:3306
Source Database       : tuers

Target Server Type    : MYSQL
Target Server Version : 50547
File Encoding         : 65001

Date: 2018-03-09 16:25:33
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for `admin`
-- ----------------------------
DROP TABLE IF EXISTS `admin`;
CREATE TABLE `admin` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user` varchar(40) NOT NULL,
  `pass` varchar(50) NOT NULL,
  `nick` varchar(50) NOT NULL,
  `is_super` tinyint(2) DEFAULT '0' COMMENT '1为超级管理员',
  `auth` varchar(100) NOT NULL DEFAULT '' COMMENT '权限',
  `pid` int(11) NOT NULL DEFAULT '0' COMMENT '父级id',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of admin
-- ----------------------------
INSERT INTO `admin` VALUES ('1', 'admin', '283da940a1499dfcfcea3ec0255ac20f', '超级管理员', '1', '', '0');

-- ----------------------------
-- Table structure for `article`
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(200) NOT NULL,
  `keyword` varchar(200) DEFAULT NULL,
  `content` longtext NOT NULL,
  `status` tinyint(2) NOT NULL DEFAULT '1',
  `type` tinyint(2) NOT NULL DEFAULT '0',
  `createtime` int(11) NOT NULL,
  `author` varchar(20) DEFAULT NULL,
  `imgurl` varchar(200) DEFAULT NULL,
  `recom` tinyint(2) DEFAULT '0' COMMENT '1为置顶，0为不置顶',
  `readnum` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `title_index` (`title`) USING BTREE,
  KEY `keyword_index` (`keyword`)
) ENGINE=MyISAM AUTO_INCREMENT=66 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES ('1', '工具==》时间戳转换', '', '&lt;h4&gt;\r\n	&lt;span style=&quot;font-family:Arial, Helvetica, sans-serif;line-height:25px;background-color:#FFFFFF;&quot;&gt;一、时间戳转换&lt;/span&gt; \r\n&lt;/h4&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:Arial, Helvetica, sans-serif;line-height:25px;background-color:#FFFFFF;&quot;&gt;现在的Unix时间戳（Unix timestamp）：”获取当前的时间戳，可以停止可以开始。&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span&gt;&lt;span style=&quot;line-height:25px;background-color:#FFFFFF;&quot;&gt;刷新：该按钮可对下面的填写框进行赋值，赋值为当前获取的时间。&lt;/span&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:Arial, Helvetica, sans-serif;line-height:25px;background-color:#FFFFFF;&quot;&gt;&lt;span style=&quot;font-family:Arial, Helvetica, sans-serif;line-height:25px;background-color:#FFFFFF;&quot;&gt;Unix时间戳（Unix timestamp）：填写时间戳可以自动生成北京时间。&lt;/span&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:Arial, Helvetica, sans-serif;line-height:25px;background-color:#FFFFFF;&quot;&gt;&lt;span style=&quot;font-family:Arial, Helvetica, sans-serif;line-height:25px;background-color:#FFFFFF;&quot;&gt;&lt;span style=&quot;font-family:Arial, Helvetica, sans-serif;line-height:25px;background-color:#FFFFFF;&quot;&gt;北京时间（年/月/日 时:分:秒&lt;/span&gt;）：填写北京时间可自动生成时间戳&lt;br /&gt;\r\n&lt;/span&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span&gt;&lt;span style=&quot;line-height:25px;background-color:#FFFFFF;&quot;&gt;可分别填写年、月、日、时、分、秒生成对应的时间戳&lt;/span&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span&gt;&lt;span style=&quot;line-height:25px;background-color:#FFFFFF;&quot;&gt;&lt;a href=&quot;/tools/unixtime.aspx&quot;&gt;&lt;span style=&quot;font-family:Arial, Helvetica, sans-serif;line-height:25px;background-color:#FFFFFF;&quot;&gt;时间戳转换&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;\r\n&lt;/span&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:Arial, Helvetica, sans-serif;line-height:25px;background-color:#FFFFFF;&quot;&gt;&lt;span style=&quot;font-family:Arial, Helvetica, sans-serif;line-height:25px;background-color:#FFFFFF;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:Arial, Helvetica, sans-serif;line-height:25px;background-color:#FFFFFF;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt; \r\n&lt;/p&gt;', '1', '0', '1474164180', '小兔', null, '0', '38');
INSERT INTO `article` VALUES ('2', '工具==》unicode编码转换', null, '&lt;h3&gt;\r\n	一、&amp;nbsp;unicode编码转换\r\n&lt;/h3&gt;\r\n&lt;p&gt;\r\n	1.ASCII 转换unicode\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	2.&lt;span&gt;unicode转换ASCII&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span&gt;&lt;span&gt;3.&lt;/span&gt;&lt;span&gt;unicode&lt;/span&gt;转中文&lt;br /&gt;\r\n&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span&gt;&lt;span&gt;4.&lt;/span&gt;&lt;span&gt;&lt;span&gt;中文&lt;/span&gt;&lt;/span&gt;&lt;span&gt;转&lt;/span&gt;&lt;span&gt;unicode&lt;/span&gt;&lt;br /&gt;\r\n&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span&gt; &lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;a href=&quot;/tools/unicode.aspx&quot;&gt;unicode编码转换&lt;span style=&quot;font-size:12px;font-weight:normal;line-height:1.5;&quot;&gt;&lt;/span&gt;&lt;/a&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;', '1', '0', '1472438091', '小兔', null, '0', '34');
INSERT INTO `article` VALUES ('3', '工具==》JSON校验', null, '&lt;h4&gt;\r\n	一、JSON校验\r\n&lt;/h4&gt;\r\n&lt;p&gt;\r\n	1.校验/格式化：校验json格式是否正确，格式化json\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	2.缩进\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;a href=&quot;/tools/json.aspx&quot;&gt;JSON校验&lt;/a&gt; \r\n&lt;/p&gt;', '1', '0', '1472438416', '小兔', null, '0', '40');
INSERT INTO `article` VALUES ('4', '在线智能图片处理-黑白转彩色', null, '&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	懒人专用。。。&lt;strong&gt;&lt;span style=&quot;vertical-align:baseline;color:#FF6600;&quot;&gt;网站把相当专业的黑白照片上色操作变得很简单&lt;/span&gt;&lt;/strong&gt;，你甚至不用任何操作，只需要上传一张黑白照片即可！\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;text-align:center;background-color:#F9F9F9;&quot;&gt;\r\n	&lt;img class=&quot;alignnone&quot; src=&quot;http://img.youquhome.com/uploads/2016/08/colorize-photos.jpg&quot; alt=&quot;在线智能图片处理-黑白转彩色&quot; width=&quot;380&quot; height=&quot;180&quot; style=&quot;height:auto;&quot; /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	传送门&amp;nbsp;&lt;a href=&quot;http://demos.algorithmia.com/colorize-photos/&quot; target=&quot;_blank&quot;&gt;http://demos.algorithmia.com/colorize-photos/&lt;/a&gt;&amp;nbsp;&lt;span id=&quot;more-3793&quot; style=&quot;vertical-align:baseline;&quot;&gt;&lt;/span&gt;\r\n&lt;/p&gt;\r\n&lt;blockquote style=&quot;font-size:14px;vertical-align:baseline;font-style:italic;color:#FF6600;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	&lt;h2 style=&quot;font-size:1.28571rem;vertical-align:baseline;font-family:&amp;quot;&quot;&gt;\r\n		方法\r\n	&lt;/h2&gt;\r\n&lt;/blockquote&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	进入网站后，可以在输入框里输入图片链接，也可以上传本地图片，确定后网站会自动上色。。。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;text-align:right;background-color:#F9F9F9;&quot;&gt;\r\n	网友&lt;span style=&quot;vertical-align:baseline;color:#808000;&quot;&gt;斯坦_马什&lt;/span&gt;提供趣站\r\n&lt;/p&gt;', '1', '0', '1472453983', '小兔', null, '0', '36');
INSERT INTO `article` VALUES ('5', 'Jpg图片极限压缩-Needs More JPEG', null, '&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	很给力的工具！网站&lt;strong&gt;&lt;span style=&quot;vertical-align:baseline;color:#FF6600;&quot;&gt;提供jpg图片极限压缩服务&lt;/span&gt;&lt;/strong&gt;，上传一张jpg图片可以压缩到你无法想像的大小，当然，图片效果也会随之无法想像。。。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;text-align:center;background-color:#F9F9F9;&quot;&gt;\r\n	&lt;img class=&quot;alignnone&quot; src=&quot;http://img.youquhome.com/uploads/2016/07/needsmorejpeg.jpg&quot; alt=&quot;Jpg图片极限压缩-Needs More JPEG&quot; width=&quot;376&quot; height=&quot;180&quot; style=&quot;height:auto;&quot; /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	传送门&amp;nbsp;&lt;a href=&quot;http://needsmorejpeg.com/&quot; target=&quot;_blank&quot;&gt;http://needsmorejpeg.com/&lt;/a&gt;&amp;nbsp;&lt;span id=&quot;more-3781&quot; style=&quot;vertical-align:baseline;&quot;&gt;&lt;/span&gt;\r\n&lt;/p&gt;\r\n&lt;blockquote style=&quot;font-size:14px;vertical-align:baseline;font-style:italic;color:#FF6600;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	&lt;h2 style=&quot;font-size:1.28571rem;vertical-align:baseline;font-family:&amp;quot;&quot;&gt;\r\n		方法\r\n	&lt;/h2&gt;\r\n&lt;/blockquote&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	进入网站后上传图片或输入图片网络地址确定即可！\r\n&lt;/p&gt;', '1', '0', '1472454009', '小兔', null, '0', '37');
INSERT INTO `article` VALUES ('6', '在线定时闹钟中文版-Naobiao', null, '&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	相当实用的网站！它&lt;strong&gt;&lt;span style=&quot;vertical-align:baseline;color:#FF6600;&quot;&gt;可以在线快速便捷的设置闹钟&lt;/span&gt;&lt;/strong&gt;，优点是随时随地打开即用，无需下载软件。缺点是你的电脑要能上网。。。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;text-align:center;background-color:#F9F9F9;&quot;&gt;\r\n	&lt;img class=&quot;alignnone&quot; src=&quot;http://img.youquhome.com/uploads/2016/04/naobiao.jpg&quot; alt=&quot;在线定时闹钟中文版-Naobiao&quot; width=&quot;367&quot; height=&quot;180&quot; style=&quot;height:auto;&quot; /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	传送门&amp;nbsp;&lt;a href=&quot;http://www.naobiao.com/&quot; target=&quot;_blank&quot;&gt;http://www.naobiao.com/&lt;/a&gt;&amp;nbsp;&lt;span id=&quot;more-3714&quot; style=&quot;vertical-align:baseline;&quot;&gt;&lt;/span&gt;\r\n&lt;/p&gt;\r\n&lt;blockquote style=&quot;font-size:14px;vertical-align:baseline;font-style:italic;color:#FF6600;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	&lt;h2 style=&quot;font-size:1.28571rem;vertical-align:baseline;font-family:&amp;quot;&quot;&gt;\r\n		方法\r\n	&lt;/h2&gt;\r\n&lt;/blockquote&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	看着界面就知道是为中小学生量身定做的，目的是让同学们努力学习的同时要适当的休息休息！\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;text-align:right;background-color:#F9F9F9;&quot;&gt;\r\n	网友&lt;span style=&quot;vertical-align:baseline;color:#808000;&quot;&gt;Dance&lt;/span&gt;提供趣站\r\n&lt;/p&gt;', '1', '0', '1472454057', '小兔', null, '0', '40');
INSERT INTO `article` VALUES ('7', '文字倒序排列小工具-Flip', null, '&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	还真不知道这个工具是用来干什么的。。。&lt;strong&gt;&lt;span style=&quot;vertical-align:baseline;color:#FF6600;&quot;&gt;网站可以将你输入的文字以倒序重新排列&lt;/span&gt;&lt;/strong&gt;，支持中文哦，好奇的同学可以试试看！\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;text-align:center;background-color:#F9F9F9;&quot;&gt;\r\n	&lt;img class=&quot;alignnone&quot; src=&quot;http://img.youquhome.com/uploads/2016/03/flip.jpg&quot; alt=&quot;文字倒序排列小工具-Flip&quot; width=&quot;359&quot; height=&quot;180&quot; style=&quot;height:auto;&quot; /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	传送门&amp;nbsp;&lt;a href=&quot;http://www.revfad.com/flip.html&quot; target=&quot;_blank&quot;&gt;http://www.revfad.com/flip.html&lt;/a&gt;&amp;nbsp;&lt;span id=&quot;more-3693&quot; style=&quot;vertical-align:baseline;&quot;&gt;&lt;/span&gt;\r\n&lt;/p&gt;\r\n&lt;blockquote style=&quot;font-size:14px;vertical-align:baseline;font-style:italic;color:#FF6600;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	&lt;h2 style=&quot;font-size:1.28571rem;vertical-align:baseline;font-family:&amp;quot;&quot;&gt;\r\n		方法\r\n	&lt;/h2&gt;\r\n&lt;/blockquote&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	进入网站后，在输入框里输入文字即可！\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;text-align:right;background-color:#F9F9F9;&quot;&gt;\r\n	网友&lt;span style=&quot;vertical-align:baseline;color:#808000;&quot;&gt;joviality&lt;/span&gt;提供趣站\r\n&lt;/p&gt;', '1', '0', '1472454080', '小兔', null, '0', '41');
INSERT INTO `article` VALUES ('8', '完美在线图片合成工具(11)-FotoJet', null, '&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	好久没介绍图片工具类的网站了，今天的这个网站&lt;strong&gt;&lt;span style=&quot;vertical-align:baseline;color:#FF6600;&quot;&gt;可以方便的在线合成创意拼图、趣味相片&lt;/span&gt;&lt;/strong&gt;等，全中文的界面操作起来十分方便！\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;text-align:center;background-color:#F9F9F9;&quot;&gt;\r\n	&lt;img class=&quot;alignnone&quot; src=&quot;http://img.youquhome.com/uploads/2016/01/fotojet.jpg&quot; alt=&quot;完美在线图片合成工具(11)-FotoJet&quot; width=&quot;361&quot; height=&quot;180&quot; style=&quot;height:auto;&quot; /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	传送门&amp;nbsp;&lt;a href=&quot;http://www.fotojet.com/cn/&quot; target=&quot;_blank&quot;&gt;http://www.fotojet.com/cn/&lt;/a&gt;&amp;nbsp;&lt;span id=&quot;more-3655&quot; style=&quot;vertical-align:baseline;&quot;&gt;&lt;/span&gt;\r\n&lt;/p&gt;\r\n&lt;blockquote style=&quot;font-size:14px;vertical-align:baseline;font-style:italic;color:#FF6600;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	&lt;h2 style=&quot;font-size:1.28571rem;vertical-align:baseline;font-family:&amp;quot;&quot;&gt;\r\n		方法\r\n	&lt;/h2&gt;\r\n&lt;/blockquote&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	进入网站按照提示操作即可！\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;text-align:right;background-color:#F9F9F9;&quot;&gt;\r\n	网友&lt;span style=&quot;vertical-align:baseline;color:#808000;&quot;&gt;Kang小&lt;/span&gt;提供趣站\r\n&lt;/p&gt;', '1', '0', '1472454103', '小兔', null, '0', '42');
INSERT INTO `article` VALUES ('9', 'gif在线制作中文版-GIF5', null, '&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	站长我要闪闪亮多次提交的趣站，出于对国产趣站的警惕，愣是过了半年后才收录。。。感谢我要闪闪亮如此执着的关注有趣网址之家，希望我的宣传能助你的网站一臂之力！\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	国外的此类网站已经数不胜数了，而今天这个网站的不同之外是&lt;span style=&quot;vertical-align:baseline;color:#FF6600;&quot;&gt;&lt;strong&gt;全中文操作的GIF在线制作工具&lt;/strong&gt;&lt;/span&gt;，基本上是看了就会的，好多的功能也在添加中，推荐收藏！\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;text-align:center;background-color:#F9F9F9;&quot;&gt;\r\n	&lt;img class=&quot;alignnone&quot; src=&quot;http://img.youquhome.com/uploads/2015/12/gif5.jpg&quot; alt=&quot;gif在线制作中文版-GIF5&quot; width=&quot;374&quot; height=&quot;180&quot; style=&quot;height:auto;&quot; /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	传送门&amp;nbsp;&lt;a href=&quot;http://www.gif5.net/&quot; target=&quot;_blank&quot;&gt;http://www.gif5.net/&lt;/a&gt;&amp;nbsp;&lt;span id=&quot;more-3624&quot; style=&quot;vertical-align:baseline;&quot;&gt;&lt;/span&gt;\r\n&lt;/p&gt;\r\n&lt;blockquote style=&quot;font-size:14px;vertical-align:baseline;font-style:italic;color:#FF6600;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	&lt;h2 style=&quot;font-size:1.28571rem;vertical-align:baseline;font-family:&amp;quot;&quot;&gt;\r\n		方法\r\n	&lt;/h2&gt;\r\n&lt;/blockquote&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	全中文的，操作无障碍！\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;text-align:right;background-color:#F9F9F9;&quot;&gt;\r\n	站长&lt;span style=&quot;vertical-align:baseline;color:#808000;&quot;&gt;我要闪闪亮&lt;/span&gt;自荐趣站\r\n&lt;/p&gt;', '1', '0', '1472454129', '小兔', null, '0', '57');
INSERT INTO `article` VALUES ('10', '轻松在线网速测试-Speed Test', null, '&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	很多人推荐的&lt;span style=&quot;vertical-align:baseline;color:#FF6600;&quot;&gt;&lt;strong&gt;一款国外的网速测试工具&lt;/strong&gt;&lt;/span&gt;，使用方便，画面形象，自动搜寻附近节点来测试当地网速，结果还是比较客观的，推荐收藏！\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;text-align:center;background-color:#F9F9F9;&quot;&gt;\r\n	&lt;img class=&quot;alignnone&quot; src=&quot;http://img.youquhome.com/uploads/2015/11/speedtest.jpg&quot; alt=&quot;轻松在线网速测试-Speed Test&quot; width=&quot;359&quot; height=&quot;180&quot; style=&quot;height:auto;&quot; /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	传送门&amp;nbsp;&lt;a href=&quot;http://www.speedtest.net/&quot; target=&quot;_blank&quot;&gt;http://www.speedtest.net/&lt;/a&gt;&amp;nbsp;&lt;span id=&quot;more-3618&quot; style=&quot;vertical-align:baseline;&quot;&gt;&lt;/span&gt;\r\n&lt;/p&gt;\r\n&lt;blockquote style=&quot;font-size:14px;vertical-align:baseline;font-style:italic;color:#FF6600;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	&lt;h2 style=&quot;font-size:1.28571rem;vertical-align:baseline;font-family:&amp;quot;&quot;&gt;\r\n		方法\r\n	&lt;/h2&gt;\r\n&lt;/blockquote&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	很简单，进入网站后，点击BEGIN TEST开始测试，你会看到三个常用的网速参数：延迟、下载速度、上传速度，上传下载速度单位为Mbps，除以10后大概就是我们下载或上传的每秒速度了！\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	另外，网站会自动选择最近的节点来测试，你也可以手动选择国内外的任何地点来测试，用鼠标拖动地图点击节点即可！\r\n&lt;/p&gt;', '1', '0', '1472454160', '小兔', null, '0', '112');
INSERT INTO `article` VALUES ('11', '在线智能图片处理-调色篇', null, '&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	又是一个小巧的在线工具，它&lt;strong&gt;&lt;span style=&quot;vertical-align:baseline;color:#FF6600;&quot;&gt;可以在线智能调色上传的照片&lt;/span&gt;&lt;/strong&gt;，左侧为预设选项，右侧为自定义调节，全程中文，使用方便！\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;text-align:center;background-color:#F9F9F9;&quot;&gt;\r\n	&lt;img class=&quot;alignnone&quot; src=&quot;http://img.youquhome.com/uploads/2015/11/polarr.jpg&quot; alt=&quot;在线智能图片处理-调色篇&quot; width=&quot;363&quot; height=&quot;180&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	传送门&amp;nbsp;&lt;a href=&quot;https://v3.polarr.co/&quot; target=&quot;_blank&quot;&gt;https://v3.polarr.co/&lt;/a&gt;&amp;nbsp;&lt;span id=&quot;more-3612&quot; style=&quot;vertical-align:baseline;&quot;&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;blockquote style=&quot;font-size:14px;vertical-align:baseline;font-style:italic;color:#FF6600;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	&lt;h2 style=&quot;font-size:1.28571rem;vertical-align:baseline;font-family:&amp;quot;&quot;&gt;\r\n		方法\r\n	&lt;/h2&gt;\r\n&lt;/blockquote&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;background-color:#F9F9F9;&quot;&gt;\r\n	网站支持中文，初学网友推荐用左边的预设调节，喜欢折腾的可以用右边的自定义调节，同时支持快捷键操作，Ctrl+O打开照片，Ctrl+S保存图片！\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;vertical-align:baseline;color:#444444;font-family:&amp;quot;text-align:right;background-color:#F9F9F9;&quot;&gt;\r\n	网友&lt;span style=&quot;vertical-align:baseline;color:#808000;&quot;&gt;Zesty&lt;/span&gt;提供趣站\r\n&lt;/p&gt;', '1', '0', '1472784750', '小兔', null, '0', '114');
INSERT INTO `article` VALUES ('12', 'PHP  时间戳相互转换时间', '时间戳转换时间,时间戳转换日期,时间转换时间戳,日期转换时间戳', '&lt;p&gt;\r\n	PHP怎么获取时间，时间戳\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-js&quot;&gt;$timeStamp=time();  //获取当前时间戳\r\n\r\n$timeStamp=strtotime(\'2016-09-02 12:00:00\'); //可生成指定时间戳\r\n$timeStamp=strtotime(\'2016-09-02\');  //将日期生成时间戳\r\n\r\n$time=date(\'Y-m-d H:i:s\');  //获取当前时间 如：2016-09-02 12:00:00\r\n\r\n$time=date(\'Y-m-d H:i:s\',time()); //得到的结果同上\r\n\r\nmktime(hour,minute,second,month,day,year); //将指定时间转化为时间戳&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	在开发过程中大多用到的时间函数time()、date()、mktime()、strtotime()、getdate()\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	1.strtotime($time)的一些用法\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;date(\'Y-m-d H:i:s\',strtotime(\'+1 day\'));//加了一天输出明天此时时间\r\ndate(\'Y-m-d H:i:s\',strtotime(\'-1 day\'));//减了一天输出昨天此时时间\r\ndate(\'Y-m-d H:i:s\',strtotime(\'+1 week\'));//输出下一周此时时间\r\ndate(\'Y-m-d H:i:s\',strtotime(\'-1 week\'));//输出上一周此时时间\r\ndate(\'Y-m-d H:i:s\',strtotime(\'next Monday\'));//下个星期1此时的时间\r\ndate(\'Y-m-d H:i:s\',strtotime(\'last Monday\'));//上个星期1此时的时间&lt;/pre&gt;\r\n&lt;br /&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	2.getdate()的用法\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$array_time = getdate(1472796744); \r\n$hours = $array_time [&quot;hours&quot;];\r\n$minutes = $array_time [&quot;minutes&quot;];\r\n$seconds = $array_time [&quot;seconds&quot;];\r\n$month = $array_time [&quot;mon&quot;];\r\n$day = $array_time [&quot;mday&quot;];\r\n$year = $array_time [&quot;year&quot;];\r\necho $year.\'-\'.$month.\'-\'.$day.\' \'.$hours.\':\'.$minutes .\':\'.$seconds&lt;/pre&gt;\r\n3.time()\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$timeStamp=time()+86400;// 明天此时\r\n$timeStamp=time()-86400;//昨天此时&lt;/pre&gt;\r\n4.date\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$year=date(\'Y\');//年\r\n$month=date(\'m\');//月\r\n$day=date(\'d\');//日\r\n$hour=date(\'H\');//时\r\n$minute=date(\'i\');//分\r\n$second=date(\'s\');//秒\r\n\r\ndate(&quot;l&quot;);// 注意是字符L的小写，不是1，也不是竖线，输出Monday\r\ndate(&quot;Y-m-d H:i:s&quot;) ; //输出2016-09-02 14:28:16\r\ndate(&quot;Y/m/d&quot;);//输出2016/09/02\r\ndate(&quot;Y年m月d日 H时i分s秒&quot;);//输出2016年09月02日 14时28分16秒&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;', '1', '0', '1472798007', '小兔', null, '0', '101');
INSERT INTO `article` VALUES ('13', 'js 时间戳与时间互相转换', '时间戳转换成时间，时间转换成时间戳', '&lt;p&gt;\r\n	拷贝了别人的格式化时间方法，然后运用到自己需要的地方\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-js&quot;&gt;//格式化时间\r\nDate.prototype.format = function(format) {\r\n       var date = {\r\n              &quot;M+&quot;: this.getMonth() + 1, &quot;d+&quot;: this.getDate(),\r\n              &quot;h+&quot;: this.getHours(),\r\n              &quot;m+&quot;: this.getMinutes(),\r\n              &quot;s+&quot;: this.getSeconds(),\r\n              &quot;q+&quot;: Math.floor((this.getMonth() + 3) / 3),\r\n              &quot;S+&quot;: this.getMilliseconds()\r\n       };\r\n       if (/(y+)/i.test(format)) {\r\n              format = format.replace(RegExp.$1, (this.getFullYear() + \'\').substr(4 - RegExp.$1.length));\r\n       }\r\n       for (var k in date) {\r\n              if (new RegExp(&quot;(&quot; + k + &quot;)&quot;).test(format)) {\r\n                     format = format.replace(RegExp.$1, RegExp.$1.length == 1\r\n                            ? date[k] : (&quot;00&quot; + date[k]).substr((&quot;&quot; + date[k]).length));\r\n              }\r\n       }\r\n       return format;\r\n}\r\n\r\n//使用方法 \r\nvar now = new Date(); \r\nvar nowStr = now.format(&quot;yyyy-MM-dd hh:mm:ss&quot;); \r\n//使用方法2: \r\nvar testDate = new Date(); \r\nvar testStr = testDate.format(&quot;YYYY年MM月dd日hh小时mm分ss秒&quot;); \r\nalert(testStr); \r\n//示例： \r\nalert(new Date().format(&quot;yyyy年MM月dd日&quot;)); \r\nalert(new Date().format(&quot;MM/dd/yyyy&quot;)); \r\nalert(new Date().format(&quot;yyyyMMdd&quot;)); \r\nalert(new Date().format(&quot;yyyy-MM-dd hh:mm:ss&quot;)); \r\n\r\n//出处http://blog.csdn.net/chinet_bridge/article/details/15026729\r\n&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	1.获取时间戳方法\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-js&quot;&gt;//获取时间戳\r\nfunction getTime(){\r\n	var timestamp = Date.parse(new Date());\r\n	timestamp = timestamp / 1000;\r\n	return timestamp;\r\n}&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	2.将时间戳转化为时间格式\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-js&quot;&gt;//将时间戳转换成为时间格式\r\nfunction unixchange(timestamp){\r\n	var newDate = new Date();\r\n	newDate.setTime(timestamp * 1000);\r\n	return newDate.format(\'yyyy/MM/dd hh:mm:ss\');\r\n}&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	3.根据传入年、月、日、时、分、秒生成时间戳\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-js&quot;&gt;function change(year,month,day,hour,minute,second){\r\n	if(year==\'\' || isNaN(year)){\r\n		return ;\r\n	}\r\n	if(month==\'\'|| isNaN(year) )month=\'00\';\r\n	if(day==\'\' || isNaN(day))day=\'00\';\r\n	if(hour==\'\' || isNaN(hour))hour=\'00\';\r\n	if(minute==\'\' || isNaN(minute))minute=\'00\';\r\n	if(second==\'\' || isNaN(second))second=\'00\';\r\n	var time=year+&quot;/&quot;+month+&quot;/&quot;+day+&quot; &quot;+hour+&quot;:&quot;+minute+&quot;:&quot;+second;\r\n	$(\'#unix4\').val(timechange(time));\r\n}\r\n\r\n//时间转换为时间\r\nfunction timechange(time){\r\n	// 获取某个时间格式的时间戳\r\n	//var stringTime = &quot;2014/07/10 10:21:12&quot;;\r\n	var arr=time.match(/[0-9]+/g);\r\n	if(arr==null || arr.length&amp;gt;6)return ;\r\n	time=fillstr(arr[0],4);\r\n	time+=\'/\'+fillstr(arr[1],2);\r\n	time+=\'/\'+fillstr(arr[2],2);\r\n	time+=\' \'+fillstr(arr[3],2);\r\n	time+=\':\'+fillstr(arr[4],2);\r\n	time+=\':\'+fillstr(arr[5],2);\r\n	var date=new Date();\r\n	date.setFullYear(time.substring(0,4));\r\n	date.setMonth(time.substring(5,7)-1);\r\n	date.setDate(time.substring(8,10));\r\n	date.setHours(time.substring(11,13));\r\n	date.setMinutes(time.substring(14,16));\r\n	date.setSeconds(time.substring(17,19));\r\n	return Date.parse(date)/1000;\r\n}\r\n//填充\r\nfunction fillstr(str,num){\r\n	if(str==\'\' || str==null || str==\'undefined\')return \'00\';\r\n	var len= str.length;\r\n	var i=1;\r\n	while(i&amp;lt;=num-len){\r\n		str=\'0\'+str;\r\n		i++;\r\n	}\r\n	return str;\r\n}&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;', '1', '0', '1473069045', '小兔', null, '0', '93');
INSERT INTO `article` VALUES ('14', 'php 常用数组排序总结，冒泡排序，插入排序，选择排序', 'php 常用数组排序，数组排序，冒泡排序，插入排序，选择排序', '&lt;h3&gt;\r\n	&lt;span style=&quot;line-height:1.5;&quot;&gt;通过元素值对数组排序&lt;/span&gt; \r\n&lt;/h3&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;line-height:1.5;&quot;&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	$sortingtype=0 默认。把每一项按常规顺序排列\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	$sortingtype=1 把每一项作为数字来处理&amp;nbsp;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	$sortingtype=2 把每一项作为字符串来处理&amp;nbsp;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	$sortingtype=3 把每一项作为字符串来处理，基于当前区域设置（可通过 setlocale() 进行更改）\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	$sortingtype=4 把每一项作为字符串来处理，使用类似 natsort() 的自然排序 $sortingtype=2 可以结合（按位或）SORT_STRING 或 SORT_NATURAL 对字符串进行排序，不区分大小写\r\n&lt;/p&gt;\r\n&lt;br /&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;line-height:1.5;&quot;&gt;1、&lt;strong&gt;sort&lt;/strong&gt;函数对数组按照键值进行升序排序,忽略键名的数组排序,sort($array,$sortingtype)&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$array = array(&quot;Bill&quot;=&amp;gt;&quot;60&quot;,&quot;Steve&quot;=&amp;gt;&quot;56&quot;,&quot;Mark&quot;=&amp;gt;&quot;31&quot;);\r\nsort($array); \r\nvar_export($array)\r\n\r\n&lt;/pre&gt;\r\n&lt;p&gt;\r\n	输出：&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;array ( 0 =&amp;gt; \'31\', 1 =&amp;gt; \'56\', 2 =&amp;gt; \'60\', )&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	2、&lt;strong&gt;rsort&lt;/strong&gt;函数对数组按照键值进行&lt;span style=&quot;font-family:Verdana, Arial, 宋体;background-color:#F9F9F9;&quot;&gt;降序排序,忽略键名的数组排序,&lt;/span&gt;rsort($array,$sortingtype)\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-js&quot;&gt;$array = array(&quot;Bill&quot;=&amp;gt;&quot;60&quot;,&quot;Steve&quot;=&amp;gt;&quot;56&quot;,&quot;Mark&quot;=&amp;gt;&quot;31&quot;); \r\nrsort($array); \r\nvar_export($array)&lt;/pre&gt;\r\n&lt;p&gt;\r\n	输出：&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;array ( 0 =&amp;gt; \'60\', 1 =&amp;gt; \'56\', 2 =&amp;gt; \'31\', )&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	3、&lt;strong&gt;asort&lt;/strong&gt;函数对数组按照键值进行升序排序,保留键名的数组排序,asort($array,$sortingtype)\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$array = array(&quot;Bill&quot;=&amp;gt;&quot;60&quot;,&quot;Steve&quot;=&amp;gt;&quot;56&quot;,&quot;Mark&quot;=&amp;gt;&quot;31&quot;); \r\nasort($array); \r\nvar_export($array)&lt;/pre&gt;\r\n&lt;p&gt;\r\n	输出：&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;array ( \'Mark\' =&amp;gt; \'31\', \'Steve\' =&amp;gt; \'56\', \'Bill\' =&amp;gt; \'60\', )&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	4、&lt;strong&gt;arsort&lt;/strong&gt;函数对数组按照键值进行降序排序，保留键名的数组排序,arsort($array,$sortingtype)\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$array = array(&quot;Bill&quot;=&amp;gt;&quot;60&quot;,&quot;Steve&quot;=&amp;gt;&quot;56&quot;,&quot;Mark&quot;=&amp;gt;&quot;31&quot;); \r\nasort($array); \r\nvar_export($array)&lt;/pre&gt;\r\n&lt;span&gt;输出&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;array ( \'Bill\' =&amp;gt; \'60\', \'Steve\' =&amp;gt; \'56\', \'Mark\' =&amp;gt; \'31\', )&lt;/span&gt;&lt;br /&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	5、&lt;strong&gt;uasort&lt;/strong&gt;改函数由用户自定义排序,uasort($array,\'myfunction\')\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;function my_sort($a,$b)\r\n{\r\n	if ($a==$b) return 0;\r\n	return ($a&amp;lt;$b)?-1:1;\r\n}\r\n\r\n$arr=array(&quot;a&quot;=&amp;gt;4,&quot;c&quot;=&amp;gt;8,&quot;b&quot;=&amp;gt;2,&quot;d&quot;=&amp;gt;6);\r\nuasort($arr,&quot;my_sort&quot;);\r\nvar_export($arr);&lt;/pre&gt;\r\n&lt;span&gt;输出：&lt;/span&gt;&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;array ( \'b\' =&amp;gt; 2, \'a\' =&amp;gt; 4, \'d\' =&amp;gt; 6, \'c\' =&amp;gt; 8, )&lt;/span&gt;&lt;span&gt;&lt;/span&gt; \r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;h3&gt;\r\n	&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;通过元素键名对数组排序&lt;/span&gt; \r\n&lt;/h3&gt;\r\n&lt;p&gt;\r\n	1、&lt;strong&gt;ksort&lt;/strong&gt;函数对数组按照键名进行升序排序,krsort($array,$sortingtype)\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$array = array(&quot;Bill&quot;=&amp;gt;&quot;60&quot;,&quot;Steve&quot;=&amp;gt;&quot;56&quot;,&quot;Mark&quot;=&amp;gt;&quot;31&quot;); \r\nksort($array); \r\nvar_export($array);&lt;/pre&gt;\r\n&lt;span&gt;输出：&lt;/span&gt;&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;array ( \'Bill\' =&amp;gt; \'60\', \'Mark\' =&amp;gt; \'31\', \'Steve\' =&amp;gt; \'56\', )&lt;/span&gt;&lt;span&gt;&lt;/span&gt; \r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	2、&lt;strong&gt;krsort&lt;/strong&gt;函数对数组按照键名进行降序排序,krsort($array,$sortingtype)\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-js&quot;&gt;$array = array(&quot;Bill&quot;=&amp;gt;&quot;60&quot;,&quot;Steve&quot;=&amp;gt;&quot;56&quot;,&quot;Mark&quot;=&amp;gt;&quot;31&quot;); \r\nkrsort($array); \r\nvar_export($array);&lt;/pre&gt;\r\n&lt;span&gt;输出：&lt;/span&gt;&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;array ( \'Steve\' =&amp;gt; \'56\', \'Mark\' =&amp;gt; \'31\', \'Bill\' =&amp;gt; \'60\', )&lt;/span&gt;&lt;span&gt;&lt;/span&gt; \r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	3、&lt;strong&gt;uksort&lt;/strong&gt;改函数由用户自定义排序,uksort($array,\'myfunction\')\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;function my_sort($a,$b)\r\n{\r\n	if ($a==$b) return 0;\r\n	return ($a&amp;lt;$b)?-1:1;\r\n}\r\n\r\n$arr=array(&quot;a&quot;=&amp;gt;4,&quot;c&quot;=&amp;gt;8,&quot;b&quot;=&amp;gt;2,&quot;d&quot;=&amp;gt;6);\r\nuksort($arr,&quot;my_sort&quot;);\r\nvar_export($arr);&lt;/pre&gt;\r\n&lt;span&gt;输出：&lt;/span&gt;&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;array ( \'a\' =&amp;gt; 4, \'b\' =&amp;gt; 2, \'c\' =&amp;gt; 8, \'d\' =&amp;gt; 6, )&lt;/span&gt;&lt;span&gt;&lt;/span&gt; \r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;h3&gt;\r\n	&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt;&lt;strong&gt;自然排序法排序&lt;/strong&gt; \r\n&lt;/h3&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	1、&lt;strong&gt;natsort&lt;/strong&gt;&lt;span style=&quot;font-family:Verdana, Arial, 宋体;background-color:#F9F9F9;&quot;&gt;函数用&quot;自然排序&quot;算法对数组进行排序。键值保留它们原始的键名。&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:Verdana, Arial, 宋体;background-color:#F9F9F9;&quot;&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$array = array(&quot;temp15.txt&quot;,&quot;temp10.txt&quot;,&quot;temp1.txt&quot;,&quot;temp22.txt&quot;,&quot;temp2.txt&quot;);\r\nnatsort($array); \r\nvar_export($array);&lt;/pre&gt;\r\n&lt;span&gt;输出：&lt;/span&gt;&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;array ( 2 =&amp;gt; \'temp1.txt\', 4 =&amp;gt; \'temp2.txt\', 1 =&amp;gt; \'temp10.txt\', 0 =&amp;gt; \'temp15.txt\', 3 =&amp;gt; \'temp22.txt\', )&lt;/span&gt;&lt;span&gt;&lt;/span&gt; \r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:Verdana, Arial, 宋体;background-color:#F9F9F9;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:Verdana, Arial, 宋体;background-color:#F9F9F9;&quot;&gt;2、&lt;strong&gt;natcasesort&amp;nbsp;&lt;/strong&gt;函数用&quot;自然排序&quot;算法对数组进行排序。键值保留它们原始的键名&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$array = array(&quot;Temp15.txt&quot;,&quot;temp10.txt&quot;,&quot;temp1.txt&quot;,&quot;temp22.txt&quot;,&quot;TEMP2.txt&quot;);\r\nnatcasesort($array); \r\nvar_export($array);&lt;/pre&gt;\r\n&lt;span&gt;输出：&lt;/span&gt;&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;array ( 2 =&amp;gt; \'temp1.txt\', 4 =&amp;gt; \'TEMP2.txt\', 1 =&amp;gt; \'temp10.txt\', 0 =&amp;gt; \'Temp15.txt\', 3 =&amp;gt; \'temp22.txt\', )&lt;/span&gt;&lt;br /&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;h3&gt;\r\n	&lt;strong&gt;嵌套循环排序&lt;/strong&gt; \r\n&lt;/h3&gt;\r\n&lt;p&gt;\r\n	1、冒泡排序\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;function maopaosort(&amp;amp;$ar){\r\n	for($i=0;$i&amp;lt;count($ar);$i++){\r\n		for($j=count($ar)-1;$j&amp;gt;$i;$j--){\r\n			if($ar[$i]&amp;gt;$ar[$j]){\r\n				$temp=$ar[$i];\r\n				$ar[$i]=$ar[$j];\r\n				$ar[$j]=$temp;\r\n			}\r\n		}\r\n	}\r\n}\r\n$ar = array(5,2,4,6,1,3);\r\nmaopaosort($ar);\r\nprint_r($ar);&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	2、插入排序\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;function insertSort($arr) {\r\n	$len = count($arr);\r\n	for ($i = 1; $i &amp;lt; 6; $i++) {\r\n		// 当前值\r\n		$key = $arr[$i];\r\n		// 当前位置\r\n		$pos = $i;\r\n		// 如是当前位置 &amp;gt;0 &amp;amp;&amp;amp; 当前值的前一个值 &amp;gt; 当前值 选出最值\r\n		while ($pos &amp;gt; 0 &amp;amp;&amp;amp; $arr[$pos - 1] &amp;gt; $key) {\r\n			// 当前值  =  前一个值\r\n			$arr[$pos] = $arr[$pos - 1];\r\n			// 当前位置后移\r\n			$pos = $pos - 1;\r\n			\r\n		}\r\n		// 找到当前值的位置\r\n		$arr[$pos] = $key;\r\n		echo join(\',\', $arr);\r\n		echo \'&amp;lt;br&amp;gt;\';\r\n	}\r\n	return $arr;\r\n}\r\n$ar = array(5,2,4,6,1,3);\r\n$arr=insertSort($ar);\r\nprint_r($arr);&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	3、选择排序\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;//选择排序\r\nfunction selectSort(&amp;amp;$arr){\r\n	//定义进行交换的变量\r\n	$temp=0;\r\n	for($i=0;$i&amp;lt;count($arr)-1;$i++){\r\n		//假设$i就是最小值\r\n		$valmin=$arr[$i];\r\n		//记录最小值的下标\r\n		$minkey=$i;\r\n		for($j=$i+1;$j&amp;lt;count($arr);$j++){\r\n			//最小值大于后面的数就进行交换\r\n			if($valmin&amp;gt;$arr[$j]){\r\n				$valmin=$arr[$j];\r\n				$minkey=$j;\r\n			}\r\n		}\r\n		//进行交换\r\n		$temp=$arr[$i];\r\n		$arr[$i]=$arr[$minkey];\r\n		$arr[$minkey]=$temp;\r\n	}\r\n}\r\n\r\n$arr=array(7,5,0,4,-1);\r\nselectSort($arr);\r\nprint_r($arr);&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;', '1', '0', '1473905080', '小兔', null, '0', '75');
INSERT INTO `article` VALUES ('17', 'php 代码安全', '代码安全,php', '&lt;h4 style=&quot;text-indent:2em;color:#105CB6;font-size:14px;font-family:Arial, 宋体;background-color:#FFFFFF;&quot;&gt;\r\n&lt;/h4&gt;\r\n&lt;h4 style=&quot;text-indent:2em;color:#105CB6;font-size:14px;font-family:Arial, 宋体;background-color:#FFFFFF;&quot;&gt;\r\n&lt;/h4&gt;\r\n&lt;h4 style=&quot;text-indent:2em;color:#105CB6;font-size:14px;font-family:Arial, 宋体;background-color:#FFFFFF;&quot;&gt;\r\n&lt;/h4&gt;\r\n&lt;h2&gt;\r\n&lt;/h2&gt;\r\n&lt;h4 style=&quot;text-indent:24px;color:#105CB6;font-size:14px;font-family:Arial, 宋体;background-color:#FFFFFF;&quot;&gt;\r\n	绝不要信任外部数据或输入\r\n&lt;/h4&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	关于 Web 应用程序安全性，必须认识到的第一件事是不应该信任外部数据。外部数据（outside data） 包括不是由程序员在 PHP 代码中直接输入的任何数据。在采取措施确保安全之前，来自任何其他来源（比如 GET 变量、表单 POST、数据库、配置文件、会话变量或 cookie）的任何数据都是不可信任的。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	例如，下面的数据元素可以被认为是安全的，因为它们是在 PHP 中设置的。\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$myUsername = \'tmyer\';\r\n$arrayUsers = array(\'tmyer\', \'tom\', \'tommy\');\r\ndefine(&quot;GREETING&quot;, \'hello there\' . $myUsername);&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	但是，下面的数据元素都是有瑕疵的。\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$myUsername = $_POST[\'username\']; //tainted!\r\n$arrayUsers = array($myUsername, \'tom\', \'tommy\'); //tainted!\r\ndefine(&quot;GREETING&quot;, \'hello there\' . $myUsername); //tainted!&lt;/pre&gt;\r\n为什么第一个变量 $myUsername 是有瑕疵的？因为它直接来自表单 POST。用户可以在这个输入域中输入任何字符串，包括用来清除文件或运行以前上传的文件的恶意命令。您可能会问，“难道不能使用只接受字母 A-Z 的客户端（JavaScript）表单检验脚本来避免这种危险吗？”是的，这总是一个有好处的步骤，但是正如在后面会看到的，任何人都可以将任何表单下载到自己的机器上，修改它，然后重新提交他们需要的任何内容。\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	解决方案很简单：必须对 $_POST[\'username\'] 运行清理代码。如果不这么做，那么在使用 $myUsername 的任何其他时候（比如在数组或常量中），就可能污染这些对象。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	对用户输入进行清理的一个简单方法是，使用正则表达式来处理它。在这个示例中，只希望接受字母。将字符串限制为特定数量的字符，或者要求所有字母都是小写的，这可能也是个好主意。\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$myUsername = cleanInput($_POST[\'username\']); //clean!\r\n$arrayUsers = array($myUsername, \'tom\', \'tommy\'); //clean!\r\ndefine(&quot;GREETING&quot;, \'hello there\' . $myUsername); //clean!\r\nfunction cleanInput($input){\r\n    $clean = strtolower($input);\r\n    $clean = preg_replace(&quot;/[^a-z]/&quot;, &quot;&quot;, $clean);\r\n    $clean = substr($clean,0,12);\r\n    return $clean;\r\n}&lt;/pre&gt;\r\n&lt;h4 style=&quot;text-indent:24px;color:#105CB6;font-size:14px;font-family:Arial, 宋体;background-color:#FFFFFF;&quot;&gt;\r\n	禁用那些使安全性难以实施的 PHP 设置\r\n&lt;/h4&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	已经知道了不能信任用户输入，还应该知道不应该信任机器上配置 PHP 的方式。例如，要确保禁用 register_globals。如果启用了 register_globals，就可能做一些粗心的事情，比如使用 $variable 替换同名的 GET 或 POST 字符串。通过禁用这个设置，PHP 强迫您在正确的名称空间中引用正确的变量。要使用来自表单 POST 的变量，应该引用 $_POST[\'variable\']。这样就不会将这个特定变量误会成 cookie、会话或 GET 变量。\r\n&lt;/p&gt;\r\n&lt;h4 style=&quot;text-indent:24px;color:#105CB6;font-size:14px;font-family:Arial, 宋体;background-color:#FFFFFF;&quot;&gt;\r\n	如果不能理解它，就不能保护它\r\n&lt;/h4&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	一些开发人员使用奇怪的语法，或者将语句组织得很紧凑，形成简短但是含义模糊的代码。这种方式可能效率高，但是如果您不理解代码正在做什么，那么就无法决定如何保护它。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	例如，您喜欢下面两段代码中的哪一段？\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$input = (isset($_POST[\'username\']) ? $_POST[\'username\']:\'\');\r\n$input = \'\';\r\nif (isset($_POST[\'username\'])){\r\n    $input = $_POST[\'username\'];\r\n}else{\r\n    $input = \'\';\r\n}&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	在第二个比较清晰的代码段中，很容易看出 $input 是有瑕疵的，需要进行清理，然后才能安全地处理。\r\n&lt;/p&gt;\r\n&lt;h4 style=&quot;text-indent:24px;color:#105CB6;font-size:14px;font-family:Arial, 宋体;background-color:#FFFFFF;&quot;&gt;\r\n	“纵深防御” 是新的法宝\r\n&lt;/h4&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	本教程将用示例来说明如何保护在线表单，同时在处理表单的 PHP 代码中采用必要的措施。同样，即使使用 PHP regex 来确保 GET 变量完全是数字的，仍然可以采取措施确保 SQL 查询使用转义的用户输入。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	纵深防御不只是一种好思想，它可以确保您不会陷入严重的麻烦。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	既然已经讨论了基本规则，现在就来研究第一种威胁：SQL 注入攻击。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	在 SQL 注入攻击 中，用户通过操纵表单或 GET 查询字符串，将信息添加到数据库查询中。例如，假设有一个简单的登录数据库。这个数据库中的每个记录都有一个用户名字段和一个密码字段。构建一个登录表单，让用户能够登录。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	下面是一个简单的登录表单：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;brush: html;&quot;&gt;\r\n\r\n\r\n\r\n\r\n&lt;pre class=&quot;prettyprint lang-html&quot;&gt;&amp;lt;html&amp;gt;\r\n&amp;lt;head&amp;gt;\r\n&amp;lt;title&amp;gt;Login&amp;lt;/title&amp;gt;\r\n&amp;lt;/head&amp;gt;\r\n&amp;lt;body&amp;gt;\r\n&amp;lt;form action=&quot;verify.php&quot; method=&quot;post&quot;&amp;gt;\r\n&amp;lt;p&amp;gt;&amp;lt;label for=\'user\'&amp;gt;Username&amp;lt;/label&amp;gt;\r\n&amp;lt;input type=\'text\' name=\'user\' id=\'user\'/&amp;gt;\r\n&amp;lt;/p&amp;gt;\r\n&amp;lt;p&amp;gt;&amp;lt;label for=\'pw\'&amp;gt;Password&amp;lt;/label&amp;gt;\r\n&amp;lt;input type=\'password\' name=\'pw\' id=\'pw\'/&amp;gt;\r\n&amp;lt;/p&amp;gt;\r\n&amp;lt;p&amp;gt;&amp;lt;input type=\'submit\' value=\'login\'/&amp;gt;&amp;lt;/p&amp;gt;\r\n&amp;lt;/form&amp;gt;\r\n&amp;lt;/body&amp;gt;\r\n&amp;lt;/html&amp;gt; &lt;/pre&gt;\r\n&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	这个表单接受用户输入的用户名和密码，并将用户输入提交给名为 verify.php 的文件。在这个文件中，PHP 处理来自登录表单的数据，如下所示：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$okay = 0;\r\n$username = $_POST[\'user\'];\r\n$pw = $_POST[\'pw\'];\r\n$sql = &quot;select count(*) as ctr from users where username=\'&quot;.$username.&quot;\' and password=\'&quot;. $pw.&quot;\' limit 1&quot;; \r\n$result = mysql_query($sql);\r\nwhile ($data = mysql_fetch_object($result)){\r\n    if ($data-&amp;gt;ctr == 1){\r\n        //they\'re okay to enter the application!\r\n        $okay = 1;\r\n    }\r\n}\r\nif ($okay){\r\n    $_SESSION[\'loginokay\'] = true;\r\n    header(&quot;index.php&quot;);\r\n}else{\r\n    header(&quot;login.php&quot;);\r\n}&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	这段代码看起来没问题，对吗？世界各地成百（甚至成千）的 PHP/MySQL 站点都在使用这样的代码。它错在哪里？好，记住 “不能信任用户输入”。这里没有对来自用户的任何信息进行转义，因此使应用程序容易受到攻击。具体来说，可能会出现任何类型的 SQL 注入攻击。例如，如果用户输入 foo 作为用户名，输入 \' or \'1\'=\'1 作为密码，那么实际上会将以下字符串传递给 PHP，然后将查询传递给 MySQL：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$sql = &quot;select count(*) as ctr  from users where username=\'foo\' and password=\'\' or \'1\'=\'1\' limit 1&quot;; &lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	这个查询总是返回计数值 1，因此 PHP 会允许进行访问。通过在密码字符串的末尾注入某些恶意 SQL，黑客就能装扮成合法的用户。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	解决这个问题的办法是，将 PHP 的内置 mysql_real_escape_string() 函数用作任何用户输入的包装器。这个函数对字符串中的字符进行转义，使字符串不可能传递撇号等特殊字符并让 MySQL 根据特殊字符进行操作。下面展示了带转义处理的代码。\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$okay = 0;\r\n$username = $_POST[\'user\'];\r\n$pw = $_POST[\'pw\'];\r\n$sql = &quot;select count(*) as ctr from users where username=\'&quot;.mysql_real_escape_string($username).&quot;\' \r\nand password=\'&quot;. mysql_real_escape_string($pw).&quot;\' limit 1&quot;; \r\n$result = mysql_query($sql);\r\nwhile ($data = mysql_fetch_object($result)){\r\n    if ($data-&amp;gt;ctr == 1){\r\n        //they\'re okay to enter the application!\r\n        $okay = 1; \r\n    }\r\n}\r\nif ($okay){\r\n    $_SESSION[\'loginokay\'] = true;\r\n    header(&quot;index.php&quot;);\r\n}else{\r\n    header(&quot;login.php&quot;);\r\n}&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	使用 mysql_real_escape_string() 作为用户输入的包装器，就可以避免用户输入中的任何恶意 SQL 注入。如果用户尝试通过 SQL 注入传递畸形的密码，那么会将以下查询传递给数据库：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;brush: sql;&quot;&gt;\r\n\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;select count(*) as ctr from users where username=\'foo\' and password=\'\' or \'1\'=\'1\' limit 1&quot; &lt;/pre&gt;\r\n&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	数据库中没有任何东西与这样的密码匹配。仅仅采用一个简单的步骤，就堵住了 Web 应用程序中的一个大漏洞。这里得出的经验是，总是应该对 SQL 查询的用户输入进行转义。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	但是，还有几个安全漏洞需要堵住。下一项是操纵 GET 变量。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	防止用户操纵 GET 变量\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	上面我们探讨了，防止了用户使用畸形的密码进行登录。如果您很聪明，应该应用您学到的方法，确保对 SQL 语句的所有用户输入进行转义。但是，用户现在已经安全地登录了。用户拥有有效的密码，并不意味着他将按照规则行事 —— 他有很多机会能够造成损害。例如，应用程序可能允许用户查看特殊的内容。所有链接指向 template.php?pid=33 或 template.php?pid=321 这样的位置。URL 中问号后面的部分称为查询字符串。因为查询字符串直接放在 URL 中，所以也称为 GET 查询字符串。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	在 PHP 中，如果禁用了 register_globals，那么可以用 $_GET[\'pid\'] 访问这个字符串。\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;brush: php;&quot;&gt;\r\n\r\n\r\n\r\n\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$pid = $_GET[\'pid\'];\r\n//we create an object of a fictional class Page\r\n$obj = new Page;\r\n$content = $obj-&amp;gt;fetchPage($pid);\r\n//and now we have a bunch of PHP that displays the page&lt;/pre&gt;\r\n&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	这里有什么错吗？首先，这里隐含地相信来自浏览器的 GET 变量 pid 是安全的。这会怎么样呢？大多数用户没那么聪明，无法构造出语义攻击。但是，如果他们注意到浏览器的 URL 位置域中的 pid=33，就可能开始捣乱。如果他们输入另一个数字，那么可能没问题；但是如果输入别的东西，比如输入 SQL 命令或某个文件的名称（比如 /etc/passwd），或者搞别的恶作剧，比如输入长达 3,000 个字符的数值，那么会发生什么呢？\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	在这种情况下，要记住基本规则，不要信任用户输入。应用程序开发人员知道 template.php 接受的个人标识符（PID）应该是数字，所以可以使用 PHP 的 is_numeric() 函数确保不接受非数字的 PID，如下所示：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;brush: php;&quot;&gt;\r\n\r\n\r\n\r\n\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$pid = $_GET[\'pid\'];\r\nif (is_numeric($pid)){\r\n    //we create an object of a fictional class Page\r\n    $obj = new Page;\r\n    $content = $obj-&amp;gt;fetchPage($pid);\r\n    //and now we have a bunch of PHP that displays the page\r\n}else{\r\n    //didn\'t pass the is_numeric() test, do something else!\r\n}&lt;/pre&gt;\r\n&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	这个方法似乎是有效的，但是以下这些输入都能够轻松地通过 is_numeric() 的检查：\r\n&lt;/p&gt;\r\n&lt;ul class=&quot;article&quot; style=&quot;color:#121C46;font-family:Verdana, 宋体;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;li&gt;\r\n		100 （有效）\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		100.1 （不应该有小数位）\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		+0123.45e6 （科学计数法 —— 不好）\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		0xff33669f （十六进制 —— 危险！危险！）\r\n	&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	那么，有安全意识的 PHP 开发人员应该怎么做呢？多年的经验表明，最好的做法是使用正则表达式来确保整个 GET 变量由数字组成，如下所示：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	使用正则表达式限制 GET 变量：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;brush: php;&quot;&gt;\r\n\r\n\r\n\r\n\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$pid = $_GET[\'pid\'];\r\nif (strlen($pid)){\r\n    if (!ereg(&quot;^[0-9]+$&quot;,$pid)){\r\n        //do something appropriate, like maybe logging them out or sending them back to home page \r\n    }\r\n}else{\r\n    //empty $pid, so send them back to the home page\r\n}\r\n//we create an object of a fictional class Page, which is now\r\n//moderately protected from evil user input\r\n$obj = new Page;\r\n$content = $obj-&amp;gt;fetchPage($pid);\r\n//and now we have a bunch of PHP that displays the page&lt;/pre&gt;\r\n&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	需要做的只是使用 strlen() 检查变量的长度是否非零；如果是，就使用一个全数字正则表达式来确保数据元素是有效的。如果 PID 包含字母、斜线、点号或任何与十六进制相似的内容，那么这个例程捕获它并将页面从用户活动中屏蔽。如果看一下 Page 类幕后的情况，就会看到有安全意识的 PHP 开发人员已经对用户输入 $pid 进行了转义，从而保护了 fetchPage() 方法，如下所示：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	对 fetchPage() 方法进行转义：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;brush: php;&quot;&gt;\r\n\r\n\r\n\r\n\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;class Page{\r\n    function fetchPage($pid){\r\n        $sql = &quot;select pid,title,desc,kw,content,status from page where pid=\'&quot;.mysql_real_escape_string($pid).&quot;\'&quot;; \r\n    }\r\n}&lt;/pre&gt;\r\n&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	您可能会问，“既然已经确保 PID 是数字，那么为什么还要进行转义？” 因为不知道在多少不同的上下文和情况中会使用 fetchPage() 方法。必须在调用这个方法的所有地方进行保护，而方法中的转义体现了纵深防御的意义。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	如果用户尝试输入非常长的数值，比如长达 1000 个字符，试图发起缓冲区溢出攻击，那么会发生什么呢？下一节更详细地讨论这个问题，但是目前可以添加另一个检查，确保输入的 PID 具有正确的长度。您知道数据库的 pid 字段的最大长度是 5 位，所以可以添加下面的检查。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	使用正则表达式和长度检查来限制 GET 变量：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;brush: php;&quot;&gt;\r\n\r\n\r\n\r\n\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$pid = $_GET[\'pid\'];\r\nif (strlen($pid)){\r\n    if (!ereg(&quot;^[0-9]+$&quot;,$pid) &amp;amp;&amp;amp; strlen($pid) &amp;gt; 5){\r\n        //do something appropriate, like maybe logging them out or sending them back to home page\r\n    }\r\n} else {\r\n    //empty $pid, so send them back to the home page\r\n}\r\n    //we create an object of a fictional class Page, which is now\r\n    //even more protected from evil user input\r\n    $obj = new Page;\r\n    $content = $obj-&amp;gt;fetchPage($pid);\r\n    //and now we have a bunch of PHP that displays the page&lt;/pre&gt;\r\n&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	现在，任何人都无法在数据库应用程序中塞进一个 5,000 位的数值 —— 至少在涉及 GET 字符串的地方不会有这种情况。想像一下黑客在试图突破您的应用程序而遭到挫折时咬牙切齿的样子吧！而且因为关闭了错误报告，黑客更难进行侦察。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;缓冲区溢出攻击&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	缓冲区溢出攻击 试图使 PHP 应用程序中（或者更精确地说，在 Apache 或底层操作系统中）的内存分配缓冲区发生溢出。请记住，您可能是使用 PHP 这样的高级语言来编写 Web 应用程序，但是最终还是要调用 C（在 Apache 的情况下）。与大多数低级语言一样，C 对于内存分配有严格的规则。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	缓冲区溢出攻击向缓冲区发送大量数据，使部分数据溢出到相邻的内存缓冲区，从而破坏缓冲区或者重写逻辑。这样就能够造成拒绝服务、破坏数据或者在远程服务器上执行恶意代码。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	防止缓冲区溢出攻击的惟一方法是检查所有用户输入的长度。例如，如果有一个表单元素要求输入用户的名字，那么在这个域上添加值为 40 的 maxlength 属性，并在后端使用 substr() 进行检查。下面给出表单和 PHP 代码的简短示例。\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;brush: php;&quot;&gt;\r\n\r\n\r\n\r\n\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;if ($_POST[\'submit\'] == &quot;go&quot;){\r\n    $name = substr($_POST[\'name\'],0,40);\r\n}\r\n?&amp;gt;\r\n&amp;lt;form action=&quot;&amp;lt;?php echo $_SERVER[\'PHP_SELF\'];?&amp;gt;&quot; method=&quot;post&quot;&amp;gt;\r\n&amp;lt;p&amp;gt;&amp;lt;label for=&quot;name&quot;&amp;gt;Name&amp;lt;/label&amp;gt;\r\n&amp;lt;input type=&quot;text&quot; name=&quot;name&quot; id=&quot;name&quot; size=&quot;20&quot; maxlength=&quot;40&quot;/&amp;gt;&amp;lt;/p&amp;gt;\r\n&amp;lt;p&amp;gt;&amp;lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;go&quot;/&amp;gt;&amp;lt;/p&amp;gt;\r\n&amp;lt;/form&amp;gt; &lt;/pre&gt;\r\n&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	为什么既提供 maxlength 属性，又在后端进行 substr() 检查？因为纵深防御总是好的。浏览器防止用户输入 PHP 或 MySQL 不能安全地处理的超长字符串（想像一下有人试图输入长达 1,000 个字符的名称），而后端 PHP 检查会确保没有人远程地或者在浏览器中操纵表单数据。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	正如您看到的，这种方式与前面使用 strlen() 检查 GET 变量 pid 的长度相似。在这个示例中，忽略长度超过 5 位的任何输入值，但是也可以很容易地将值截短到适当的长度，如下改变输入的 GET 变量的长度所示：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;brush: php;&quot;&gt;\r\n\r\n\r\n\r\n\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$pid = $_GET[\'pid\'];\r\nif (strlen($pid)){\r\n    if (!ereg(&quot;^[0-9]+$&quot;,$pid)){\r\n        //if non numeric $pid, send them back to home page\r\n    }\r\n}else{\r\n    //empty $pid, so send them back to the home page\r\n}\r\n    //we have a numeric pid, but it may be too long, so let\'s check\r\n    if (strlen($pid)&amp;gt;5){\r\n        $pid = substr($pid,0,5);\r\n    }\r\n    //we create an object of a fictional class Page, which is now\r\n    //even more protected from evil user input\r\n    $obj = new Page;\r\n    $content = $obj-&amp;gt;fetchPage($pid);\r\n    //and now we have a bunch of PHP that displays the page&lt;/pre&gt;\r\n&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	注意，缓冲区溢出攻击并不限于长的数字串或字母串。也可能会看到长的十六进制字符串（往往看起来像 xA3 或 xFF）。记住，任何缓冲区溢出攻击的目的都是淹没特定的缓冲区，并将恶意代码或指令放到下一个缓冲区中，从而破坏数据或执行恶意代码。对付十六进制缓冲区溢出最简单的方法也是不允许输入超过特定的长度。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	如果您处理的是允许在数据库中输入较长条目的表单文本区，那么无法在客户端轻松地限制数据的长度。在数据到达 PHP 之后，可以使用正则表达式清除任何像十六进制的字符串。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	防止十六进制字符串：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;if ($_POST[\'submit\'] == &quot;go&quot;){\r\n    $name = substr($_POST[\'name\'],0,40);\r\n    //clean out any potential hexadecimal characters\r\n    $name = cleanHex($name);\r\n    //continue processing....\r\n}\r\nfunction cleanHex($input){\r\n    $clean = preg_replace(&quot;![][xX]([A-Fa-f0-9]{1,3})!&quot;, &quot;&quot;,$input);\r\n    return $clean; \r\n}\r\n?&amp;gt;\r\n&amp;lt;form action=&quot;&amp;lt;?php echo $_SERVER[\'PHP_SELF\'];?&amp;gt;&quot; method=&quot;post&quot;&amp;gt;\r\n&amp;lt;p&amp;gt;&amp;lt;label for=&quot;name&quot;&amp;gt;Name&amp;lt;/label&amp;gt;\r\n&amp;lt;input type=&quot;text&quot; name=&quot;name&quot; id=&quot;name&quot; size=&quot;20&quot; maxlength=&quot;40&quot;/&amp;gt;&amp;lt;/p&amp;gt;\r\n&amp;lt;p&amp;gt;&amp;lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;go&quot;/&amp;gt;&amp;lt;/p&amp;gt;\r\n&amp;lt;/form&amp;gt; &lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	您可能会发现这一系列操作有点儿太严格了。毕竟，十六进制串有合法的用途，比如输出外语中的字符。如何部署十六进制 regex 由您自己决定。比较好的策略是，只有在一行中包含过多十六进制串时，或者字符串的字符超过特定数量（比如 128 或 255）时，才删除十六进制串。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;跨站点脚本攻击&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	在跨站点脚本（XSS）攻击中，往往有一个恶意用户在表单中（或通过其他用户输入方式）输入信息，这些输入将恶 意的客户端标记插入过程或数据库中。例如，假设站点上有一个简单的来客登记簿程序，让访问者能够留下姓名、电子邮件地址和简短的消息。恶意用户可以利用这 个机会插入简短消息之外的东西，比如对于其他用户不合适的图片或将用户重定向到另一个站点的 Javascrīpt，或者窃取 cookie 信息。幸运的是，PHP 提供了 strip_tags() 函数，这个函数可以清除任何包围在 HTML 标记中的内容。strip_tags() 函数还允许提供允许标记的列表，比如 &amp;lt;b&amp;gt; 或 &amp;lt;i&amp;gt;。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;浏览器内的数据操纵&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	有一类浏览器插件允许用户篡改页面上的头部元素和表单元素。使用 Tamper Data（一个 Mozilla 插件），可以很容易地操纵包含许多隐藏文本字段的简单表单，从而向 PHP 和 MySQL 发送指令。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	用户在点击表单上的 Submit 之前，他可以启动 Tamper Data。在提交表单时，他会看到表单数据字段的列表。Tamper Data 允许用户篡改这些数据，然后浏览器完成表单提交。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	让我们回到前面建立的示例。已经检查了字符串长度、清除了 HTML 标记并删除了十六进制字符。但是，添加了一些隐藏的文本字段，如下所示\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;brush: php;&quot;&gt;\r\n\r\n\r\n\r\n\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;if ($_POST[\'submit\'] == &quot;go&quot;){\r\n    //strip_tags\r\n    $name = strip_tags($_POST[\'name\']);\r\n    $name = substr($name,0,40);\r\n    //clean out any potential hexadecimal characters\r\n    $name = cleanHex($name);\r\n    //continue processing....\r\n}\r\nfunction cleanHex($input){ \r\n    $clean = preg_replace(&quot;![][xX]([A-Fa-f0-9]{1,3})!&quot;, &quot;&quot;,$input);\r\n    return $clean;\r\n}\r\n?&amp;gt;\r\n&amp;lt;form action=&quot;&amp;lt;?php echo $_SERVER[\'PHP_SELF\'];?&amp;gt;&quot; method=&quot;post&quot;&amp;gt;\r\n&amp;lt;p&amp;gt;&amp;lt;label for=&quot;name&quot;&amp;gt;Name&amp;lt;/label&amp;gt;\r\n&amp;lt;input type=&quot;text&quot; name=&quot;name&quot; id=&quot;name&quot; size=&quot;20&quot; maxlength=&quot;40&quot;/&amp;gt;&amp;lt;/p&amp;gt;\r\n&amp;lt;input type=&quot;hidden&quot; name=&quot;table&quot; value=&quot;users&quot;/&amp;gt;\r\n&amp;lt;input type=&quot;hidden&quot; name=&quot;action&quot; value=&quot;create&quot;/&amp;gt;\r\n&amp;lt;input type=&quot;hidden&quot; name=&quot;status&quot; value=&quot;live&quot;/&amp;gt;\r\n&amp;lt;p&amp;gt;&amp;lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;go&quot;/&amp;gt;&amp;lt;/p&amp;gt;\r\n&amp;lt;/form&amp;gt; &lt;/pre&gt;\r\n&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	注意，隐藏变量之一暴露了表名：users。还会看到一个值为 create 的 action 字段。只要有基本的 SQL 经验，就能够看出这些命令可能控制着中间件中的一个 SQL 引擎。想搞大破坏的人只需改变表名或提供另一个选项，比如 delete。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	现在还剩下什么问题呢？远程表单提交。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;远程表单提交&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	Web 的好处是可以分享信息和服务。坏处也是可以分享信息和服务，因为有些人做事毫无顾忌。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	以表单为例。任何人都能够访问一个 Web 站点，并使用浏览器上的 File &amp;gt; Save As 建立表单的本地副本。然后，他可以修改 action 参数来指向一个完全限定的 URL（不指向 formHandler.php，而是指向 http://www.nowamagic.net/formHandler.php，因为表单在这个站点上），做他希望的任何修改，点击 Submit，服务器会把这个表单数据作为合法通信流接收。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	首先可能考虑检查 $_SERVER[\'HTTP_REFERER\']，从而判断请求是否来自自己的服务器，这种方法可以挡住大多数恶意用户，但是挡不住最高明的黑客。这些人足够聪明，能够篡改头部中的引用者信息，使表单的远程副本看起来像是从您的服务器提交的。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	处理远程表单提交更好的方式是，根据一个惟一的字符串或时间戳生成一个令牌，并将这个令牌放在会话变量和表单中。提交表单之后，检查两个令牌是否匹配。如果不匹配，就知道有人试图从表单的远程副本发送数据。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	要创建随机的令牌，可以使用 PHP 内置的 md5()、uniqid() 和 rand() 函数，如下所示：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;brush: php;&quot;&gt;\r\n\r\n\r\n\r\n\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;session_start();\r\nif ($_POST[\'submit\'] == &quot;go&quot;){\r\n    //check token\r\n    if ($_POST[\'token\'] == $_SESSION[\'token\']){\r\n        //strip_tags\r\n        $name = strip_tags($_POST[\'name\']);\r\n        $name = substr($name,0,40);\r\n        //clean out any potential hexadecimal characters\r\n        $name = cleanHex($name);\r\n        //continue processing....\r\n    }else{\r\n        //stop all processing! remote form posting attempt!\r\n    }\r\n}\r\n$token = md5(uniqid(rand(), true));\r\n$_SESSION[\'token\']= $token;\r\nfunction cleanHex($input){\r\n    $clean = preg_replace(&quot;![][xX]([A-Fa-f0-9]{1,3})!&quot;, &quot;&quot;,$input);\r\n    return $clean;\r\n}\r\n?&amp;gt;\r\n&amp;lt;form action=&quot;&amp;lt;?php echo $_SERVER[\'PHP_SELF\'];?&amp;gt;&quot; method=&quot;post&quot;&amp;gt;\r\n&amp;lt;p&amp;gt;&amp;lt;label for=&quot;name&quot;&amp;gt;Name&amp;lt;/label&amp;gt;\r\n&amp;lt;input type=&quot;text&quot; name=&quot;name&quot; id=&quot;name&quot; size=&quot;20&quot; maxlength=&quot;40&quot;/&amp;gt;&amp;lt;/p&amp;gt;\r\n&amp;lt;input type=&quot;hidden&quot; name=&quot;token&quot; value=&quot;&amp;lt;?php echo $token;?&amp;gt;&quot;/&amp;gt;\r\n&amp;lt;p&amp;gt;&amp;lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;go&quot;/&amp;gt;&amp;lt;/p&amp;gt;\r\n&amp;lt;/form&amp;gt; &lt;/pre&gt;\r\n&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	这种技术是有效的，这是因为在 PHP 中会话数据无法在服务器之间迁移。即使有人获得了您的 PHP 源代码，将它转移到自己的服务器上，并向您的服务器提交信息，您的服务器接收的也只是空的或畸形的会话令牌和原来提供的表单令牌。它们不匹配，远程表单提交就失败了。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, 宋体;text-indent:2em;color:#121C46;background-color:#FFFFFF;&quot;&gt;\r\n	转自:http://www.nowamagic.net/php/php_HowToWriteSafePhpCode.php\r\n&lt;/p&gt;', '1', '0', '1474167231', '小兔', null, '0', '107');
INSERT INTO `article` VALUES ('18', '返回顶部js特效', '返回顶部，返回顶部js特效，缓动返回顶部js特效', '&lt;h3&gt;\r\n	1.html部分\r\n&lt;/h3&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-html&quot;&gt;&amp;lt;div id=\'top\'&amp;gt;&amp;lt;/div&amp;gt;\r\n&amp;lt;div class=\'page\' style=\'background:#E2E3E4;\'&amp;gt;Page 1&amp;lt;/div&amp;gt;\r\n&amp;lt;div class=\'page\' style=\'background:#fff;\'&amp;gt;Page 2&amp;lt;/div&amp;gt;\r\n&amp;lt;div class=\'page\' style=\'background:#E2E3E4;\'&amp;gt;Page 3&amp;lt;/div&amp;gt;\r\n&amp;lt;div class=\'page\' style=\'background:#fff;\'&amp;gt;Page 4&amp;lt;/div&amp;gt;\r\n&amp;lt;div class=\'page\' style=\'background:#E2E3E4;\'&amp;gt;Page 5&amp;lt;/div&amp;gt;\r\n&amp;lt;div class=\'page\' style=\'background:#fff;\'&amp;gt;Page 6&amp;lt;/div&amp;gt;&lt;/pre&gt;\r\n&lt;h3&gt;\r\n	2.js部分\r\n&lt;/h3&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-js&quot;&gt;function myEvent(obj,ev,fn){\r\n	if(obj.attachEvent){\r\n		obj.attachEvent(\'on\'+ev,fn);\r\n	}else{\r\n		obj.addEventListener(ev,fn,false);\r\n	}\r\n}\r\nmyEvent(window,\'load\',function(){\r\n	var oRTT=document.getElementById(\'top\');\r\n	var pH=document.documentElement.clientHeight;\r\n	var timer=null;\r\n	var scrollTop;\r\n	window.onscroll=function(){\r\n		scrollTop=document.documentElement.scrollTop||document.body.scrollTop;\r\n		//if(scrollTop&amp;gt;=pH){\r\n		if(scrollTop&amp;gt;=10){\r\n			oRTT.style.display=\'block\';\r\n		}else{\r\n			oRTT.style.display=\'none\';\r\n		}\r\n		return scrollTop;\r\n	};\r\n	oRTT.onclick=function(){\r\n		clearInterval(timer);\r\n		timer=setInterval(function(){\r\n			var now=scrollTop;\r\n			var speed=(0-now)/10;\r\n			speed=speed&amp;gt;0?Math.ceil(speed):Math.floor(speed);\r\n			if(scrollTop==0){\r\n				clearInterval(timer);\r\n			}\r\n			document.documentElement.scrollTop=scrollTop+speed;\r\n			document.body.scrollTop=scrollTop+speed;\r\n		}, 30);\r\n	}\r\n});&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;a href=&quot;/Public/files/file/20160921/20160921065808_81818.zip&quot; target=&quot;_blank&quot;&gt;完整demo下载&lt;/a&gt; \r\n&lt;/p&gt;', '1', '0', '1474441114', '小兔', null, '0', '53');
INSERT INTO `article` VALUES ('19', 'mysql_fetch_array/assoc +while  第二次遍历为空', 'mysql_fetch_array/assoc +while', '&lt;p&gt;\r\n	&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt;mysql_fetch_array/assoc +while&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt; &lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$mysql_server_name=\'localhost\'; //改成自己的mysql数据库服务器\r\n$mysql_username=\'root\'; //改成自己的mysql数据库用户名\r\n$mysql_password=\'root\'; //改成自己的mysql数据库密码\r\n$mysql_database=\'tuer\'; //改成自己的mysql数据库名\r\n$conn=mysql_connect($mysql_server_name,$mysql_username,$mysql_password) or die(&quot;error connecting&quot;) ; //连接数据库\r\nmysql_query(&quot;set names \'utf8\'&quot;); \r\nmysql_select_db($mysql_database); //打开数据库\r\n$sql =&quot;select * from article limit 5 &quot;; //SQL语句\r\n$result = mysql_query($sql,$conn); //查询&lt;/pre&gt;\r\n开始输出\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt; &lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;var_dump($result);\r\nwhile ($res=mysql_fetch_assoc($result)){\r\n	echo $res[\'id\'];\r\n}\r\necho \'&amp;lt;br&amp;gt;\';\r\necho \'-----\';\r\necho \'&amp;lt;br&amp;gt;\';\r\nmysql_data_seek($result,0);\r\nwhile ($res=mysql_fetch_assoc($result)){\r\n	echo $res[\'id\'];\r\n}&lt;/pre&gt;\r\n输出结果：\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt; &lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;pre class=&quot;xdebug-var-dump&quot;&gt;&lt;b&gt;resource&lt;/b&gt;(&lt;i&gt;4&lt;/i&gt;&lt;span&gt;,&lt;/span&gt; &lt;i&gt;mysql result&lt;/i&gt;)\r\n&lt;/pre&gt;\r\n&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;12345&lt;/span&gt;&lt;br /&gt;\r\n&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;-----&lt;/span&gt; \r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt;什么情况，为什么第二次while时没有输出任何东西，我认为该输出12345，结果毛的没有。&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt;好吧只有度娘了，&lt;br /&gt;\r\n&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt;mysql_fetch_assoc:&lt;span style=&quot;color:#333333;font-family:&amp;quot;font-size:13px;line-height:20.8px;background-color:#F5F5F5;&quot;&gt;返回根据从结果集取得的行生成的关联数组，如果没有更多行则返回&amp;nbsp;&lt;/span&gt;&lt;strong&gt;FALSE&lt;/strong&gt;&lt;span style=&quot;color:#333333;font-family:&amp;quot;font-size:13px;line-height:20.8px;background-color:#F5F5F5;&quot;&gt;。&lt;/span&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;font-size:13px;line-height:19.5px;background-color:#F5F5F5;&quot;&gt;mysql_fetch_assoc继承了mysql_fetch_row的“指针”特性，即依次调用mysql_fetch_assoc将返回结果集中的下一行，那如果要重置mysql_fetch_assoc的指针，就要用到mysql_data_seek&lt;/span&gt;&lt;br /&gt;\r\n&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	好嘛我只有用一用mysql_data_seek\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;var_dump($result);\r\nwhile ($res=mysql_fetch_assoc($result)){\r\n	echo $res[\'id\'];\r\n}\r\necho \'&amp;lt;br&amp;gt;\';\r\necho \'-----\';\r\necho \'&amp;lt;br&amp;gt;\';\r\nmysql_data_seek($result,0);\r\nwhile ($res=mysql_fetch_assoc($result)){\r\n	echo $res[\'id\'];\r\n}&lt;/pre&gt;\r\n输出结果：\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;xdebug-var-dump&quot;&gt;&lt;b&gt;resource&lt;/b&gt;(&lt;i&gt;4&lt;/i&gt;&lt;span&gt;,&lt;/span&gt; &lt;i&gt;mysql result&lt;/i&gt;)\r\n&lt;/pre&gt;\r\n&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;12345&lt;/span&gt;&lt;br /&gt;\r\n&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;-----&lt;/span&gt;&lt;br /&gt;\r\n&lt;span style=&quot;font-family:Simsun;font-size:medium;line-height:normal;&quot;&gt;12345&lt;/span&gt; \r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt;果真出来了，看来真是指针的问题，这就相当于2次循环，实际上就是一个循环，第一循环结束了指针还是指着下一位，第二接着循环指针它不是从0开始的肯定没有值了。&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt;希望下次不要被坑了。&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt;在查百度的时候还有个&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt;mysql_fetch_array/assoc +foeach&amp;nbsp;&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt;只能遍历输出最后一条记录&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt; &lt;/span&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;foreach(mysql_fetch_array($result) as $key=&amp;gt;$row){\r\n	print_r($row);\r\n}\r\n&lt;/pre&gt;\r\n&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt;while可以循环读取数据库中的记录，而foreach&amp;nbsp;只能遍历已存在的数组或者对象&lt;/span&gt;&lt;br /&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;font-family:&amp;quot;line-height:26px;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt; \r\n&lt;/p&gt;', '1', '0', '1474446986', '小兔', null, '0', '46');
INSERT INTO `article` VALUES ('20', '点击a标签下载图片，不是查看', '下载图片', '&lt;p&gt;\r\n	前台\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-js&quot;&gt;&amp;lt;a href=&quot;/downImg?fn=20160930&quot;&amp;gt;&amp;lt;img src=&quot;/files/images/20160930.png&quot; title=&quot;点击下载&quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/pre&gt;\r\n后台\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;public function downImg(){\r\n    	$filename=$_GET[\'fn\'];\r\n    	$path=&quot;./files/images/&quot;;\r\n    	$url=$path.$filename;\r\n    	header(\'Content-type: image/png\');\r\n     	header(&quot;Content-Disposition: attachment; filename=\'$filename\'&quot;);\r\n     	readfile($url);\r\n    }&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;', '1', '0', '1475218307', '小兔', null, '0', '43');
INSERT INTO `article` VALUES ('21', 'PHP魔术方法和魔术常量介绍及使用', '魔术方法,魔术常量', '&lt;h2 id=&quot;mabov&quot; style=&quot;color:#222222;font-size:18px;font-family:&amp;quot;&quot;&gt;\r\n	魔术方法(&lt;span class=&quot;wp_keywordlink&quot;&gt;&lt;a href=&quot;http://www.codeceo.com/article/magic-javascript-ui.html&quot; target=&quot;_blank&quot;&gt;Magic&lt;/a&gt;&lt;/span&gt;&amp;nbsp;methods)\r\n&lt;/h2&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	PHP中把以两个下划线__开头的方法称为魔术方法，这些方法在PHP中充当了举足轻重的作用。 魔术方法包括：\r\n&lt;/p&gt;\r\n&lt;ul style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	&lt;li&gt;\r\n		__construct()，类的构造函数\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__destruct()，类的析构函数\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__call()，在对象中调用一个不可访问方法时调用\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__callStatic()，用静态方式中调用一个不可访问方法时调用\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__get()，获得一个类的成员变量时调用\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__set()，设置一个类的成员变量时调用\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__isset()，当对不可访问属性调用isset()或empty()时调用\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__unset()，当对不可访问属性调用unset()时被调用。\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__sleep()，执行serialize()时，先会调用这个函数\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__wakeup()，执行unserialize()时，先会调用这个函数\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__toString()，类被当成字符串时的回应方法\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__invoke()，调用函数的方式调用一个对象时的回应方法\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__set_state()，调用var_export()导出类时，此静态方法会被调用。\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__clone()，当对象复制完成时调用\r\n	&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;h3 id=&quot;tezyp&quot; style=&quot;color:#222222;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n	__construct()和__destruct()\r\n&lt;/h3&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	构造函数和析构函数应该不陌生，他们在对象创建和消亡时被调用。例如我们需要打开一个文件，在对象创建时打开，对象消亡时关闭\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;&amp;lt;?php \r\nclass FileRead { \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected $handle = NULL; \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function __construct(){ $this-&amp;gt;handle = fopen(...);\r\n    } \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function __destruct(){\r\n        fclose($this-&amp;gt;handle);\r\n    }\r\n} \r\n?&amp;gt;&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;brush: php; gutter: false; first-line: 1 hljs xml&quot;&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	这两个方法在继承时可以扩展，例如：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	&lt;span style=&quot;font-family:Consolas, Monaco, &amp;quot;font-size:13.2px;line-height:1.5;background-color:#F5F5F5;&quot;&gt; &lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;&amp;lt;?php\r\nclass TmpFileRead extends FileRead { \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function __construct(){ parent::__construct();\r\n    } \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function __destruct(){ parent::__destruct();\r\n    }\r\n} ?&amp;gt;&lt;/pre&gt;\r\n&lt;h3 id=&quot;ozasa&quot; style=&quot;color:#222222;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n	__call()和__callStatic()\r\n&lt;/h3&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	在对象中调用一个不可访问方法时会调用这两个方法，后者为静态方法。这两个方法我们在可变方法（Variable functions）调用中可能会用到。\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;brush: php; gutter: false; first-line: 1 hljs xml&quot;&gt;\r\n\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;&amp;lt;?php \r\nclass MethodTest { \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public function __call ($name, $arguments) { \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo &quot;Calling object method \'$name\' &quot;. implode(\', \', $arguments). &quot;n&quot;;\r\n    } \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static function __callStatic ($name, $arguments) { \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo &quot;Calling static method \'$name\' &quot;. implode(\', \', $arguments). &quot;n&quot;;\r\n    }\r\n}\r\n\r\n$obj = new MethodTest;\r\n$obj-&amp;gt;runTest(\'in object context\');\r\nMethodTest::runTest(\'in static context\'); \r\n?&amp;gt;&lt;/pre&gt;\r\n&lt;/pre&gt;\r\n&lt;h3 id=&quot;ejtvq&quot; style=&quot;color:#222222;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n	__get()，__set()，__isset()和__unset()\r\n&lt;/h3&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	当get/set一个类的成员变量时调用这两个函数。例如我们将对象变量保存在另外一个数组中，而不是对象本身的成员变量\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;brush: php; gutter: false; first-line: 1 hljs xml&quot;&gt;\r\n\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;&amp;lt;?php\r\nclass MethodTest { \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private $data = array(); \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public function __set($name, $value){ \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;data[$name] = $value;\r\n    } \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public function __get($name){ \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(array_key_exists($name, $this-&amp;gt;data)) return $this-&amp;gt;data[$name];\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return NULL;\r\n    }\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public function __isset($name){\r\n &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return isset($this-&amp;gt;data[$name])\r\n    }\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public function unset($name){ \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;unset($this-&amp;gt;data[$name]);\r\n    }\r\n} ?&amp;gt;&lt;/pre&gt;\r\n&lt;/pre&gt;\r\n&lt;h3 id=&quot;qukds&quot; style=&quot;color:#222222;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n	__sleep()和__wakeup()\r\n&lt;/h3&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	当我们在执行serialize()和unserialize()时，会先调用这两个函数。例如我们在序列化一个对象时，这个对象有一个数据库链接，想要在反序列化中恢复链接状态，则可以通过重构这两个函数来实现链接的恢复。例子如下：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;&amp;lt;?php \r\nclass Connection { \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected $link; \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private $server, $username, $password, $db; \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public function __construct($server, $username, $password, $db) { $this-&amp;gt;server = $server; \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;username = $username;\r\n &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;password = $password; \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;db = $db;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;connect();\r\n    } \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private function connect() { \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;link = mysql_connect($this-&amp;gt;server, $this-&amp;gt;username, $this-&amp;gt;password);\r\n        mysql_select_db($this-&amp;gt;db, $this-&amp;gt;link);\r\n    } \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public function __sleep() {\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return array(\'server\', \'username\', \'password\', \'db\');\r\n    } \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public function __wakeup() { \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$this-&amp;gt;connect();\r\n    }\r\n} ?&amp;gt;&lt;/pre&gt;\r\n&lt;h3 id=&quot;vzees&quot; style=&quot;color:#222222;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n	__toString()\r\n&lt;/h3&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	对象当成字符串时的回应方法。例如使用echo $obj;来输出一个对象\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;&amp;lt;?php // Declare a simple \r\nclass class TestClass { \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public function __toString() { \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return \'this is a object\';\r\n    }\r\n}\r\n\r\n$class = new TestClass(); echo $class; \r\n?&amp;gt;&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;brush: php; gutter: false; first-line: 1 hljs xml&quot;&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	这个方法只能返回字符串，而且不可以在这个方法中抛出异常，否则会出现致命错误。\r\n&lt;/p&gt;\r\n&lt;h3 id=&quot;jhhyi&quot; style=&quot;color:#222222;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n	__invoke()\r\n&lt;/h3&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	调用函数的方式调用一个对象时的回应方法。如下\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	&lt;span style=&quot;color:#222222;font-family:&amp;quot;font-size:14px;line-height:1.5;&quot;&gt; &lt;/span&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;&amp;lt;?php \r\nclass CallableClass {\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function __invoke() {\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;echo \'this is a object\';\r\n    }\r\n}\r\n$obj = new CallableClass;\r\nvar_dump(is_callable($obj));\r\n ?&amp;gt;&lt;/pre&gt;\r\n&lt;br /&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	&lt;span style=&quot;color:#222222;font-family:&amp;quot;font-size:14px;line-height:1.5;&quot;&gt;__set_state()&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;line-height:1.5;&quot;&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	调用var_export()导出类时，此静态方法会被调用。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;&amp;lt;?php \r\nclass A { \r\npublic $var1; \r\npublic $var2; \r\npublic static function __set_state ($an_array) {\r\n        $obj = new A;\r\n        $obj-&amp;gt;var1 = $an_array[\'var1\'];\r\n        $obj-&amp;gt;var2 = $an_array[\'var2\']; return $obj;\r\n    }\r\n}\r\n\r\n$a = new A;\r\n$a-&amp;gt;var1 = 5;\r\n$a-&amp;gt;var2 = \'foo\';\r\nvar_dump(var_export($a)); \r\n?&amp;gt;&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;h3 id=&quot;ycrcl&quot; style=&quot;color:#222222;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n	__clone()\r\n&lt;/h3&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	当对象复制完成时调用。例如在&lt;span class=&quot;wp_keywordlink&quot;&gt;&lt;a href=&quot;http://www.codeceo.com/article/category/develop/design-patterns&quot; target=&quot;_blank&quot;&gt;设计模式&lt;/a&gt;&lt;/span&gt;详解及PHP实现：单例模式一文中提到的单例模式实现方式，利用这个函数来防止对象被克隆。\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;brush: php; gutter: false; first-line: 1 hljs xml&quot;&gt;\r\n\r\n\r\n&lt;pre class=&quot;prettyprint lang-js&quot;&gt;&amp;lt;?php \r\npublic class Singleton { \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static $_instance = NULL; // 私有构造方法 \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private function __construct() {}\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static function getInstance() { \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (is_null(self::$_instance)) { \r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self::$_instance = new Singleton();\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } return self::$_instance;\r\n    } // 防止克隆实例 \r\npublic function __clone(){ die(\'Clone is not allowed.\' . E_USER_ERROR);}\r\n} ?&amp;gt;&lt;/pre&gt;\r\n&lt;br /&gt;\r\n&lt;/pre&gt;\r\n&lt;h2 id=&quot;rfjwk&quot; style=&quot;color:#222222;font-size:18px;font-family:&amp;quot;&quot;&gt;\r\n	魔术常量(Magic constants)\r\n&lt;/h2&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	PHP中的常量大部分都是不变的，但是有8个常量会随着他们所在代码位置的变化而变化，这8个常量被称为魔术常量。\r\n&lt;/p&gt;\r\n&lt;ul style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	&lt;li&gt;\r\n		__LINE__，文件中的当前行号\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__FILE__，文件的完整路径和文件名\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__DIR__，文件所在的目录\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__FUNCTION__，函数名称\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__CLASS__，类的名称\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__TRAIT__，Trait的名字\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__METHOD__，类的方法名\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		__NAMESPACE__，当前命名空间的名称\r\n	&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	这些魔术常量常常被用于获得当前环境信息或者记录日志。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#444444;font-family:&amp;quot;font-size:14px;&quot;&gt;\r\n	原文地址：http://www.codeceo.com/article/php-magic-method-and-var.html\r\n&lt;/p&gt;', '1', '0', '1475920928', '小兔', null, '0', '38');
INSERT INTO `article` VALUES ('23', 'JavaScript 事件参考', 'js事件，js鼠标事件', '&lt;p style=&quot;font-family:Verdana, Arial, 宋体;background-color:#F9F9F9;&quot;&gt;\r\n	HTML 4.0 的新特性之一是有能力使 HTML 事件触发浏览器中的动作（action），比如当用户点击某个 HTML 元素时启动一段 JavaScript。下面是一个属性列表，这些属性可插入 HTML 标签来定义事件动作。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Verdana, Arial, 宋体;background-color:#F9F9F9;&quot;&gt;\r\n	FF：firefox，N：早期的浏览器\r\n&lt;/p&gt;\r\n&lt;table class=&quot;dataintable&quot; style=&quot;margin:10px 0px 0px;padding:0px;border:1px solid #AAAAAA;width:709px;color:#000000;font-family:Verdana, Arial, 宋体;font-size:12px;background-color:#F9F9F9;&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;th style=&quot;border:1px solid #AAAAAA;vertical-align:baseline;text-align:left;background-color:#D5D5D5;&quot;&gt;\r\n				属性\r\n			&lt;/th&gt;\r\n			&lt;th style=&quot;border:1px solid #AAAAAA;vertical-align:baseline;text-align:left;background-color:#D5D5D5;&quot;&gt;\r\n				当以下情况发生时，出现此事件\r\n			&lt;/th&gt;\r\n			&lt;th style=&quot;border:1px solid #AAAAAA;vertical-align:baseline;text-align:left;background-color:#D5D5D5;&quot;&gt;\r\n				FF\r\n			&lt;/th&gt;\r\n			&lt;th style=&quot;border:1px solid #AAAAAA;vertical-align:baseline;text-align:left;background-color:#D5D5D5;&quot;&gt;\r\n				N\r\n			&lt;/th&gt;\r\n			&lt;th style=&quot;border:1px solid #AAAAAA;vertical-align:baseline;text-align:left;background-color:#D5D5D5;&quot;&gt;\r\n				IE\r\n			&lt;/th&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onabort\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				图像加载被中断\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				3\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				4\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onblur\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				元素失去焦点\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				2\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				3\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onchange\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				用户改变域的内容\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				2\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				3\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onclick\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				鼠标点击某个对象\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				2\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				3\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				ondblclick\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				鼠标双击某个对象\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				4\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				4\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onerror\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				当加载文档或图像时发生某个错误\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				3\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				4\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onfocus\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				元素获得焦点\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				2\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				3\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onkeydown\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				某个键盘的键被按下\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				4\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				3\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onkeypress\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				某个键盘的键被按下或按住\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				4\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				3\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onkeyup\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				某个键盘的键被松开\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				4\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				3\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onload\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				某个页面或图像被完成加载\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				2\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				3\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onmousedown\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				某个鼠标按键被按下\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				4\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				4\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onmousemove\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				鼠标被移动\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				6\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				3\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onmouseout\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				鼠标从某元素移开\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				4\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				4\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onmouseover\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				鼠标被移到某元素之上\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				2\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				3\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onmouseup\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				某个鼠标按键被松开\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				4\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				4\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onreset\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				重置按钮被点击\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				3\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				4\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onresize\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				窗口或框架被调整尺寸\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				4\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				4\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onselect\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				文本被选定\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				2\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				3\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onsubmit\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				提交按钮被点击\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				2\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				3\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				onunload\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				用户退出页面\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				1\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				2\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;border:1px solid #AAAAAA;vertical-align:text-top;background-color:#EFEFEF;&quot;&gt;\r\n				3\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;span id=&quot;__kindeditor_bookmark_start_5__&quot;&gt;&lt;/span&gt;', '1', '0', '1476170089', '小兔', null, '0', '38');
INSERT INTO `article` VALUES ('22', 'JS/HTML 保存图片到本地：HTML &lt;a&gt; download 属性', '点击a标签直接下载图片', '&lt;p&gt;\r\n	可以利用html中的a标签加上download属性下载属性\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-html&quot;&gt;&amp;lt;a  href=&quot;http://wpa.qq.com/pa?p=1:714115852:16&quot; download=&quot;aaa&quot;&amp;gt;\r\n	&amp;lt;img  border=&quot;0&quot; SRC=http://wpa.qq.com/pa?p=1:714115852:16 alt=&quot;点击发送消息给我&quot;&amp;gt;\r\n&amp;lt;/a&amp;gt;&lt;/pre&gt;\r\n&lt;span style=&quot;font-family:&amp;quot;font-size:15px;line-height:25px;background-color:#FFFFFF;&quot;&gt;但是会有不兼容的问题，当前好像只支持 Chrome &amp;nbsp;和 Firefox 浏览器，&lt;/span&gt; \r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	解决方法：\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	在head中引入js\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-js&quot;&gt;&amp;lt;script src=”http://html5shiv.googlecode.com/svn/trunk/html5.js”&amp;gt;&amp;lt;/script&amp;gt;&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;a href=&quot;/Public/files/file/20161012/20161012080451_54199.zip&quot; target=&quot;_blank&quot;&gt;html5.js下载&lt;/a&gt; \r\n&lt;/p&gt;', '1', '0', '1476259510', '小兔', null, '0', '44');
INSERT INTO `article` VALUES ('24', 'PHP如何释放内存之unset销毁变量并释放内存详解', 'unset销毁变量', '&lt;p style=&quot;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	PHP的unset()函数用来清除、销毁变量，不用的变量，我们可以用unset()将它销毁。但是某些时候，用unset()却无法达到销毁变量占用的内存！我们先看一个例子：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;&amp;lt;?php\r\n$s = str_repeat(\'1\',255);   //产生由255个1组成的字符串\r\n$m = memory_get_usage();    //获取当前占用内存\r\nunset($s);\r\n$mm = memory_get_usage();   //unset()后再查看当前占用内存\r\necho $m-$mm;\r\n?&amp;gt;&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;div style=&quot;margin:0px;padding:0px;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;div id=&quot;highlighter_261900&quot; class=&quot;syntaxhighlighter  php&quot; style=&quot;padding:0px;margin:0.5em 0px !important;font-size:1em !important;&quot;&gt;\r\n	&lt;/div&gt;\r\n&lt;/div&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span style=&quot;line-height:1.6em;&quot;&gt;最后输出unset()之前占用内存减去unset()之后占用内存，如果是正数，那么说明unset($s)已经将$s从内存中销毁(或者 说，unset()之后内存占用减少了)，可是我在PHP5和windows平台下，得到的结果是：-48。这是否可以说明，unset($s)并没有起 到销毁变量$s所占用内存的作用呢？我们再作下面的例子：&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;div style=&quot;margin:0px;padding:0px;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;div id=&quot;highlighter_299905&quot; class=&quot;syntaxhighlighter  php&quot; style=&quot;padding:0px;margin:0.5em 0px !important;font-size:1em !important;&quot;&gt;\r\n	&lt;/div&gt;\r\n&lt;/div&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;&amp;lt;?php\r\n$s = str_repeat(\'1\',256);   //产生由256个1组成的字符串\r\n$m = memory_get_usage();    //获取当前占用内存\r\nunset($s);\r\n$mm = memory_get_usage();   //unset()后再查看当前占用内存\r\necho $m-$mm;\r\n?&amp;gt;&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	这个例子，和上面的例子几乎相同，唯一的不同是，$s由256个1组成，即比第一个例子多了一个1，得到结果是：224。这是否可以说明，unset($s)已经将$s所占用的内存销毁了？\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	通过上面两个例子，我们可以得出以下结论：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span style=&quot;text-decoration:underline;&quot;&gt;&lt;strong&gt;结论一、unset()函数只能在变量值占用内存空间超过256字节时才会释放内存空间。&lt;/strong&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	那么是不是只要变量值超过256，使用unset就可以释放内存空间呢？我们再通过一个例子来测试一下：\r\n&lt;/p&gt;\r\n&lt;div style=&quot;margin:0px;padding:0px;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;div id=&quot;highlighter_57584&quot; class=&quot;syntaxhighlighter  php&quot; style=&quot;padding:0px;margin:0.5em 0px !important;font-size:1em !important;&quot;&gt;\r\n	&lt;/div&gt;\r\n&lt;/div&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;&amp;lt;?php\r\n$s = str_repeat(\'1\',256);       //这和第二个例子完全相同\r\n$p = &amp;amp;$s;\r\n$m = memory_get_usage();\r\nunset($s);                      //销毁$s\r\n$mm = memory_get_usage();\r\necho $p . \'&amp;lt;br /&amp;gt;\';\r\necho $m-$mm;\r\n?&amp;gt;&lt;/pre&gt;\r\n刷新页面，我们看到第一行有256个1，第二行是-48，按理说我们已经销毁了$s，而$p只是引用$s的变量，应该是没有内容了，另外，unset($s)后内存占用却比unset()前增加了！现在我们再做以下的例子：\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;&amp;lt;?php\r\n$s = str_repeat(\'1\', 256);      //这和第二个例子完全相同\r\n$p = &amp;amp;$s;\r\n$m = memory_get_usage();\r\n$s = null;                      //设置$s为null\r\n$mm = memory_get_usage();\r\necho $p . \'&amp;lt;br /&amp;gt;\';\r\necho $m-$mm;\r\n?&amp;gt;&lt;/pre&gt;\r\n现在刷新页面，我们看到，输出$p已经是没有内容了，unset()前后内存占用量之差是224，即已经清除了变量占用的内存。本例中的$s=null也可以换成unset()，如下：\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;&amp;lt;?php\r\n$s = str_repeat(\'1\', 256);      //这和第二个例子完全相同\r\n$p = &amp;amp;$s;\r\n$m = memory_get_usage();\r\nunset($s);                      //销毁$s\r\nunset($p);\r\n$mm = memory_get_usage();\r\necho $p . \'&amp;lt;br /&amp;gt;\';\r\necho $m-$mm;\r\n?&amp;gt;&lt;/pre&gt;\r\n我们将$s和$p都使用unset()销毁，这时再看内存占用量之差也是224，说明这样也可以释放内存。那么，我们可以得到另外一条结论：\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span style=&quot;text-decoration:underline;&quot;&gt;&lt;strong&gt;结论二、只有当指向该变量的所有变量（如引用变量）都被销毁后，才会释放内存。&lt;/strong&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	相信经过本文的例子后，大家应该对unset()有所了解了，最起码，本人用unset()也是为了在变量不起作用时，释放内存。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	原文地址：http://www.cnblogs.com/52php/p/5658322.html\r\n&lt;/p&gt;', '1', '0', '1476437867', '小兔', null, '0', '42');
INSERT INTO `article` VALUES ('26', 'css 在不设置div宽度的情况下让div居中', 'css 在不设置div宽度的情况下让div居中', '&lt;p&gt;\r\n	&lt;span style=&quot;line-height:1.5;&quot;&gt;在不设置div宽度的情况下让div居中&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;span style=&quot;line-height:1.5;&quot;&gt;&lt;span id=&quot;__kindeditor_bookmark_start_0__&quot;&gt;&lt;/span&gt;text-align:left;zoom:1;display:inline-block;*display:inline;&lt;br /&gt;\r\n&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-html&quot;&gt;&amp;lt; !DOCTYPE html &amp;gt; \r\n&amp;lt; html &amp;gt; \r\n&amp;lt; head &amp;gt; \r\n&amp;lt; meta charset=&quot;utf-8&quot; / &amp;gt; \r\n&amp;lt; style type=&quot;text/css&quot; &amp;gt; \r\n\r\n\r\n.parent{\r\ntext-align:center;\r\n}\r\n.content{\r\nborder:1px solid red;\r\ntext-align:left;\r\nzoom:1;\r\ndisplay:inline-block;\r\n*display:inline;\r\n}\r\n&amp;lt; /style &amp;gt; \r\n&amp;lt; /head &amp;gt; \r\n&amp;lt; body &amp;gt; \r\n&amp;lt; div class=&quot;parent&quot; &amp;gt; \r\n&amp;lt; div class=&quot;content&quot; &amp;gt; \r\n&amp;lt;a href=&quot;http://www.baidu.com&quot;&amp;gt;aaaaaaaa&amp;lt;/a&amp;gt;aaaa\r\n&amp;lt; /div &amp;gt; \r\n&amp;lt; /div &amp;gt; \r\n&amp;lt; /body &amp;gt; \r\n&amp;lt; /html &amp;gt;&lt;/pre&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;', '1', '0', '1478254086', '小兔', null, '0', '39');
INSERT INTO `article` VALUES ('27', 'redis与DB数据同步问题', 'redis', '&lt;p style=&quot;color:#555555;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	最近做的一个项目中很多地方用到了&lt;a href=&quot;http://lib.csdn.net/base/redis&quot; class=&quot;replace_word&quot; target=&quot;_blank&quot;&gt;Redis&lt;/a&gt;，其中纠结了一下redis的数据持久化问题，毕竟是缓存，数据随时都有可能丢失，虽然概率不大，况且redis还会将数据持久到安装路径的一个文件中，但还是要保证缓存数据与持久化数据的一致性，这个问题总结了一下（看到了一个不错的博文），其实就是读和写，还有就是要注意谁先谁后的问题。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#555555;font-family:&amp;quot;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;div id=&quot;content&quot; style=&quot;margin:10px auto 0px;padding:5px;border:0px;font-size:14px;font-family:simsun, Arial, Helvetica, sans-serif;vertical-align:baseline;color:#444444;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;div id=&quot;con_top&quot; style=&quot;margin:0px;padding:0px;border:0px;font-weight:inherit;font-style:inherit;font-family:inherit;vertical-align:baseline;&quot;&gt;\r\n	&lt;/div&gt;\r\n	&lt;p style=&quot;font-weight:inherit;font-style:inherit;font-family:inherit;vertical-align:baseline;&quot;&gt;\r\n		　　&lt;strong&gt;Redis&lt;/strong&gt;&amp;nbsp;是一个高性能的key-value&lt;a href=&quot;http://lib.csdn.net/base/mysql&quot; class=&quot;replace_word&quot; target=&quot;_blank&quot;&gt;数据库&lt;/a&gt;。 redis的出现，很大程度补偿了memcached这类key-value存储的不足，在部 分场合可以对关系数据库起到很好的补充作用。它提供了&lt;a href=&quot;http://lib.csdn.net/base/python&quot; class=&quot;replace_word&quot; target=&quot;_blank&quot;&gt;Python&lt;/a&gt;，Ruby，Erlang，&lt;a href=&quot;http://lib.csdn.net/base/php&quot; class=&quot;replace_word&quot; target=&quot;_blank&quot;&gt;PHP&lt;/a&gt;客户端，使用很方便。\r\n	&lt;/p&gt;\r\n	&lt;p style=&quot;font-weight:inherit;font-style:inherit;font-family:inherit;vertical-align:baseline;&quot;&gt;\r\n		　　1. 按照我们一般的使用Redis的场景应该是这样的：\r\n	&lt;/p&gt;\r\n	&lt;p align=&quot;center&quot; style=&quot;font-weight:inherit;font-style:inherit;font-family:inherit;vertical-align:baseline;&quot;&gt;\r\n		&lt;img src=&quot;/Public/files/image/20161108/20161108100452_79045.jpg&quot; alt=&quot;&quot; /&gt; \r\n	&lt;/p&gt;\r\n	&lt;p style=&quot;font-weight:inherit;font-style:inherit;font-family:inherit;vertical-align:baseline;&quot;&gt;\r\n		　　也就是说：我们会先去redis中判断数据是否存在，如果存在，则直接返回缓存好的数据。而如果不存在的话，就会去数据库中，读取数据，并把数据缓存到Redis中。\r\n	&lt;/p&gt;\r\n	&lt;p style=&quot;font-weight:inherit;font-style:inherit;font-family:inherit;vertical-align:baseline;&quot;&gt;\r\n		　　适用场合：如果数据量比较大，但不是经常更新的情况(比如用户排行)\r\n	&lt;/p&gt;\r\n	&lt;p style=&quot;font-weight:inherit;font-style:inherit;font-family:inherit;vertical-align:baseline;&quot;&gt;\r\n		　　2. 而第二种Redis的使用，跟第一种的情况完成不同，具体的情况请看：\r\n	&lt;/p&gt;\r\n	&lt;p align=&quot;center&quot; style=&quot;font-weight:inherit;font-style:inherit;font-family:inherit;vertical-align:baseline;&quot;&gt;\r\n		&lt;img src=&quot;/Public/files/image/20161108/20161108100501_88746.png&quot; alt=&quot;&quot; /&gt; \r\n	&lt;/p&gt;\r\n	&lt;p style=&quot;font-weight:inherit;font-style:inherit;font-family:inherit;vertical-align:baseline;&quot;&gt;\r\n		　　这里我们会先去redis中判断数据是否存在，如果存在，则直接更新对应的数据(这一步会把对应更新过的key记录下来，比如也保存到redis中比如：key为：save_update_keys【用lpush列表记录】)，并把更新后的数据返回给页面。而如果不存在的话，就会去先更新数据库中内容，然后把数据保存一份到Redis中。后面的工作：后台会有相关机制把Redis中的save_update_keys存储的key，分别读取出来，找到对应的数据，更新到DB中。\r\n	&lt;/p&gt;\r\n	&lt;p style=&quot;font-weight:inherit;font-style:inherit;font-family:inherit;vertical-align:baseline;&quot;&gt;\r\n		　　优点：这个流程的主要目的是把Redis当作数据库使用，更新获取数据比DB快。非常适合&lt;a href=&quot;http://lib.csdn.net/base/spark&quot; class=&quot;replace_word&quot; target=&quot;_blank&quot;&gt;大数据&lt;/a&gt;量的频繁变动(比如微博)。\r\n	&lt;/p&gt;\r\n	&lt;p style=&quot;font-weight:inherit;font-style:inherit;font-family:inherit;vertical-align:baseline;&quot;&gt;\r\n		　　缺点：对Redis的依赖很大，要做好宕机时的数据保存。(不过可以使用redis的快照AOF，快速恢复的话，应该不会有多大影响，因为就算Redis不工作了，也不会影响后续数据的处理。)\r\n	&lt;/p&gt;\r\n	&lt;p style=&quot;font-weight:inherit;font-style:inherit;font-family:inherit;vertical-align:baseline;&quot;&gt;\r\n		　　难点：在前期规划key的格式，存储类型很重要，因为这会影响能否把数据同步到DB。&lt;br /&gt;\r\n&lt;br /&gt;\r\n来源：http://blog.csdn.net/chengguotao/article/details/52969550&lt;span id=&quot;__kindeditor_bookmark_end_20__&quot;&gt;&lt;/span&gt; \r\n	&lt;/p&gt;\r\n&lt;/div&gt;', '1', '0', '1478599581', '小兔', null, '0', '36');
INSERT INTO `article` VALUES ('28', 'PHP中出现BOM字符ufeff，PHP去掉诡异的BOM ufeff​', 'bom文件，去除头文件bom', '&lt;p&gt;\r\n	PHP中出现BOM字符ufeff，PHP去掉诡异的BOM ufeff&lt;span id=&quot;__kindeditor_bookmark_end_17__&quot;&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	去除头文件bom\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint lang-php&quot;&gt;&amp;lt;?php\r\nheader(\'content-Type: text/html; charset=utf-8\');\r\nif(isset($_GET[\'dir\'])){ //设置文件目录，如果没有设置，则自动设置为当前文件所在目录\r\n    $basedir=$_GET[\'dir\'];\r\n}else{\r\n    $basedir=\'.\';\r\n}\r\n$auto=1;/*设置为1标示检测BOM并去除，设置为0标示只进行BOM检测，不去除*/\r\n\r\necho \'当前查找的目录为：\'.$basedir.\'当前的设置是：\';\r\necho $auto?\'检测文件BOM同时去除检测到BOM文件的BOM&amp;lt;br /&amp;gt;\':\'只检测文件BOM不执行去除BOM操作&amp;lt;br /&amp;gt;\';\r\n\r\ncheckdir($basedir);\r\nfunction checkdir($basedir){\r\n    if($dh=opendir($basedir)){\r\n        while (($file=readdir($dh)) !== false){\r\n            if($file != \'.\' &amp;amp;&amp;amp; $file != \'..\'){\r\n                if(!is_dir($basedir.\'/\'.$file)){\r\n                    echo \'文件: \'.$basedir.\'/\'.$file .checkBOM($basedir.\'/\'.$file).\' &amp;lt;br&amp;gt;\';\r\n                }else{\r\n                    $dirname=$basedir.\'/\'.$file;\r\n                    checkdir($dirname);\r\n                }\r\n            }\r\n        }\r\n        closedir($dh);\r\n    }\r\n}\r\nfunction checkBOM($filename){\r\n    global $auto;\r\n    $contents=file_get_contents($filename);\r\n    $charset[1]=substr($contents,0,1);\r\n    $charset[2]=substr($contents,1,1);\r\n    $charset[3]=substr($contents,2,1);\r\n    if(ord($charset[1])==239 &amp;amp;&amp;amp; ord($charset[2])==187 &amp;amp;&amp;amp; ord($charset[3])==191){\r\n        if($auto==1){\r\n            $rest=substr($contents,3);\r\n            rewrite($filename,$rest);\r\n            return (\' &amp;lt;font color=red&amp;gt;找到BOM并已自动去除&amp;lt;/font&amp;gt;\');\r\n        }else{\r\n            return (\' &amp;lt;font color=red&amp;gt;找到BOM&amp;lt;/font&amp;gt;\');\r\n        }\r\n    }else{\r\n        return (\' 没有找到BOM\');\r\n    }\r\n}\r\nfunction rewrite($filename,$data){\r\n    $filenum=fopen($filename,\'w\');\r\n    flock($filenum,LOCK_EX);\r\n    fwrite($filenum,$data);\r\n    fclose($filenum);\r\n}\r\n?&amp;gt;&lt;/pre&gt;\r\n来源：http://blog.csdn.net/fansunion/article/details/45540001\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;', '1', '0', '1478599707', '小兔', null, '0', '37');
INSERT INTO `article` VALUES ('29', 'PHP服务器Apache虚拟主机配置', 'apache,虚拟主机', '&lt;p style=&quot;font-family:Arial;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;一，修改httpd.conf&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Arial;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n	找到Apache安装目录下confhttpd.conf文件，分别去掉下面两行文字前面的#号如下：&lt;br /&gt;\r\n启用apache的虚拟主机功能&lt;br /&gt;\r\nLoadModule vhost_alias_module modules/mod_vhost_alias.so&lt;br /&gt;\r\n使httpd-vhosts.conf文件起作用&lt;br /&gt;\r\nInclude conf/extra/httpd-vhosts.conf&lt;br /&gt;\r\n若多端口的话，需要增加Listen如：&lt;br /&gt;\r\nListen 80&lt;br /&gt;\r\nListen 8888&lt;br /&gt;\r\n&lt;strong&gt;二，修改httpd-vhosts.conf&lt;br /&gt;\r\n&lt;/strong&gt;找到Apache安装目录下confextra&lt;strong&gt;httpd-vhosts.conf&lt;/strong&gt;文件&lt;br /&gt;\r\n&amp;nbsp;NameVirutalHost *:80 指定某个IP的某个端口是哪个主机，保持默认即可，新版的Apache已经去掉了这一项&lt;br /&gt;\r\n#域名形式&lt;br /&gt;\r\n&amp;lt;VirtualHost *:80&amp;gt;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp; DocumentRoot &quot;E:/WebSite/yuanshili&quot;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp; ServerName&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;http://www.demo.com/&quot;&gt;www.demo.com&lt;/a&gt;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;Directory &quot;E:/WebSite/yuanshili&quot;&amp;gt;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Options Indexes FollowSymLinks Includes ExecCGI&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; AllowOverride All&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Order allow,deny&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#FF0000;&quot;&gt;Allow from all&lt;/span&gt;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/Directory&amp;gt;&lt;br /&gt;\r\n&amp;lt;/VirtualHost&amp;gt;&lt;br /&gt;\r\n#IP形式&lt;br /&gt;\r\n&amp;lt;VirtualHost *:80&amp;gt;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp; DocumentRoot &quot;E:/WebSite/weidongli&quot;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp; ServerName 127.0.0.2&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;Directory &quot;E:/WebSite/weidongli&quot;&amp;gt;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Options Indexes FollowSymLinks Includes ExecCGI&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; AllowOverride All&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Order allow,deny&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Allow from all&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/Directory&amp;gt;&lt;br /&gt;\r\n&amp;lt;/VirtualHost&amp;gt;&lt;br /&gt;\r\n#端口形式&lt;br /&gt;\r\n&amp;lt;VirtualHost *:8888&amp;gt;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp; DocumentRoot &quot;E:/WebSite/test&quot;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp; ServerName 127.0.0.2&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;Directory &quot;E:/WebSite/test&quot;&amp;gt;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Options Indexes FollowSymLinks Includes ExecCGI&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; AllowOverride All&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Order allow,deny&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Allow from all&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/Directory&amp;gt;&lt;br /&gt;\r\n&amp;lt;/VirtualHost&amp;gt;&lt;br /&gt;\r\n注意：若没有Directory下的Allow from all则会出现无权限访问错误如：&lt;br /&gt;\r\n此错误(HTTP 403 禁止)意味着 Internet Explorer 可以连接到该网站，但是没有查看该网页的权限&lt;br /&gt;\r\n&lt;strong&gt;三，修改C:WindowsSystem32driversetc下的hosts文件&lt;br /&gt;\r\n&lt;/strong&gt;# localhost name resolution is handled within DNS itself.&lt;br /&gt;\r\n&amp;nbsp;127.0.0.1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; localhost&lt;br /&gt;\r\n&amp;nbsp;127.0.0.1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;http://www.demo.com/&quot;&gt;www.demo.com&lt;/a&gt;&lt;br /&gt;\r\n&lt;br /&gt;\r\n可在浏览器&lt;a href=&quot;http://lib.csdn.net/base/softwaretest&quot; class=&quot;replace_word&quot; target=&quot;_blank&quot;&gt;测试&lt;/a&gt;如下：&lt;br /&gt;\r\n&lt;a target=&quot;_blank&quot; href=&quot;http://www.demo.com/&quot;&gt;http://www.demo.com&lt;/a&gt;&lt;br /&gt;\r\n&lt;a target=&quot;_blank&quot; href=&quot;http://127.0.0.2/&quot;&gt;http://127.0.0.2&lt;/a&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;a target=&quot;_blank&quot; href=&quot;http://127.0.0.2:888/&quot;&gt;http://127.0.0.2:888&lt;/a&gt; \r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	来源：http://blog.csdn.net/xinzheng_wang/article/details/40110745\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;', '1', '0', '1479192410', '小兔', null, '0', '55');
INSERT INTO `article` VALUES ('30', 'PHP-redis中文文档', 'redis,php-redis,redis中文文档', '&lt;p style=&quot;font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;&quot;&gt;\r\n	phpredis是php的一个扩展，效率是相当高有链表排序功能，对创建内存级的模块业务关系\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;&quot;&gt;\r\n	很有用;以下是redis官方提供的命令使用技巧:\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;&quot;&gt;\r\n	下载地址如下：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;&quot;&gt;\r\n	https://github.com/owlient/phpredis（支持redis 2.0.4）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\nRedis::__construct&lt;/span&gt;构造函数&lt;span style=&quot;font-family:monospace;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt;$redis = new Redis();&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;connect, open&lt;/span&gt;&amp;nbsp;链接redis服务&lt;br /&gt;\r\n&lt;span style=&quot;font-style:italic;&quot;&gt;&lt;span style=&quot;font-weight:bold;&quot;&gt;参数&lt;/span&gt;&lt;/span&gt;&lt;em&gt;&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt;host&lt;/em&gt;: string，服务地址&lt;em&gt;&lt;br /&gt;\r\nport&lt;/em&gt;: int,端口号&lt;em&gt;&lt;br /&gt;\r\ntimeout&lt;/em&gt;: float,链接时长 (可选, 默认为 0 ，不限链接时间)&lt;br /&gt;\r\n注: 在redis.conf中也有时间，默认为300&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;pconnect, popen&lt;/span&gt;&amp;nbsp;不会主动关闭的链接&lt;br /&gt;\r\n参考上面&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;setOption&lt;/span&gt;&amp;nbsp;设置redis模式&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;getOption&lt;/span&gt;&amp;nbsp;查看redis设置的模式&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;ping&lt;/span&gt;&amp;nbsp;查看连接状态&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\nget&lt;/span&gt;&amp;nbsp;得到某个key的值（string值）&lt;br /&gt;\r\n如果该key不存在，return&amp;nbsp;&lt;span style=&quot;font-weight:bold;&quot;&gt;false&lt;/span&gt;&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\nset&lt;/span&gt;&amp;nbsp;写入key 和 value（string值）&lt;br /&gt;\r\n如果写入成功，return&amp;nbsp;&lt;span style=&quot;font-weight:bold;&quot;&gt;ture&lt;/span&gt;&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;setex&lt;/span&gt;&amp;nbsp;带生存时间的写入值&lt;br /&gt;\r\n$redis-&amp;gt;setex(\'key\', 3600, \'value\'); // sets key → value, with 1h TTL.&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\nsetnx&lt;/span&gt;&amp;nbsp;判断是否重复的，写入值&lt;br /&gt;\r\n$redis-&amp;gt;setnx(\'key\', \'value\');&lt;br /&gt;\r\n$redis-&amp;gt;setnx(\'key\', \'value\');&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;delete&lt;/span&gt;&amp;nbsp; 删除指定key的值&lt;br /&gt;\r\n返回已经删除key的个数（长整数）&lt;br /&gt;\r\n$redis-&amp;gt;delete(\'key1\', \'key2\');&lt;br /&gt;\r\n$redis-&amp;gt;delete(array(\'key3\', \'key4\', \'key5\'));&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;ttl&lt;/span&gt;&lt;br /&gt;\r\n得到一个key的生存时间&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;persist&lt;/span&gt;&lt;br /&gt;\r\n移除生存时间到期的key&lt;br /&gt;\r\n如果key到期 true 如果不到期 false&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;mset&lt;/span&gt;&amp;nbsp;（redis版本1.1以上才可以用）&lt;br /&gt;\r\n同时给多个key赋值&lt;br /&gt;\r\n$redis-&amp;gt;mset(array(\'key0\' =&amp;gt; \'value0\', \'key1\' =&amp;gt; \'value1\'));&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;multi, exec, discard&lt;/span&gt;&lt;br /&gt;\r\n进入或者退出事务模式&lt;br /&gt;\r\n参数可选Redis::MULTI&lt;span style=&quot;font-family:monospace;&quot;&gt;或&lt;/span&gt;Redis::PIPELINE. 默认是 Redis::MULTI&lt;br /&gt;\r\nRedis::MULTI：将多个操作当成一个事务执行&lt;br /&gt;\r\nRedis::PIPELINE:让（多条）执行命令简单的，更加快速的发送给服务器，但是没有任何原子性的保证&lt;br /&gt;\r\ndiscard:删除一个事务&lt;br /&gt;\r\n返回值&lt;br /&gt;\r\nmulti()，返回一个redis对象，并进入multi-mode模式，一旦进入multi-mode模式，以后调用的所有方法都会返回相同的对象，只到exec(）方法被调用。&lt;br /&gt;\r\n&lt;span style=&quot;font-family:monospace;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt;&lt;span style=&quot;font-weight:bold;&quot;&gt;watch, unwatch&lt;/span&gt;&amp;nbsp;（代码测试后，不能达到所说的效果）&lt;br /&gt;\r\n监测一个key的值是否被其它的程序更改。如果这个key在watch 和 exec （方法）间被修改，这个 MULTI/EXEC 事务的执行将失败（return false）&lt;br /&gt;\r\nunwatch&amp;nbsp; 取消被这个程序监测的所有key&lt;br /&gt;\r\n参数，一对key的列表&lt;br /&gt;\r\n$redis-&amp;gt;watch(\'x\');&lt;br /&gt;\r\n&lt;br /&gt;\r\n$ret = $redis-&amp;gt;multi() -&amp;gt;incr(\'x\') -&amp;gt;exec();&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\nsubscribe&lt;/span&gt;&amp;nbsp;*&lt;br /&gt;\r\n方法回调。注意，该方法可能在未来里发生改变&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;publish&lt;/span&gt;&amp;nbsp;*&lt;br /&gt;\r\n发表内容到某一个通道。注意，该方法可能在未来里发生改变&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;exists&lt;/span&gt;&lt;br /&gt;\r\n判断key是否存在。存在 true 不在 false&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;incr, incrBy&lt;/span&gt;&lt;br /&gt;\r\nkey中的值进行自增1，如果填写了第二个参数，者自增第二个参数所填的值&lt;span style=&quot;font-family:monospace;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt;$redis-&amp;gt;incr(\'key1\');&lt;span style=&quot;font-family:monospace;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt;$redis-&amp;gt;incrBy(\'key1\', 10);&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;decr, decrBy&lt;/span&gt;&lt;br /&gt;\r\n做减法，使用方法同incr&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;getMultiple&lt;/span&gt;&lt;br /&gt;\r\n传参&lt;br /&gt;\r\n由key组成的数组&lt;br /&gt;\r\n返回参数&lt;br /&gt;\r\n如果key存在返回value，不存在返回false&lt;br /&gt;\r\n$redis-&amp;gt;set(\'key1\', \'value1\'); $redis-&amp;gt;set(\'key2\', \'value2\'); $redis-&amp;gt;set(\'key3\', \'value3\'); $redis-&amp;gt;getMultiple(array(\'key1\', \'key2\', \'key3\'));&lt;br /&gt;\r\n$redis-&amp;gt;lRem(\'key1\', \'A\', 2);&lt;br /&gt;\r\n$redis-&amp;gt;lRange(\'key1\', 0, -1);&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\nlist&lt;/span&gt;相关操作&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;lPush&lt;br /&gt;\r\n&lt;/span&gt;$redis-&amp;gt;lPush(key, value);&lt;br /&gt;\r\n在名称为key的list左边（头）添加一个值为value的&amp;nbsp;元素&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;rPush&lt;/span&gt;&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt;$redis-&amp;gt;rPush(key, value);&lt;br /&gt;\r\n在名称为key的list右边（尾）添加一个值为value的&amp;nbsp;元素&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;lPushx/&lt;/span&gt;&lt;span style=&quot;font-weight:bold;&quot;&gt;rPushx&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;lPushx(key, value);&lt;br /&gt;\r\n在名称为key的list左边(头)/右边（尾）添加一个值为value的元素,如果value已经存在，则不添加&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;lPop&lt;/span&gt;/&lt;span style=&quot;font-weight:bold;&quot;&gt;rPop&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;lPop(\'key\');&lt;br /&gt;\r\n输出名称为key的list左(头)起/右（尾）起的第一个元素，删除该元素&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;blPop/brPop&lt;br /&gt;\r\n&lt;/span&gt;$redis-&amp;gt;blPop(\'key1\', \'key2\', 10);&lt;br /&gt;\r\nlpop命令的block版本。即当timeout为0时，若遇到名称为key&amp;nbsp;&lt;strong&gt;&lt;em&gt;&lt;span style=&quot;font-size:7.5pt;&quot;&gt;i&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;的list不存在或该list为空，则命令结束。如果timeout&amp;gt;0，则遇到上述情况时，等待timeout秒，如果问题没有解决，则对key&lt;strong&gt;&lt;em&gt;&lt;span style=&quot;font-size:7.5pt;&quot;&gt;i+1&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;开始的list执行pop操作&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\n&lt;br /&gt;\r\nlSize&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;lSize(\'key\');&lt;br /&gt;\r\n返回名称为key的list有多少个元素&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;lIndex, lGet&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;lGet(\'key\', 0);&lt;br /&gt;\r\n返回名称为key的list中index位置的元素&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;lSet&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;lSet(\'key\', 0, \'X\');&lt;br /&gt;\r\n给名称为key的list中index位置的元素赋值为value&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;lRange, lGetRange&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;lRange(\'key1\', 0, -1);&lt;br /&gt;\r\n返回名称为key的list中start至end之间的元素（end为 -1 ，返回所有）&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;lTrim, listTrim&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;lTrim(\'key\',&amp;nbsp;start,&amp;nbsp;end);&lt;br /&gt;\r\n截取名称为key的list，保留start至end之间的元素&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;lRem, lRemove&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;lRem(\'key\', \'A\', 2);&lt;br /&gt;\r\n删除count个名称为key的list中值为value的元素。count为0，删除所有值为value的元素，count&amp;gt;0从头至尾删除count个值为value的元素，count&amp;lt;0从尾到头删除|count|个值为value的元素&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;lInsert&lt;/span&gt;&lt;br /&gt;\r\n在名称为为key的list中，找到值为&lt;em&gt;pivot&lt;/em&gt;&amp;nbsp;的value，并根据参数Redis::BEFORE | Redis::AFTER，来确定，newvalue 是放在 pivot 的前面，或者后面。如果key不存在，不会插入，如果 pivot不存在，return -1&lt;br /&gt;\r\n$redis-&amp;gt;delete(\'key1\'); $redis-&amp;gt;lInsert(\'key1\', Redis::AFTER, \'A\', \'X\'); $redis-&amp;gt;lPush(\'key1\', \'A\'); $redis-&amp;gt;lPush(\'key1\', \'B\'); $redis-&amp;gt;lPush(\'key1\', \'C\'); $redis-&amp;gt;lInsert(\'key1\', Redis::BEFORE, \'C\', \'X\');&lt;br /&gt;\r\n$redis-&amp;gt;lRange(\'key1\', 0, -1);&lt;br /&gt;\r\n$redis-&amp;gt;lInsert(\'key1\', Redis::AFTER, \'C\', \'Y\');&lt;br /&gt;\r\n$redis-&amp;gt;lRange(\'key1\', 0, -1);&lt;br /&gt;\r\n$redis-&amp;gt;lInsert(\'key1\', Redis::AFTER, \'W\', \'value\');&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;rpoplpush&lt;/span&gt;&lt;br /&gt;\r\n返回并删除名称为srckey的list的尾元素，并将该元素添加到名称为dstkey的list的头部&lt;br /&gt;\r\n$redis-&amp;gt;delete(\'x\', \'y\');&lt;br /&gt;\r\n$redis-&amp;gt;lPush(\'x\', \'abc\'); $redis-&amp;gt;lPush(\'x\', \'def\'); $redis-&amp;gt;lPush(\'y\', \'123\'); $redis-&amp;gt;lPush(\'y\', \'456\'); // move the last of x to the front of y. var_dump($redis-&amp;gt;rpoplpush(\'x\', \'y\'));&lt;br /&gt;\r\nvar_dump($redis-&amp;gt;lRange(\'x\', 0, -1));&lt;br /&gt;\r\nvar_dump($redis-&amp;gt;lRange(\'y\', 0, -1));&amp;nbsp;&lt;span style=&quot;font-family:monospace;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt;&lt;br /&gt;\r\nstring(3) &quot;abc&quot;&amp;nbsp;&lt;span style=&quot;font-family:monospace;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt;array(1) { [0]=&amp;gt; string(3) &quot;def&quot; }&amp;nbsp;&lt;span style=&quot;font-family:monospace;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt;array(3) { [0]=&amp;gt; string(3) &quot;abc&quot; [1]=&amp;gt; string(3) &quot;456&quot; [2]=&amp;gt; string(3) &quot;123&quot; }&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-size:16px;font-weight:bold;text-decoration:underline;&quot;&gt;SET操作相关&lt;/span&gt;&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;sAdd&lt;/span&gt;&lt;br /&gt;\r\n向名称为key的set中添加元素value,如果value存在，不写入，return false&lt;br /&gt;\r\n$redis-&amp;gt;sAdd(key , value);&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;sRem, sRemove&lt;/span&gt;&lt;br /&gt;\r\n删除名称为key的set中的元素value&lt;br /&gt;\r\n$redis-&amp;gt;sAdd(\'key1\' , \'set1\');&lt;br /&gt;\r\n$redis-&amp;gt;sAdd(\'key1\' , \'set2\');&lt;br /&gt;\r\n$redis-&amp;gt;sAdd(\'key1\' , \'set3\');&lt;br /&gt;\r\n$redis-&amp;gt;sRem(\'key1\', \'set2\');&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;sMove&lt;/span&gt;&lt;br /&gt;\r\n将value元素从名称为srckey的集合移到名称为dstkey的集合&lt;br /&gt;\r\n$redis-&amp;gt;sMove(seckey, dstkey, value);&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;sIsMember, sContains&lt;/span&gt;&lt;br /&gt;\r\n名称为key的集合中查找是否有value元素，有ture 没有 false&lt;br /&gt;\r\n$redis-&amp;gt;sIsMember(key, value);&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;sCard, sSize&lt;/span&gt;&lt;br /&gt;\r\n返回名称为key的set的元素个数&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;sPop&lt;/span&gt;&lt;br /&gt;\r\n随机返回并删除名称为key的set中一个元素&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;sRandMember&lt;/span&gt;&lt;br /&gt;\r\n随机返回名称为key的set中一个元素，不删除&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;sInter&lt;/span&gt;&lt;br /&gt;\r\n求交集&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;sInterStore&lt;/span&gt;&lt;br /&gt;\r\n求交集并将交集保存到output的集合&lt;br /&gt;\r\n$redis-&amp;gt;sInterStore(\'output\', \'key1\', \'key2\', \'key3\')&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;sUnion&lt;/span&gt;&lt;br /&gt;\r\n求并集&lt;br /&gt;\r\n$redis-&amp;gt;sUnion(\'s0\', \'s1\', \'s2\');&lt;br /&gt;\r\ns0,s1,s2 同时求并集&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;sUnionStore&lt;/span&gt;&lt;br /&gt;\r\n求并集并将并集保存到output的集合&lt;br /&gt;\r\n$redis-&amp;gt;sUnionStore(\'output\', \'key1\', \'key2\', \'key3\')；&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;sDiff&lt;/span&gt;&lt;br /&gt;\r\n求差集&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;sDiffStore&lt;/span&gt;&lt;br /&gt;\r\n求差集并将差集保存到output的集合&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;sMembers, sGetMembers&lt;/span&gt;&lt;br /&gt;\r\n返回名称为key的set的所有元素&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;sort&lt;/span&gt;&lt;br /&gt;\r\n排序，分页等&lt;br /&gt;\r\n参数&lt;span style=&quot;font-family:monospace;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt;\'by\' =&amp;gt; \'some_pattern_*\',&lt;br /&gt;\r\n\'limit\' =&amp;gt; array(0, 1),&lt;br /&gt;\r\n\'get\' =&amp;gt; \'some_other_pattern_*\' or an array of patterns,&lt;br /&gt;\r\n\'sort\' =&amp;gt; \'asc\' or \'desc\',&lt;br /&gt;\r\n\'alpha\' =&amp;gt; TRUE,&lt;br /&gt;\r\n\'store\' =&amp;gt; \'external-key\'&lt;span style=&quot;font-family:monospace;&quot;&gt;&lt;br /&gt;\r\n例子&lt;br /&gt;\r\n&lt;/span&gt;$redis-&amp;gt;delete(\'s\'); $redis-&amp;gt;sadd(\'s\', 5); $redis-&amp;gt;sadd(\'s\', 4); $redis-&amp;gt;sadd(\'s\', 2); $redis-&amp;gt;sadd(\'s\', 1); $redis-&amp;gt;sadd(\'s\', 3);&lt;br /&gt;\r\nvar_dump($redis-&amp;gt;sort(\'s\')); // 1,2,3,4,5&lt;br /&gt;\r\nvar_dump($redis-&amp;gt;sort(\'s\', array(\'sort\' =&amp;gt; \'desc\'))); // 5,4,3,2,1&lt;br /&gt;\r\nvar_dump($redis-&amp;gt;sort(\'s\', array(\'sort\' =&amp;gt; \'desc\', \'store\' =&amp;gt; \'out\'))); // (int)5&lt;br /&gt;\r\n&amp;nbsp;&lt;br /&gt;\r\n&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;span style=&quot;font-weight:bold;&quot;&gt;string命令&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;getSet&lt;/span&gt;&lt;br /&gt;\r\n返回原来key中的值，并将value写入key&lt;br /&gt;\r\n$redis-&amp;gt;set(\'x\', \'42\');&lt;br /&gt;\r\n$exValue = $redis-&amp;gt;getSet(\'x\', \'lol\'); // return \'42\', replaces x by \'lol\'&lt;br /&gt;\r\n$newValue = $redis-&amp;gt;get(\'x\')\' // return \'lol\'&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;append&lt;/span&gt;&lt;br /&gt;\r\nstring，名称为key的string的值在后面加上value&lt;br /&gt;\r\n$redis-&amp;gt;set(\'key\', \'value1\');&lt;br /&gt;\r\n$redis-&amp;gt;append(\'key\', \'value2\');&lt;br /&gt;\r\n$redis-&amp;gt;get(\'key\');&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;getRange&lt;/span&gt;&amp;nbsp;（方法不存在）&lt;br /&gt;\r\n返回名称为key的string中start至end之间的字符&lt;br /&gt;\r\n$redis-&amp;gt;set(\'key\', \'string value\');&lt;br /&gt;\r\n$redis-&amp;gt;getRange(\'key\', 0, 5);&lt;br /&gt;\r\n$redis-&amp;gt;getRange(\'key\', -5, -1);&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;setRange&lt;/span&gt;&amp;nbsp;（方法不存在）&lt;br /&gt;\r\n改变key的string中start至end之间的字符为value&lt;br /&gt;\r\n$redis-&amp;gt;set(\'key\', \'Hello world\');&lt;br /&gt;\r\n$redis-&amp;gt;setRange(\'key\', 6, &quot;redis&quot;);&lt;br /&gt;\r\n$redis-&amp;gt;get(\'key\');&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;strlen&lt;/span&gt;&lt;br /&gt;\r\n得到key的string的长度&lt;br /&gt;\r\n$redis-&amp;gt;strlen(\'key\');&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;getBit&lt;/span&gt;/&lt;span style=&quot;font-weight:bold;&quot;&gt;setBit&lt;/span&gt;&lt;br /&gt;\r\n返回2进制信息&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size:14pt;&quot;&gt;zset&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;（&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;font-size:14pt;&quot;&gt;sorted set&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;）操作相关&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\nzAdd&lt;/span&gt;&lt;strong&gt;(&lt;em&gt;key, score, member&lt;/em&gt;)&lt;/strong&gt;：向名称为key的zset中添加元素member，score用于排序。如果该元素已经存在，则根据score更新该元素的顺序。&lt;br /&gt;\r\n$redis-&amp;gt;zAdd(\'key\', 1, \'val1\');&lt;br /&gt;\r\n$redis-&amp;gt;zAdd(\'key\', 0, \'val0\');&lt;br /&gt;\r\n$redis-&amp;gt;zAdd(\'key\', 5, \'val5\');&lt;br /&gt;\r\n$redis-&amp;gt;zRange(\'key\', 0, -1); // array(val0, val1, val5)&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\nzRange&lt;/span&gt;&lt;strong&gt;(&lt;em&gt;key, start, end&lt;/em&gt;,&lt;/strong&gt;&lt;em&gt;withscores&lt;/em&gt;&lt;strong&gt;)&lt;/strong&gt;：返回名称为key的zset（元素已按score从小到大排序）中的index从start到end的所有元素&lt;br /&gt;\r\n$redis-&amp;gt;zAdd(\'key1\', 0, \'val0\');&lt;br /&gt;\r\n$redis-&amp;gt;zAdd(\'key1\', 2, \'val2\');&lt;br /&gt;\r\n$redis-&amp;gt;zAdd(\'key1\', 10, \'val10\');&lt;br /&gt;\r\n$redis-&amp;gt;zRange(\'key1\', 0, -1); // with scores $redis-&amp;gt;zRange(\'key1\', 0, -1, true);&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\nzDelete, zRem&lt;/span&gt;&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;zRem&lt;/span&gt;&lt;strong&gt;(&lt;em&gt;key, member&lt;/em&gt;)&lt;/strong&gt;&amp;nbsp;：删除名称为key的zset中的元素member&lt;br /&gt;\r\n$redis-&amp;gt;zAdd(\'key\', 0, \'val0\');&lt;br /&gt;\r\n$redis-&amp;gt;zAdd(\'key\', 2, \'val2\');&lt;br /&gt;\r\n$redis-&amp;gt;zAdd(\'key\', 10, \'val10\');&lt;br /&gt;\r\n$redis-&amp;gt;zDelete(\'key\', \'val2\');&lt;br /&gt;\r\n$redis-&amp;gt;zRange(\'key\', 0, -1);&amp;nbsp;&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\n&lt;br /&gt;\r\nzRevRange&lt;/span&gt;&lt;strong&gt;(&lt;em&gt;key, start, end&lt;/em&gt;,&lt;/strong&gt;&lt;em&gt;withscores&lt;/em&gt;&lt;strong&gt;)&lt;/strong&gt;：返回名称为key的zset（元素已按score从大到小排序）中的index从start到end的所有元素.&lt;em&gt;withscores&lt;/em&gt;: 是否输出socre的值，默认false，不输出&lt;br /&gt;\r\n$redis-&amp;gt;zAdd(\'key\', 0, \'val0\');&lt;br /&gt;\r\n$redis-&amp;gt;zAdd(\'key\', 2, \'val2\');&lt;br /&gt;\r\n$redis-&amp;gt;zAdd(\'key\', 10, \'val10\');&lt;br /&gt;\r\n$redis-&amp;gt;zRevRange(\'key\', 0, -1); // with scores $redis-&amp;gt;zRevRange(\'key\', 0, -1, true);&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;zRangeByScore, zRevRangeByScore&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;zRangeByScore(key, star, end, array(withscores， limit ));&lt;br /&gt;\r\n返回名称为key的zset中score &amp;gt;= star且score &amp;lt;= end的所有元素&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\n&lt;br /&gt;\r\nzCount&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;zCount(key, star, end);&lt;br /&gt;\r\n返回名称为key的zset中score &amp;gt;= star且score &amp;lt;= end的所有元素的个数&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\n&lt;br /&gt;\r\nzRemRangeByScore, zDeleteRangeByScore&lt;/span&gt;&lt;span style=&quot;font-family:monospace;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt;$redis-&amp;gt;zRemRangeByScore(\'key\', star, end);&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt;删除名称为key的zset中score &amp;gt;= star且score &amp;lt;= end的所有元素，返回删除个数&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;zSize, zCard&lt;/span&gt;&lt;br /&gt;\r\n返回名称为key的zset的所有元素的个数&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;zScore&lt;br /&gt;\r\n&lt;/span&gt;$redis-&amp;gt;zScore(key, val2);&lt;br /&gt;\r\n返回名称为key的zset中元素val2的score&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;zRank, zRevRank&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;zRevRank(key, val);&lt;br /&gt;\r\n返回名称为key的zset（元素已按score从小到大排序）中val元素的rank（即index，从0开始），若没有val元素，返回“null”。zRevRank 是从大到小排序&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;zIncrBy&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;zIncrBy(\'key\',&amp;nbsp;increment, \'member\');&lt;br /&gt;\r\n如果在名称为key的zset中已经存在元素member，则该元素的score增加increment；否则向集合中添加该元素，其score的值为increment&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;zUnion&lt;/span&gt;/&lt;span style=&quot;font-weight:bold;&quot;&gt;zInter&lt;/span&gt;&lt;em&gt;&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt;参数&lt;br /&gt;\r\nkeyOutput&lt;br /&gt;\r\narrayZSetKeys&lt;br /&gt;\r\narrayWeights&lt;br /&gt;\r\naggregateFunction&lt;/em&gt;&amp;nbsp;Either &quot;SUM&quot;, &quot;MIN&quot;, or &quot;MAX&quot;: defines the behaviour to use on duplicate entries during the zUnion.&lt;br /&gt;\r\n对N个zset求并集和交集，并将最后的集合保存在dstkeyN中。对于集合中每一个元素的score，在进行AGGREGATE运算前，都要乘以对于的WEIGHT参数。如果没有提供WEIGHT，默认为1。默认的AGGREGATE是SUM，即结果集合中元素的score是所有集合对应元素进行SUM运算的值，而MIN和MAX是指，结果集合中元素的score是所有集合对应元素中最小值和最大值。&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;strong&gt;&lt;span style=&quot;font-size:14pt;&quot;&gt;Hash&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;操作&lt;/strong&gt;&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\nhSet&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;hSet(\'h\', \'key1\', \'hello\');&lt;br /&gt;\r\n向名称为h的hash中添加元素key1—&amp;gt;hello&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;hGet&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;hGet(\'h\', \'key1\');&lt;br /&gt;\r\n返回名称为h的hash中key1对应的value（hello）&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;hLen&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;hLen(\'h\');&lt;br /&gt;\r\n返回名称为h的hash中元素个数&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;hDel&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;hDel(\'h\', \'key1\');&lt;br /&gt;\r\n删除名称为h的hash中键为key1的域&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;hKeys&lt;br /&gt;\r\n&lt;/span&gt;$redis-&amp;gt;hKeys(\'h\');&lt;br /&gt;\r\n返回名称为key的hash中所有键&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;hVals&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;hVals(\'h\')&lt;br /&gt;\r\n返回名称为h的hash中所有键对应的value&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;hGetAll&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;hGetAll(\'h\');&lt;br /&gt;\r\n返回名称为h的hash中所有的键（field）及其对应的value&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;hExists&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;hExists(\'h\', \'a\');&lt;br /&gt;\r\n名称为h的hash中是否存在键名字为a的域&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;hIncrBy&lt;/span&gt;&lt;br /&gt;\r\n$redis-&amp;gt;hIncrBy(\'h\', \'x\', 2);&lt;br /&gt;\r\n将名称为h的hash中x的value增加2&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;hMset&lt;br /&gt;\r\n&lt;/span&gt;$redis-&amp;gt;hMset(\'user:1\', array(\'name\' =&amp;gt; \'Joe\', \'salary\' =&amp;gt; 2000));&lt;br /&gt;\r\n向名称为key的hash中批量添加元素&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;hMGet&lt;br /&gt;\r\n&lt;/span&gt;$redis-&amp;gt;hmGet(\'h\', array(\'field1\', \'field2\'));&lt;br /&gt;\r\n返回名称为h的hash中field1,field2对应的value&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-size:18px;&quot;&gt;&lt;span style=&quot;font-weight:bold;&quot;&gt;redis 操作相关&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;flushDB&lt;/span&gt;&lt;br /&gt;\r\n清空当前数据库&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\nflushAll&lt;/span&gt;&lt;br /&gt;\r\n清空所有数据库&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;randomKey&lt;/span&gt;&lt;br /&gt;\r\n随机返回key空间的一个key&lt;br /&gt;\r\n$key = $redis-&amp;gt;randomKey();&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;select&lt;/span&gt;&lt;br /&gt;\r\n选择一个数据库&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;move&lt;/span&gt;&lt;br /&gt;\r\n转移一个key到另外一个数据库&lt;br /&gt;\r\n$redis-&amp;gt;select(0); // switch to DB 0&lt;br /&gt;\r\n$redis-&amp;gt;set(\'x\', \'42\'); // write 42 to x&lt;br /&gt;\r\n$redis-&amp;gt;move(\'x\', 1); // move to DB 1&lt;br /&gt;\r\n$redis-&amp;gt;select(1); // switch to DB 1&lt;br /&gt;\r\n$redis-&amp;gt;get(\'x\'); // will return 42&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;rename, renameKey&lt;/span&gt;&lt;br /&gt;\r\n给key重命名&lt;br /&gt;\r\n$redis-&amp;gt;set(\'x\', \'42\');&lt;br /&gt;\r\n$redis-&amp;gt;rename(\'x\', \'y\');&lt;br /&gt;\r\n$redis-&amp;gt;get(\'y\'); // → 42&lt;br /&gt;\r\n$redis-&amp;gt;get(\'x\'); // → `FALSE`&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;renameNx&lt;/span&gt;&lt;br /&gt;\r\n与remane类似，但是，如果重新命名的名字已经存在，不会替换成功&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;setTimeout, expire&lt;/span&gt;&lt;br /&gt;\r\n设定一个key的活动时间（s）&lt;br /&gt;\r\n$redis-&amp;gt;setTimeout(\'x\', 3);&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;expireAt&lt;/span&gt;&lt;br /&gt;\r\nkey存活到一个unix时间戳时间&lt;br /&gt;\r\n$redis-&amp;gt;expireAt(\'x\', time() + 3);&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;keys, getKeys&lt;/span&gt;&lt;br /&gt;\r\n返回满足给定pattern的所有key&lt;br /&gt;\r\n$keyWithUserPrefix = $redis-&amp;gt;keys(\'user*\');&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;dbSize&lt;/span&gt;&lt;br /&gt;\r\n查看现在数据库有多少key&lt;br /&gt;\r\n$count = $redis-&amp;gt;dbSize();&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;auth&lt;/span&gt;&lt;br /&gt;\r\n密码认证&lt;br /&gt;\r\n$redis-&amp;gt;auth(\'foobared\');&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;bgrewriteaof&lt;br /&gt;\r\n&lt;/span&gt;使用aof来进行数据库持久化&lt;br /&gt;\r\n$redis-&amp;gt;bgrewriteaof();&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;slaveof&lt;/span&gt;&lt;br /&gt;\r\n选择从服务器&lt;br /&gt;\r\n$redis-&amp;gt;slaveof(\'10.0.1.7\', 6379);&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;save&lt;/span&gt;&lt;br /&gt;\r\n将数据同步保存到磁盘&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;bgsave&lt;/span&gt;&lt;br /&gt;\r\n将数据异步保存到磁盘&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;lastSave&lt;/span&gt;&lt;br /&gt;\r\n返回上次成功将数据保存到磁盘的Unix时戳&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;\r\ninfo&lt;/span&gt;&lt;br /&gt;\r\n返回redis的版本信息等详情&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;span style=&quot;font-weight:bold;&quot;&gt;type&lt;/span&gt;&lt;br /&gt;\r\n返回key的类型值&lt;br /&gt;\r\nstring: Redis::REDIS_STRING&lt;br /&gt;\r\nset: Redis::REDIS_SET&lt;br /&gt;\r\nlist: Redis::REDIS_LIST&lt;br /&gt;\r\nzset: Redis::REDIS_ZSET&lt;br /&gt;\r\nhash: Redis::REDIS_HASH&lt;br /&gt;\r\nother: Redis::REDIS_NOT_FOUND\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;&quot;&gt;\r\n	来源：http://www.cnblogs.com/weafer/archive/2011/09/21/2184059.html\r\n&lt;/p&gt;', '1', '0', '1479376848', '小兔', null, '0', '142');
INSERT INTO `article` VALUES ('25', 'URI和URL的区别', 'URI，URL', '&lt;h4 style=&quot;font-size:14px;color:#333333;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	URIs, URLs, and URNs\r\n&lt;/h4&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	首先，URI，是uniform resource identifier，统一资源标识符，用来唯一的标识一个资源。而URL是uniform resource locator，统一资源定位器，它是一种具体的URI，即URL可以用来标识一个资源，而且还指明了如何locate\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	这个资源。而URN，uniform resource name，统一资源命名，是通过名字来标识资源，比如mailto:java-net@java.sun.com。也就是说，URI是以一种抽象的，高层次概念定义统一资源标识，而URL和URN则是具体的资源标识\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	的方式。URL和URN都是一种URI。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	在Java的URI中，一个URI实例可以代表绝对的，也可以是相对的，只要它符合URI的语法规则。而URL类则不仅符合语义，还包含了定位该资源的信息，因此它不能是相对的，schema必须被指定。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	ok，现在回答文章开头提出的问题，到底是imgUrl好呢，还是imgUri好？显然，如果说imgUri是肯定没问题的，因为即使它实际上是url，那它也是uri的一种。那么用imgUrl有没有问题呢？此时则要看它的可能取值，如果是绝对\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	路径，能够定位的，那么用imgUrl是没问题的，而如果是相对路径，那还是不要用ImgUrl的好。总之，用imgUri是肯定没问题的，而用imgUrl则要视实际情况而定。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	第二个，从HttpServletRequest的javadoc中可以看出，getRequestURI返回一个String，“the part of this request’s URL from the protocol name up to the query string in the first line of the HTTP request”，比\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	如“POST /some/path.html?a=b HTTP/1.1”，则返回的值为”/some/path.html”。现在可以明白为什么是getRequestURI而不是getRequestURL了，因为此处返回的是相对的路径。而getRequestURL返回一个\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	StringBuffer，“The returned URL contains a protocol, server name, port number, and server path, but it does not include query string parameters.”，完整的请求资源路径，不包括querystring。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	总结一下：URL是一种具体的URI，它不仅唯一标识资源，而且还提供了定位该资源的信息。URI是一种语义上的抽象概念，可以是绝对的，也可以是相对的，而URL则必须提供足够的信息来定位，所以，是绝对的，而通常说的\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	relative URL，则是针对另一个absolute URL，本质上还是绝对的。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	注：这里的绝对(absolute)是指包含scheme，而相对(relative)则不包含scheme。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	URI抽象结构 &amp;nbsp; &amp;nbsp;&lt;span style=&quot;color:#FF6600;&quot;&gt;&amp;nbsp;[&lt;em&gt;scheme&lt;/em&gt;&lt;strong&gt;:&lt;/strong&gt;]&lt;em&gt;scheme-specific-part&lt;/em&gt;[&lt;strong&gt;#&lt;/strong&gt;&lt;em&gt;fragment&lt;/em&gt;]&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	[&lt;em&gt;scheme&lt;/em&gt;&lt;strong&gt;:&lt;/strong&gt;][&lt;strong&gt;//&lt;/strong&gt;&lt;em&gt;authority&lt;/em&gt;][&lt;em&gt;path&lt;/em&gt;][&lt;strong&gt;?&lt;/strong&gt;&lt;em&gt;query&lt;/em&gt;][&lt;strong&gt;#&lt;/strong&gt;&lt;em&gt;fragment&lt;/em&gt;]\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	authority为[&lt;em&gt;user-info&lt;/em&gt;&lt;strong&gt;@&lt;/strong&gt;]&lt;em&gt;host&lt;/em&gt;[&lt;strong&gt;:&lt;/strong&gt;&lt;em&gt;port&lt;/em&gt;]\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	参考资料：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;a href=&quot;http://docs.oracle.com/javase/1.5.0/docs/api/java/net/URI.html&quot;&gt;http://docs.oracle.com/javase/1.5.0/docs/api/java/net/URI.html&lt;/a&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;a href=&quot;http://en.wikipedia.org/wiki/Uniform_Resource_Identifier&quot;&gt;http://en.wikipedia.org/wiki/Uniform_Resource_Identifier&lt;/a&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;a href=&quot;http://docs.oracle.com/javaee/5/api/javax/servlet/http/HttpServletRequest.html&quot;&gt;http://docs.oracle.com/javaee/5/api/javax/servlet/http/HttpServletRequest.html&lt;/a&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	ps:\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	java.net.URL类不提供对标准RFC2396规定的特殊字符的转义，因此需要调用者自己对URL各组成部分进行encode。而java.net.URI则会提供转义功能。因此The recommended way &amp;nbsp;to manage the encoding and\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;decoding of URLs is to use &amp;nbsp;java.net.URI. 可以使用URI.toURL()和URL.toURI()方法来对两个类型的对象互相转换。对于HTML FORM的url encode/decode可以使用java.net.URLEncoder和java.net.URLDecoder来完\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	成，但是对URL对象不适用。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;font-family:Verdana, Arial, Helvetica, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	来源：http://www.cnblogs.com/gaojing/archive/2012/02/04/2413626.html\r\n&lt;/p&gt;', '1', '0', '1477882443', '小兔', null, '0', '40');
INSERT INTO `article` VALUES ('31', '正则表达式 - 语法', '正则表达式', '&lt;div class=&quot;tutintro&quot; style=&quot;border:0px;margin:0px;padding:0px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;p style=&quot;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n		正则表达式(regular expression)描述了一种字符串匹配的模式，可以用来检查一个串是否含有某种子串、将匹配的子串做替换或者从某个串中取出符合某个条件的子串等。\r\n	&lt;/p&gt;\r\n	&lt;ul&gt;\r\n		&lt;li style=&quot;font-size:1em;&quot;&gt;\r\n			列目录时，　dir *.txt或ls *.txt中的*.txt就不是一个正则表达式,因为这里*与正则式的*的含义是不同的。\r\n		&lt;/li&gt;\r\n		&lt;li style=&quot;font-size:1em;&quot;&gt;\r\n			构造正则表达式的方法和创建数学表达式的方法一样。也就是用多种元字符与运算符可以将小的表达式结合在一起来创建更大的表达式。正则表达式的组件可以是单个的字符、字符集合、字符范围、字符间的选择或者所有这些组件的任意组合。\r\n		&lt;/li&gt;\r\n	&lt;/ul&gt;\r\n	&lt;p style=&quot;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n		正则表达式是由普通字符（例如字符 a 到 z）以及特殊字符（称为&quot;元字符&quot;）组成的文字模式。模式描述在搜索文本时要匹配的一个或多个字符串。正则表达式作为一个模板，将某个字符模式与所搜索的字符串进行匹配。\r\n	&lt;/p&gt;\r\n&lt;/div&gt;\r\n&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	普通字符\r\n&lt;/h2&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	普通字符包括没有显式指定为元字符的所有可打印和不可打印字符。这包括所有大写和小写字母、所有数字、所有标点符号和一些其他符号。\r\n&lt;/p&gt;\r\n&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	非打印字符\r\n&lt;/h2&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	非打印字符也可以是正则表达式的组成部分。下表列出了表示非打印字符的转义序列：\r\n&lt;/p&gt;\r\n&lt;table class=&quot;reference notranslate&quot; style=&quot;border:0px;margin:4px 0px;padding:0px;color:#333333;font-family:&amp;quot;font-size:12px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;th width=&quot;20%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;\r\n				字符\r\n			&lt;/th&gt;\r\n			&lt;th width=&quot;80%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;\r\n				描述\r\n			&lt;/th&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				cx\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配由x指明的控制字符。例如， cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 \'c\' 字符。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				f\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配一个换页符。等价于 x0c 和 cL。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				n\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配一个换行符。等价于 x0a 和 cJ。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				r\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配一个回车符。等价于 x0d 和 cM。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				s\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ fnrtv]。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				S\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配任何非空白字符。等价于 [^ fnrtv]。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				t\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配一个制表符。等价于 x09 和 cI。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				v\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配一个垂直制表符。等价于 x0b 和 cK。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	特殊字符\r\n&lt;/h2&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	所谓特殊字符，就是一些有特殊含义的字符，如上面说的&quot;*.txt&quot;中的*，简单的说就是表示任何字符串的意思。如果要查找文件名中有*的文件，则需要对*进行转义，即在其前加一个。ls *.txt。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	许多元字符要求在试图匹配它们时特别对待。若要匹配这些特殊字符，必须首先使字符&quot;转义&quot;，即，将反斜杠字符 () 放在它们前面。下表列出了正则表达式中的特殊字符：\r\n&lt;/p&gt;\r\n&lt;table class=&quot;reference notranslate&quot; style=&quot;border:0px;margin:4px 0px;padding:0px;color:#333333;font-family:&amp;quot;font-size:12px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;th width=&quot;20%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;\r\n				特别字符\r\n			&lt;/th&gt;\r\n			&lt;th width=&quot;80%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;\r\n				描述\r\n			&lt;/th&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				$\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 \'n\' 或 \'r\'。要匹配 $ 字符本身，请使用 $。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				( )\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 ( 和 )。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				*\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 *。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				+\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 +。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				.\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配除换行符 n 之外的任何单字符。要匹配 . ，请使用 . 。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				[\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				标记一个中括号表达式的开始。要匹配 [，请使用 [。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				?\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 ?。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， \'n\' 匹配字符 \'n\'。\'n\' 匹配换行符。序列 \'\' 匹配 &quot;&quot;，而 \'(\' 则匹配 &quot;(&quot;。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				^\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合。要匹配 ^ 字符本身，请使用 ^。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				{\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				标记限定符表达式的开始。要匹配 {，请使用 {。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				|\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				指明两项之间的一个选择。要匹配 |，请使用 |。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	限定符\r\n&lt;/h2&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有*或+或?或{n}或{n,}或{n,m}共6种。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	正则表达式的限定符有：\r\n&lt;/p&gt;\r\n&lt;table class=&quot;reference notranslate&quot; style=&quot;border:0px;margin:4px 0px;padding:0px;color:#333333;font-family:&amp;quot;font-size:12px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;th width=&quot;20%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;\r\n				字符\r\n			&lt;/th&gt;\r\n			&lt;th width=&quot;80%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;\r\n				描述\r\n			&lt;/th&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				*\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配前面的子表达式零次或多次。例如，zo* 能匹配 &quot;z&quot; 以及 &quot;zoo&quot;。* 等价于{0,}。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				+\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配前面的子表达式一次或多次。例如，\'zo+\' 能匹配 &quot;zo&quot; 以及 &quot;zoo&quot;，但不能匹配 &quot;z&quot;。+ 等价于 {1,}。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				?\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配前面的子表达式零次或一次。例如，&quot;do(es)?&quot; 可以匹配 &quot;do&quot; 或 &quot;does&quot; 中的&quot;do&quot; 。? 等价于 {0,1}。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				{n}\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				n 是一个非负整数。匹配确定的 n 次。例如，\'o{2}\' 不能匹配 &quot;Bob&quot; 中的 \'o\'，但是能匹配 &quot;food&quot; 中的两个 o。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				{n,}\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				n 是一个非负整数。至少匹配n 次。例如，\'o{2,}\' 不能匹配 &quot;Bob&quot; 中的 \'o\'，但能匹配 &quot;foooood&quot; 中的所有 o。\'o{1,}\' 等价于 \'o+\'。\'o{0,}\' 则等价于 \'o*\'。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				{n,m}\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				m 和 n 均为非负整数，其中n &amp;lt;= m。最少匹配 n 次且最多匹配 m 次。例如，&quot;o{1,3}&quot; 将匹配 &quot;fooooood&quot; 中的前三个 o。\'o{0,1}\' 等价于 \'o?\'。请注意在逗号和两个数之间不能有空格。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	由于章节编号在大的输入文档中会很可能超过九，所以您需要一种方式来处理两位或三位章节编号。限定符给您这种能力。下面的正则表达式匹配编号为任何位数的章节标题：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Chapter [1-9][0-9]*/&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	请注意，限定符出现在范围表达式之后。因此，它应用于整个范围表达式，在本例中，只指定从 0 到 9 的数字（包括 0 和 9）。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	这里不使用 + 限定符，因为在第二个位置或后面的位置不一定需要有一个数字。也不使用？字符，因为它将章节编号限制到只有两位数。您需要至少匹配 Chapter 和空格字符后面的一个数字。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	如果您知道章节编号被限制为只有 99 章，可以使用下面的表达式来至少指定一位但至多两位数字。\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Chapter [0-9]{1,2}/&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	上面的表达式的缺点是，大于 99 的章节编号仍只匹配开头两位数字。另一个缺点是 Chapter 0 也将匹配。只匹配两位数字的更好的表达式如下：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Chapter [1-9][0-9]?/&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	或\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Chapter [1-9][0-9]{0,1}/&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;*、+和?限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个?就可以实现非贪婪或最小匹配。&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	例如，您可能搜索 HTML 文档，以查找括在 H1 标记内的章节标题。该文本在您的文档中如下：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;H1&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;Chapter 1 – Introduction to Regular Expressions&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/H1&amp;gt;&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	下面的表达式匹配从开始小于符号 (&amp;lt;) 到关闭 H1 标记的大于符号 (&amp;gt;) 之间的所有内容。\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/&amp;lt;.*&amp;gt;/&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	如果您只需要匹配开始 H1 标记，下面的&quot;非贪心&quot;表达式只匹配 &amp;lt;H1&amp;gt;。\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/&amp;lt;.*?&amp;gt;/&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	通过在 *、+ 或 ? 限定符之后放置 ?，该表达式从&quot;贪心&quot;表达式转换为&quot;非贪心&quot;表达式或者最小匹配。\r\n&lt;/p&gt;\r\n&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	定位符\r\n&lt;/h2&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	定位符使您能够将正则表达式固定到行首或行尾。它们还使您能够创建这样的正则表达式，这些正则表达式出现在一个单词内、在一个单词的开头或者一个单词的结尾。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	定位符用来描述字符串或单词的边界，^和$分别指字符串的开始与结束，b描述单词的前或后边界，B表示非单词边界。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	正则表达式的限定符有：\r\n&lt;/p&gt;\r\n&lt;table class=&quot;reference notranslate&quot; style=&quot;border:0px;margin:4px 0px;padding:0px;color:#333333;font-family:&amp;quot;font-size:12px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;th width=&quot;20%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;\r\n				字符\r\n			&lt;/th&gt;\r\n			&lt;th width=&quot;80%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;\r\n				描述\r\n			&lt;/th&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				^\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配输入字符串开始的位置。如果设置了 RegExp 对象的 Multiline 属性，^ 还会与 n 或 r 之后的位置匹配。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				$\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配输入字符串结尾的位置。如果设置了 RegExp 对象的 Multiline 属性，$ 还会与 n 或 r 之前的位置匹配。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				b\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				匹配一个字边界，即字与空格间的位置。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				B\r\n			&lt;/td&gt;\r\n			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;\r\n				非字边界匹配。\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;注意&lt;/strong&gt;：不能将限定符与定位点一起使用。由于在紧靠换行或者字边界的前面或后面不能有一个以上位置，因此不允许诸如 ^* 之类的表达式。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	若要匹配一行文本开始处的文本，请在正则表达式的开始使用 ^ 字符。不要将 ^ 的这种用法与中括号表达式内的用法混淆。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	若要匹配一行文本的结束处的文本，请在正则表达式的结束处使用 $ 字符。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	若要在搜索章节标题时使用定位点，下面的正则表达式匹配一个章节标题，该标题只包含两个尾随数字，并且出现在行首：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/^Chapter [1-9][0-9]{0,1}/&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	真正的章节标题不仅出现行的开始处，而且它还是该行中仅有的文本。它即出现在行首又出现在同一行的结尾。下面的表达式能确保指定的匹配只匹配章节而不匹配交叉引用。通过创建只匹配一行文本的开始和结尾的正则表达式，就可做到这一点。\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/^Chapter [1-9][0-9]{0,1}$/&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	匹配字边界稍有不同，但向正则表达式添加了很重要的能力。字边界是单词和空格之间的位置。非字边界是任何其他位置。下面的表达式匹配单词 Chapter 的开头三个字符，因为这三个字符出现字边界后面：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/bCha/&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	b 字符的位置是非常重要的。如果它位于要匹配的字符串的开始，它在单词的开始处查找匹配项。如果它位于字符串的结尾，它在单词的结尾处查找匹配项。例如，下面的表达式匹配单词 Chapter 中的字符串 ter，因为它出现在字边界的前面：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/terb/&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	下面的表达式匹配 Chapter 中的字符串 apt，但不匹配 aptitude 中的字符串 apt：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Bapt/&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	字符串 apt 出现在单词 Chapter 中的非字边界处，但出现在单词 aptitude 中的字边界处。对于 B 非字边界运算符，位置并不重要，因为匹配不关心究竟是单词的开头还是结尾。\r\n&lt;/p&gt;\r\n&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	选择\r\n&lt;/h2&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	用圆括号将所有选择项括起来，相邻的选择项之间用|分隔。但用圆括号会有一个副作用，是相关的匹配会被缓存，此时可用?:放在第一个选项前来消除这种副作用。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	其中?:是非捕获元之一，还有两个非捕获元是?=和?!，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。\r\n&lt;/p&gt;\r\n&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	反向引用\r\n&lt;/h2&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	对一个正则表达式模式或部分模式两边添加圆括号将导致相关匹配存储到一个临时缓冲区中，所捕获的每个子匹配都按照在正则表达式模式中从左到右出现的顺序存储。缓冲区编号从 1 开始，最多可存储 99 个捕获的子表达式。每个缓冲区都可以使用 \'n\' 访问，其中 n 为一个标识特定缓冲区的一位或两位十进制数。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	可以使用非捕获元字符 \'?:\'、\'?=\' 或 \'?!\' 来重写捕获，忽略对相关匹配的保存。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	反向引用的最简单的、最有用的应用之一，是提供查找文本中两个相同的相邻单词的匹配项的能力。以下面的句子为例：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;Is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the cost of of gasoline going up up&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	上面的句子很显然有多个重复的单词。如果能设计一种方法定位该句子，而不必查找每个单词的重复出现，那该有多好。下面的正则表达式使用单个子表达式来实现这一点：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/b([a-z]+) 1b/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;gi&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	捕获的表达式，正如 [a-z]+ 指定的，包括一个或多个字母。正则表达式的第二部分是对以前捕获的子匹配项的引用，即，单词的第二个匹配项正好由括号表达式匹配。1 指定第一个子匹配项。字边界元字符确保只检测整个单词。否则，诸如&quot;is issued&quot;或&quot;this is&quot;之类的词组将不能正确地被此表达式识别。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	正则表达式后面的全局标记 (g) 指示，将该表达式应用到输入字符串中能够查找到的尽可能多的匹配。表达式的结尾处的不区分大小写 (i) 标记指定不区分大小写。多行标记指定换行符的两边可能出现潜在的匹配。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	反向引用还可以将通用资源指示符 (URI) 分解为其组件。假定您想将下面的 URI 分解为协议（ftp、http 等等）、域地址和页/路径：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;pln&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//www.runoob.com:80/html/html-tutorial.html&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	下面的正则表达式提供该功能：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/(w+)://([^/:]+)(:d*)?([^# ]*)/&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	第一个括号子表达式捕获 Web 地址的协议部分。该子表达式匹配在冒号和两个正斜杠前面的任何单词。第二个括号子表达式捕获地址的域地址部分。子表达式匹配 / 和 : 之外的一个或多个字符。第三个括号子表达式捕获端口号（如果指定了的话）。该子表达式匹配冒号后面的零个或多个数字。只能重复一次该子表达式。最后，第四个括号子表达式捕获 Web 地址指定的路径和/或页信息。该子表达式能匹配不包括 # 或空格字符的任何字符序列。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	将正则表达式应用到上面的 URI，各子匹配项包含下面的内容：\r\n&lt;/p&gt;\r\n&lt;ul style=&quot;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;li style=&quot;font-size:1em;&quot;&gt;\r\n		第一个括号子表达式包含&quot;http&quot;\r\n	&lt;/li&gt;\r\n	&lt;li style=&quot;font-size:1em;&quot;&gt;\r\n		第二个括号子表达式包含&quot;www.runoob.com&quot;\r\n	&lt;/li&gt;\r\n	&lt;li style=&quot;font-size:1em;&quot;&gt;\r\n		第三个括号子表达式包含&quot;:80&quot;\r\n	&lt;/li&gt;\r\n	&lt;li style=&quot;font-size:1em;&quot;&gt;\r\n		第四个括号子表达式包含&quot;/html/html-tutorial.html&quot;\r\n	&lt;/li&gt;\r\n&lt;/ul&gt;\r\n\r\n来源：http://www.runoob.com/regexp/regexp-syntax.html', '1', '0', '1480413823', '小兔', null, '0', '41');
INSERT INTO `article` VALUES ('32', 'php 进度条实现', '进度条，flush实现进度条', '&lt;pre class=&quot;prettyprint lang-php&quot;&gt;&amp;lt;?php \r\nset_time_limit(0);\r\nfor ($i = 0; $i &amp;lt; 500; $i++) {\r\n	$users[] = \'Tom_\' . $i;\r\n}   //end for\r\n$width = 1398;                      	//显示的进度条长度，单位 px\r\n$total = count($users);     		//总共需要操作的记录数\r\n$pix = $width / $total;        		//每条记录的操作所占的进度条单位长度\r\n$progress = 0;                   	//当前进度条长度\r\necho \'\r\n\r\n    &amp;lt;style&amp;gt; \r\n    body, div input { font-family: Tahoma; font-size: 9pt } \r\n    &amp;lt;/style&amp;gt; \r\n    &amp;lt;script language=&quot;JavaScript&quot;&amp;gt; \r\n    &amp;lt;!-- \r\n    function updateProgress(sMsg, iWidth) \r\n    {  \r\n        document.getElementById(&quot;status&quot;).innerHTML = sMsg; \r\n        document.getElementById(&quot;progress&quot;).style.width = iWidth + &quot;px&quot;; \r\n        document.getElementById(&quot;percent&quot;).innerHTML = parseInt(iWidth / \'. $width.\' * 100) + &quot;%&quot;; \r\n     } \r\n    //--&amp;gt; \r\n    &amp;lt;/script&amp;gt;     \r\n\r\n&amp;lt;div style=&quot;margin: 4px; padding: 8px; border: 1px solid gray; background: #EAEAEA; width: &amp;lt;?php echo $width+8; ?&amp;gt;px&quot;&amp;gt; \r\n    &amp;lt;div&amp;gt;&amp;lt;font color=&quot;gray&quot;&amp;gt;如下进度条的动态效果由服务器端 PHP 程序结合客户端 JavaScript 程序生成。&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt; \r\n    &amp;lt;div style=&quot;padding: 0; background-color: white; border: 1px solid navy; width: &amp;lt;?php echo $width; ?&amp;gt;px&quot;&amp;gt; \r\n    &amp;lt;div id=&quot;progress&quot; style=&quot;padding: 0; background-color: #FFCC66; border: 0; width: 0px; text-align: center;   height: 16px&quot;&amp;gt;&amp;lt;/div&amp;gt;             \r\n    &amp;lt;/div&amp;gt; \r\n    &amp;lt;div id=&quot;status&quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/div&amp;gt; \r\n    &amp;lt;div id=&quot;percent&quot; style=&quot;position: relative; top: -30px; text-align: center; font-weight: bold; font-size: 8pt&quot;&amp;gt;0%&amp;lt;/div&amp;gt; \r\n&amp;lt;/div&amp;gt; \';\r\nflush();    //将输出发送给客户端浏览器\r\nforeach ($users as $user) {\r\n	//   在此处使用空循环模拟较为耗时的操作，实际应用中需将其替换；\r\n	//   如果你的操作不耗时，我想你就没必要使用这个脚本了 :)\r\n	for ($i = 0; $i &amp;lt; 1000000; $i++) {\r\n		;;\r\n	}\r\n	echo \'&amp;lt;script language=&quot;JavaScript&quot;&amp;gt; \r\n    updateProgress(&quot;正在操作用户“\'.$user.\'” ....&quot;, \'. min($width, intval($progress)) .\'); \r\n	&amp;lt;/script&amp;gt; \';\r\n	\r\n	flush();    //将输出发送给客户端浏览器，使其可以立即执行服务器端输出的 JavaScript 程序。\r\n	$progress += $pix;\r\n	}   //end foreach\r\n	//   最后将进度条设置成最大值 $width，同时显示操作完成\r\necho \'&amp;lt;script language=&quot;JavaScript&quot;&amp;gt; \r\n    updateProgress(&quot;操作完成！&quot;, \'.$width.\' ); \r\n&amp;lt;/script&amp;gt; \';\r\nflush();\r\n?&amp;gt;&lt;/pre&gt;', '1', '0', '1480576726', '小兔', null, '0', '32');
INSERT INTO `article` VALUES ('33', 'Redis分布式中间件TwemProxy', 'redis,TwemProxy,', '&lt;p style=&quot;font-family:Arial, Helvetica, San-serif;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n	twemproxy,也叫nutcraker。是一个twtter开源的一个redis和memcache代理服务器。 redis作为一个高效的缓存服务器，非常具有应用价值。但是当使用比较多的时候，就希望可以通过某种方式 统一进行管理。避免每个应用每个客户端管理连接的松散性。同时在一定程度上变得可以控制。 搜索了不少的开源代理项目，知乎实现的python分片客户端。node的代理中间层，还有各种restfull的开源代理。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Arial, Helvetica, San-serif;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;ul style=&quot;font-family:Verdana, Arial, Helvetica, sans-serif;text-indent:5px;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;li&gt;\r\n		&lt;p&gt;\r\n			&lt;strong&gt;RedBrige&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n		&lt;ul&gt;\r\n			&lt;li&gt;\r\n				C + epoll实现的一个小的webserver\r\n			&lt;/li&gt;\r\n			&lt;li&gt;\r\n				redis自身执行lua脚本的功能来执行redis命令\r\n			&lt;/li&gt;\r\n			&lt;li&gt;\r\n				访问时在url中带上lua脚本文件的名字，直接调用执行该lua脚本\r\n			&lt;/li&gt;\r\n			&lt;li&gt;\r\n				本质是通过http协议远程执行lua脚本&lt;br /&gt;\r\n&lt;br /&gt;\r\n			&lt;/li&gt;\r\n		&lt;/ul&gt;\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		&lt;p&gt;\r\n			&lt;strong&gt;Webdis&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n		&lt;ul&gt;\r\n			&lt;li&gt;\r\n				libevent, http-parser...实现的小型web服务器\r\n			&lt;/li&gt;\r\n			&lt;li&gt;\r\n				C 语言实现，通过unix-socket,TCP调用redis命令。\r\n			&lt;/li&gt;\r\n			&lt;li&gt;\r\n				访问方法：&amp;nbsp;&amp;nbsp;/cmd/key/arg0,arg1,...&amp;nbsp;实质是对redis命令的简单变换&lt;br /&gt;\r\n&lt;br /&gt;\r\n			&lt;/li&gt;\r\n		&lt;/ul&gt;\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		&lt;p&gt;\r\n			&lt;strong&gt;redis-proxy&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n		&lt;ul&gt;\r\n			&lt;li&gt;\r\n				使用node写的redis代理层。\r\n			&lt;/li&gt;\r\n			&lt;li&gt;\r\n				支持主从节点的失败处理（可以仔细研究）\r\n			&lt;/li&gt;\r\n			&lt;li&gt;\r\n				测试后发现性能为原生的1/3&lt;br /&gt;\r\n&lt;br /&gt;\r\n			&lt;/li&gt;\r\n		&lt;/ul&gt;\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		&lt;p&gt;\r\n			&lt;strong&gt;twemproxy&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n		&lt;ul&gt;\r\n			&lt;li&gt;\r\n				&lt;p&gt;\r\n					支持失败节点自动删除\r\n				&lt;/p&gt;\r\n				&lt;ul&gt;\r\n					&lt;li&gt;\r\n						可以设置重新连接该节点的时间\r\n					&lt;/li&gt;\r\n					&lt;li&gt;\r\n						可以设置连接多少次之后删除该节点\r\n					&lt;/li&gt;\r\n					&lt;li&gt;\r\n						该方式适合作为cache存储\r\n					&lt;/li&gt;\r\n				&lt;/ul&gt;\r\n			&lt;/li&gt;\r\n			&lt;li&gt;\r\n				&lt;p&gt;\r\n					支持设置HashTag\r\n				&lt;/p&gt;\r\n				&lt;ul&gt;\r\n					&lt;li&gt;\r\n						通过HashTag可以自己设定将两个KEYhash到同一个实例上去。\r\n					&lt;/li&gt;\r\n				&lt;/ul&gt;\r\n			&lt;/li&gt;\r\n			&lt;li&gt;\r\n				&lt;p&gt;\r\n					减少与redis的直接连接数\r\n				&lt;/p&gt;\r\n				&lt;ul&gt;\r\n					&lt;li&gt;\r\n						保持与redis的长连接\r\n					&lt;/li&gt;\r\n					&lt;li&gt;\r\n						可设置代理与后台每个redis连接的数目\r\n					&lt;/li&gt;\r\n				&lt;/ul&gt;\r\n			&lt;/li&gt;\r\n			&lt;li&gt;\r\n				&lt;p&gt;\r\n					自动分片到后端多个redis实例上\r\n				&lt;/p&gt;\r\n				&lt;ul&gt;\r\n					&lt;li&gt;\r\n						多种hash算法（部分还没有研究明白)\r\n					&lt;/li&gt;\r\n					&lt;li&gt;\r\n						可以设置后端实例的权重\r\n					&lt;/li&gt;\r\n				&lt;/ul&gt;\r\n			&lt;/li&gt;\r\n			&lt;li&gt;\r\n				&lt;p&gt;\r\n					避免单点问题\r\n				&lt;/p&gt;\r\n				&lt;ul&gt;\r\n					&lt;li&gt;\r\n						可以平行部署多个代理层.client自动选择可用的一个\r\n					&lt;/li&gt;\r\n				&lt;/ul&gt;\r\n			&lt;/li&gt;\r\n			&lt;li&gt;\r\n				&lt;p&gt;\r\n					支持redis pipelining request\r\n				&lt;/p&gt;\r\n			&lt;/li&gt;\r\n			&lt;li&gt;\r\n				&lt;p&gt;\r\n					支持状态监控\r\n				&lt;/p&gt;\r\n				&lt;ul&gt;\r\n					&lt;li&gt;\r\n						可设置状态监控ip和端口，访问ip和端口可以得到一个json格式的状态信息串\r\n					&lt;/li&gt;\r\n					&lt;li&gt;\r\n						可设置监控信息刷新间隔时间\r\n					&lt;/li&gt;\r\n				&lt;/ul&gt;\r\n			&lt;/li&gt;\r\n			&lt;li&gt;\r\n				&lt;p&gt;\r\n					高吞吐量\r\n				&lt;/p&gt;\r\n				&lt;ul&gt;\r\n					&lt;li&gt;\r\n						连接复用，内存复用。\r\n					&lt;/li&gt;\r\n					&lt;li&gt;\r\n						将多个连接请求，组成reids pipelining统一向redis请求。&lt;br /&gt;\r\n&lt;br /&gt;\r\n					&lt;/li&gt;\r\n				&lt;/ul&gt;\r\n			&lt;/li&gt;\r\n		&lt;/ul&gt;\r\n	&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;p style=&quot;font-family:Arial, Helvetica, San-serif;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n	另外可以修改redis的源代码，抽取出redis中的前半部分，作为一个中间代理层。最终都是通过linux下的epoll 事件机制提高并发效率，其中nutcraker本身也是使用epoll的事件机制。并且在性能测试上的表现非常出色。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Arial, Helvetica, San-serif;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n	配置部署建议: 编译时候打开logging模块。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Arial, Helvetica, San-serif;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n	redis部署知识: AOF；一种记录redis写操作的文件，用于恢复redis数据。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-family:Arial, Helvetica, San-serif;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n	来源：http://itindex.net/detail/51307-redis-%E4%B8%AD%E9%97%B4%E4%BB%B6-twemproxy\r\n&lt;/p&gt;', '1', '0', '1480592669', '小兔', null, '0', '32');
INSERT INTO `article` VALUES ('34', 'PHP程序员的技术成长规划', 'PHP程序员的技术成长规划', '&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	按照了解的很多PHP/LNMP程序员的发展轨迹，结合个人经验体会，抽象出很多程序员对未来的迷漫，特别对技术学习的盲目和慌乱，简单梳理了这个每个阶段PHP程序员的技术要求，来帮助很多PHP程序做对照设定学习成长目标。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	本文按照目前主流技术做了一个基本的梳理，整个是假设PHP程序员不是基础非常扎实的情况进行的设定，并且所有设定都非常具体明确清晰，可能会让人觉得不适，请理解仅代表一家之言。（未来技术变化不在讨论范围）\r\n&lt;/p&gt;\r\n&lt;h2 style=&quot;font-family:&amp;quot;color:#333333;font-size:24px;background-color:#FFFFFF;&quot;&gt;\r\n	第一阶段：基础阶段（基础PHP程序员）\r\n&lt;/h2&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;重点：&lt;/strong&gt;把LNMP搞熟练（核心是安装配置基本操作）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;目标：&lt;/strong&gt;能够完成基本的LNMP系统安装，简单配置维护；能够做基本的简单系统的PHP开发；能够在PHP中型系统中支持某个PHP功能模块的开发。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	时间：完成本阶段的时间因人而异，有的成长快半年一年就过了，成长慢的两三年也有。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;1.&lt;/strong&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	基本命令、操作、启动、基本服务配置（包括rpm安装文件，各种服务配置等）；会写简单的shell脚本和awk/sed&amp;nbsp;脚本命令等。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;2.&lt;/strong&gt;&lt;strong&gt;Nginx：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	做到能够安装配置nginx+php，知道基本的nginx核心配置选项，知道&amp;nbsp;server/fastcgi_pass/access_log&amp;nbsp;等基础配置，目标是能够让nginx+php_fpm顺利工作。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;3.&lt;/strong&gt;&lt;strong&gt;MySQL：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	会自己搭建mysql，知道基本的mysql配置选项；知道innodb和myisam的区别，知道针对InnoDB和MyISAM两个引擎的不同 配置选项；知道基本的两个引擎的差异和选择上面的区别；能够纯手工编译搭建一个MySQL数据库并且配置好编码等正常稳定运行；核心主旨是能够搭建一个可 运行的MySQL数据库。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;4.&lt;/strong&gt;&lt;strong&gt;PHP：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	基本语法数组、字符串、数据库、XML、Socket、GD/ImageMgk图片处理等等；熟悉各种跟MySQL操作链接的api（mysql /mysqli/PDO)，知道各种编码问题的解决；知道常规熟练使用的PHP框架（ThinkPHP、Zendframework、Yii、Yaf 等）；了解基本MVC的运行机制和为什么这么做，稍微知道不同的PHP框架之间的区别；能够快速学习一个&lt;a href=&quot;http://www.codeceo.com/article/mvc-framework-mvc-design.html&quot; target=&quot;_blank&quot;&gt;MVC框架&lt;/a&gt;。能够知道开发工程中的文件目录组织，有基本的良好的代码结构和风格，能够完成小系统的开发和中型系统中某个模块的开发工作。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;5.&lt;/strong&gt;&lt;strong&gt;前端：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	如果条件时间允许，可以适当学习下&amp;nbsp;HTML/CSS/JS&amp;nbsp;等相关知识，知道什么web标准，div+css的web/wap页面模式，知道 HTML5和HTML4的区别；了解一些基本的前端只是和JS框架（jQuery之类的）；了解一些基本的JavaScript编程知识；（本项不是必须 项，如果有时间，稍微了解一下是可以的，不过不建议作为重点，除非个人有强烈兴趣）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;6.&lt;/strong&gt;&lt;strong&gt;系统设计：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	能够完成小型系统的基本设计，包括简单的数据库设计，能够完成基本的：浏览器&amp;nbsp;-&amp;gt;&amp;nbsp;Nginx+PHP&amp;nbsp;-&amp;gt;&amp;nbsp;数据库&amp;nbsp;架构的设计开发工作；能够支撑每天几十万到数百万流量网站的开发维护工作；\r\n&lt;/p&gt;\r\n&lt;h2 style=&quot;font-family:&amp;quot;color:#333333;font-size:24px;background-color:#FFFFFF;&quot;&gt;\r\n	第二阶段：提高阶段&amp;nbsp;（中级PHP程序员）\r\n&lt;/h2&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;重点：&lt;/strong&gt;提高针对LNMP的技能，能够更全面的对LNMP有熟练的应用。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;目标：&lt;/strong&gt;能够随时随地搭建好LNMP环境，快速完成常规配置；能够追查解决大部分遇到的开发和线上环境的问题；能够独立承担中型系统的构架和开发工作；能够在大型系统中承担某个中型模块的开发工作；\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;1.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;Linux:&amp;nbsp;&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	在第一阶段的基础上面，能够流畅的使用Shell脚本来完成很多自动化的工作；awk/sed/perl&amp;nbsp;也操作的不错，能够完成很多文本处理和数 据统计等工作；基本能够安装大部分非特殊的Linux程序（包括各种库、包、第三方依赖等等，比如MongoDB/Redis/Sphinx /Luncene/SVN之类的）；了解基本的Linux服务，知道如何查看Linux的性能指标数据，知道基本的Linux下面的问题跟踪等。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;2.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;Nginx:&amp;nbsp;&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	在第一阶段的基础上面，了解复杂一些的Nginx配置；包括&amp;nbsp;多核配置、events、proxy_pass，sendfile/tcp_*配置， 知道超时等相关配置和性能影响；知道nginx除了web&amp;nbsp;server，还能够承担代理服务器、反向静态服务器等配置；知道基本的nginx配置调优； 知道如何配置权限、编译一个nginx扩展到nginx；知道基本的nginx运行原理（master/worker机制，epoll），知道为什么 nginx性能比apache性能好等知识；\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;3.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;MySQL/MongoDB：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	在第一阶段的基础上面，在MySQL开发方面，掌握很多小技巧，包括常规SQL优化（group&amp;nbsp;by/order&amp;nbsp;by/rand优化等）；除了 能够搭建MySQL，还能够冷热备份MySQL数据，还知道影响innodb/myisam性能的配置选项（比如key_buffer /query_cache/sort_buffer/innodb_buffer_pool_size /innodb_flush_log_at_trx_commit等），也知道这些选项配置成为多少值合适；另外也了解一些特殊的配置选项，比如&amp;nbsp;&amp;nbsp;知道 如何搭建mysql主从同步的环境，知道各个binlog_format的区别；知道MySQL的性能追查，包括slow_log/explain等，还 能够知道基本的索引建立处理等知识；原理方面了解基本的MySQL的架构（Server+存储引擎），知道基本的InnoDB/MyISAM索引存储结构 和不同（聚簇索引，B树）；知道基本的InnoDB事务处理机制；了解大部分MySQL异常情况的处理方案（或者知道哪儿找到处理方案）。条件允许的情 况，建议了解一下NoSQL的代表MongoDB数据库，顺便对比跟MySQL的差别，同事能够在合适的应用场景安全谨慎的使用MongoDB，知道基本 的PHP与MongoDB的结合开发。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;4.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;Redis/Memcached：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	在大部分中型系统里面一定会涉及到缓存处理，所以一定要了解基本的缓存；知道Memcached和Redis的异同和应用场景，能够独立安 装&amp;nbsp;Redis/Memcached，了解Memcahed的一些基本特性和限制，比如最大的value值，知道PHP跟他们的使用结合；Redis了解 基本工作原理和使用，了解常规的数据类型，知道什么场景应用什么类型，了解Redis的事务等等。原理部分，能够大概了解Memcached的内存结构 （slab机制），redis就了解常用数据类型底层实现存储结构（SDS/链表/SkipList/HashTable）等等，顺便了解一下Redis 的事务、RDB、AOF等机制更好\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;5.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;PHP：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	除了第一阶段的能力，安装配置方面能够随意安装PHP和各种第三方扩展的编译安装配置；了解php-fpm的大部分配置选项和含义（如 max_requests/max_children/request_terminate_timeout之类的影响性能的配置），知道mod_php /fastcgi的区别；在PHP方面已经能够熟练各种基础技术，还包括各种深入些的PHP，包括对PHP面向对象的深入理解/SPL/语法层面的特殊特 性比如反射之类的；在框架方面已经阅读过最少一个以上常规PHP&amp;nbsp;MVC框架的代码了，知道基本PHP框架内部实现机制和设计思想；在PHP开发中已经能 够熟练使用常规的&lt;a href=&quot;http://www.codeceo.com/article/category/develop/design-patterns&quot; target=&quot;_blank&quot;&gt;设计模式&lt;/a&gt;来 应用开发（抽象工厂/单例/观察者/命令链/策略/适配器&amp;nbsp;等模式）；建议开发自己的PHP&amp;nbsp;MVC框架来充分让开发自由化，让自己深入理解MVC模式， 也让自己能够在业务项目开发里快速升级；熟悉PHP的各种代码优化方法，熟悉大部分PHP安全方面问题的解决处理；熟悉基本的PHP执行的机制原理 （Zend引擎/扩展基本工作机制）；\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;6.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;C/C++：&lt;/strong&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	开始涉猎一定的C/C++语言，能够写基本的C/C++代码，对基本的C/C++语法熟悉（指针、数组操作、字符串、常规标准API）和数据结构 （链表、树、哈希、队列）有一定的熟悉下；对Linux下面的C语言开发有基本的了解概念，会简单的makefile文件编写，能够使用简单的 GCC/GDB的程序编译简单调试工作；对基本的网络编程有大概了解。（本项是为了向更高层次打下基础）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;7.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;前端：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	在第一阶段的基础上面，熟悉基本的HTTP协议（协议代码200/300/400/500，基本的HTTP交互头）；条件允许，可以在深入写出稍微 优雅的HTML+CSS+JavaScript，或者能够大致简单使用某些前端框架（jQuery/YUI/ExtJS/RequireJS/&lt;a href=&quot;http://www.codeceo.com/article/bootstrap-web-css-framework.html&quot; target=&quot;_blank&quot;&gt;Bootstrap&lt;/a&gt;之类）；如果条件允许，可以深入学习JavaScript编程，比如闭包机制、DOM处理；再深入些可以读读jQuery源码做深入学习。（本项不做重点学习，除非对前端有兴趣）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;8.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;系统设计：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	能够设计大部分中型系统的网站架构、数据库、基本PHP框架选型；性能测试排查处理等；能够完成类似：浏览 器&amp;nbsp;-&amp;gt;&amp;nbsp;CDN(Squid)&amp;nbsp;-&amp;gt;&amp;nbsp;Nginx+PHP&amp;nbsp;-&amp;gt;&amp;nbsp;缓存&amp;nbsp;-&amp;gt;&amp;nbsp;数据库&amp;nbsp;结构网站的基本设计开发维护；能够支撑 每天数百万到千万流量基本网站的开发维护工作；\r\n&lt;/p&gt;\r\n&lt;h2 style=&quot;font-family:&amp;quot;color:#333333;font-size:24px;background-color:#FFFFFF;&quot;&gt;\r\n	第三阶段：高级阶段&amp;nbsp;（高级PHP程序员）\r\n&lt;/h2&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;重点：&lt;/strong&gt;除了基本的LNMP程序，还能够在某个方向或领域有深入学习。（纵深维度发展）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;目标：&lt;/strong&gt;除了能够完成基本的PHP业务开发，还能够解决大部分深入复杂的技术问题，并且可以独立设计完成中大型的系统设计和开发工作；自己能够独立hold深入某个技术方向，在这块比较专业。（比如在MySQL、Nginx、PHP、Redis等等任一方向深入研究）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;1.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;Linux：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	除了第二阶段的能力，在Linux下面除了常规的操作和性能监控跟踪，还能够使用很多高级复杂的命令完成工作（watch/tcpdump /starce/ldd/ar等)；在shell脚本方面，已经能够编写比较复杂的shell脚本（超过500行）来协助完成很多包括备份、自动化处理、 监控等工作的shell；对awk/sed/perl&amp;nbsp;等应用已经如火纯青，能够随意操作控制处理文本统计分析各种复杂格式的数据；对Linux内部机制 有一些了解，对内核模块加载，启动错误处理等等有个基本的处理；同时对一些其他相关的东西也了解，比如NFS、磁盘管理等等；\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;2.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;Nginx:&amp;nbsp;&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	在第二阶段的基础上面，已经能够把Nginx操作的很熟练，能够对Nginx进行更深入的运维工作，比如监控、性能优化，复杂问题处理等等；看个人 兴趣，更多方面可以考虑侧重在关于Nginx工作原理部分的深入学习，主要表现在阅读源码开始，比如具体的master/worker工作机 制，Nginx内部的事件处理，内存管理等等；同时可以学习Nginx扩展的开发，可以定制一些自己私有的扩展；同时可以对Nginx+Lua有一定程度 的了解，看看是否可以结合应用出更好模式；这个阶段的要求是对Nginx原理的深入理解，可以考虑成为Nginx方向的深入专业者。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;3.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;MySQL/MongoDB：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	在第二阶段的基础上面，在MySQL应用方面，除了之前的基本SQL优化，还能够在完成一些复杂操作，比如大批量数据的导入导出，线上大批量数据的 更改表结构或者增删索引字段等等高危操作；除了安装配置，已经能够处理更多复杂的MySQL的问题，比如各种问题的追查，主从同步延迟问题的解决、跨机房 同步数据方案、MySQL高可用架构等都有涉及了解；对MySQL应用层面，对MySQL的核心关键技术比较熟悉，比如事务机制（隔离级别、锁等）、对触 发器、分区等技术有一定了解和应用；对MySQL性能方面，有包括磁盘优化（SAS迁移到SSD）、服务器优化（内存、服务器本身配置）、除了二阶段的其 他核心性能优化选项（innodb_log_buffer_size/back_log/table_open_cache /thread_cache_size/innodb_lock_wait_timeout等）、连接池软件选择应用，对show&amp;nbsp;* （show&amp;nbsp;status/show&amp;nbsp;profile）类的操作语句有深入了解，能够完成大部分的性能问题追查；MySQL备份技术的深入熟悉，包括灾备 还原、对Binlog的深入理解，冷热备份，多IDC备份等；在MySQL原理方面，有更多了解，比如对MySQL的工作机制开始阅读部分源码，比如对主 从同步（复制）技术的源码学习，或者对某个存储引擎（MyISAM/Innodb/TokuDB）等等的源码学习理解，如果条件允许，可以参考CSV引擎 开发自己简单的存储引擎来保存一些数据，增强对MySQL的理解；在这个过程，如果自己有兴趣，也可以考虑往DBA方向发展。MongoDB层面，可以考 虑比如说在写少读多的情况开始在线上应用MongoDB，或者是做一些线上的数据分析处理的操作，具体场景可以按照工作来，不过核心是要更好的深入理解 RMDBS和NoSQL的不同场景下面的应用，如果条件或者兴趣允许，可以开始深入学习一下MongoDB的工作机制。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;4.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;Redis/Memcached：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	在第二阶段的基础上面，能够更深入的应用和学习。因为Memcached不是特别复杂，建议可以把源码进行阅读，特别是内存管理部分，方便深入理 解；Redis部分，可以多做一些复杂的数据结构的应用（zset来做排行榜排序操作/事务处理用来保证原子性在秒杀类场景应用之类的使用操作）；多涉及 aof等同步机制的学习应用，设计一个高可用的Redis应用架构和集群；建议可以深入的学习一下Redis的源码，把在第二阶段积累的知识都可以应用 上，特别可以阅读一下包括核心事件管理、内存管理、内部核心数据结构等充分学习了解一下。如果兴趣允许，可以成为一个Redis方面非常专业的使用者。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;5.&amp;nbsp;PHP：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	作为基础核心技能，我们在第二阶段的基础上面，需要有更深入的学习和应用。从基本代码应用上面来说，能够解决在PHP开发中遇到95%的问题，了解 大部分PHP的技巧；对大部分的PHP框架能够迅速在一天内上手使用，并且了解各个主流PHP框架的优缺点，能够迅速方便项目开发中做技术选型；在配置方 面，除了常规第二阶段会的知识，会了解一些比较偏门的配置选项（php&amp;nbsp;auto_prepend_file/auto_append_file），包括 扩展中的一些复杂高级配置和原理（比如memcached扩展配置中的memcache.hash_strategy、apc扩展配置中的 apc.mmap_file_mask/apc.slam_defense/apc.file_update_protection之类的）；对php的 工作机制比较了解，包括php-fpm工作机制（比如php-fpm在不同配置机器下面开启进程数量计算以及原理），对zend引擎有基本熟悉 （vm/gc/stream处理），阅读过基本的PHP内核源码（或者阅读过相关文章），对PHP内部机制的大部分核心数据结构（基础类型/Array /Object）实现有了解，对于核心基础结构（zval/hashtable/gc）有深入学习了解；能够进行基本的PHP扩展开发，了解一些扩展开发 的中高级知识（minit/rinit等），熟悉php跟apache/nginx不同的通信交互方式细节（mod_php/fastcgi）；除了开发 PHP扩展，可以考虑学习开发Zend扩展，从更底层去了解PHP。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;6.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;C/C++：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	在第二阶段基础上面，能够在C/C++语言方面有更深入的学习了解，能够完成中小型C/C++系统的开发工作；除了基本第二阶段的基础C/C++语 法和数据结构，也能够学习一些特殊数据结构（b-tree/rb-tree/skiplist/lsm-tree/trie-tree等）方便在特殊工作 中需求；在系统编程方面，熟悉多进程、多线程编程；多进程情况下面了解大部分多进程之间的通信方式，能够灵活选择通信方式（共享内存/信号量/管道等）； 多线程编程能够良好的解决锁冲突问题，并且能够进行多线程程序的开发调试工作；同时对网络编程比较熟悉，了解多进程模型/多线程模型/异步网络IO模型的 差别和选型，熟悉不同异步网络IO模型的原理和差异（select/poll/epoll/iocp等），并且熟悉常见的异步框架（ACE/ICE /libev/libevent/libuv/Boost.ASIO等）和使用，如果闲暇也可以看看一些国产自己开发的库（比如muduo）；同时能够设 计好的高并发程序架构（leader-follow/master-worker等）；了解大部分C/C++后端Server开发中的问题（内存管理、日 志打印、高并发、前后端通信协议、服务监控），知道各个后端服务RPC通信问题（struct/http/thirft/protobuf等）；能够更熟 络的使用GCC和GDB来开发编译调试程序，在线上程序core掉后能够迅速追查跟踪解决问题；通用模块开发方面，可以积累或者开发一些通用的工具或库 （比如异步网络框架、日志库、内存池、线程池等），不过开发后是否应用要谨慎，省的埋坑去追bug；\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;7.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;前端：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	深入了解HTTP协议（包括各个细致协议特殊协议代码和背后原因，比如302静态文件缓存了，502是nginx后面php挂了之类的）；除了之前 的前端方面的各种框架应用整合能力，前端方面的学习如果有兴趣可以更深入，表现形式是，可以自己开发一些类似jQuery的前端框架，或者开发一个富文本 编辑器之类的比较琐碎考验JavaScript功力；\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;8.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;其他领域语言学习：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	在基础的PHP/C/C++语言方面有基本积累，建议在当前阶段可以尝试学习不同的编程语言，看个人兴趣爱好，脚本类语言可以学学&amp;nbsp;Python /Ruby&amp;nbsp;之类的，函数式编程语言可以试试&amp;nbsp;Lisp/Haskell/Scala/Erlang&amp;nbsp;之类的，静态语言可以试试&amp;nbsp;Java /Golang，数据统计分析可以了解了解R语言，如果想换个视角做后端业务，可以试试&amp;nbsp;Node.js还有前面提到的跟Nginx结合的 Nginx_Lua等。学习不同的语言主要是提升自己的视野和解决问题手段的差异，比如会了解除了进程/线程，还有轻量级协程；比如在跨机器通信场景下 面，Erlang的解决方案简单的惊人；比如在不想选择C/C++的情况下，还有类似高效的Erlang/Golang可用等等；主要是提升视野。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;9.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;其他专业方向学习：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	在本阶段里面，会除了基本的LNMP技能之外，会考虑一些其他领域知识的学习，这些都是可以的，看个人兴趣和长期的目标方向。目前情况能够选择的领 域比较多，比如、云计算（分布式存储、分布式计算、虚拟机等），机器学习（数据挖掘、模式识别等，应用到统计、个性化推荐），自然语言处理（中文分词 等），搜索引擎技术、图形图像、语音识别等等。除了这些高大上的，也有很多偏工程方面可以学习的地方，比如高性能系统、移动开发 （Android/IOS）、计算机安全、嵌入式系统、硬件等方向。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;strong&gt;10.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;系统设计：&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	系统设计在第二阶段的基础之上，能够应用掌握的经验技能，设计出比较复杂的中大型系统，能够解决大部分线上的各种复杂系统的问题，完成类似&amp;nbsp;浏览器&amp;nbsp;-&amp;gt;&amp;nbsp;CDN&amp;nbsp;-&amp;gt;&amp;nbsp;&lt;a href=&quot;http://www.codeceo.com/article/balanced-algorithm.html&quot; target=&quot;_blank&quot;&gt;负载均衡&lt;/a&gt;&amp;nbsp;-&amp;gt; 接入层&amp;nbsp;-&amp;gt;&amp;nbsp;Nginx+PHP&amp;nbsp;-&amp;gt;&amp;nbsp;业务缓存&amp;nbsp;-&amp;gt;&amp;nbsp;数据库&amp;nbsp;-&amp;gt;&amp;nbsp;各路复杂后端RPC交互（存储后端、逻辑后端、反作弊 后端、外部服务）&amp;nbsp;-&amp;gt;&amp;nbsp;更多后端&amp;nbsp;酱紫的复杂业务；能够支撑每天数千万到数亿流量网站的正常开发维护工作。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:18px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	来源：http://blog.leanote.com/post/darker/PHP程序员的技术成长规划-3\r\n&lt;/p&gt;', '1', '0', '1480906020', '小兔', null, '0', '38');
INSERT INTO `article` VALUES ('35', 'mysql 全文索引学习笔记详解', 'mysql 全文索引', '&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	全文索引是mysql中一个比较特殊的功能，下面我来给大家介绍我自己在学习mysql全文索引的一些笔记吧，有需要了解的同学可进入参考。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	场景：需要做一个关于标题的模糊查询，只是记录有点多，而且需要相对精确，比如搜索：ac， 不能出现abc，可以接受acb,bac,之类。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	mysql全文搜索有三种模式：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	一、自然语言查找。这是mysql默认的全文搜索方式，sql示例：&lt;br /&gt;\r\n[code=plain]\r\n&lt;/p&gt;\r\n&lt;table width=&quot;620&quot; align=&quot;center&quot; border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; style=&quot;color:#000000;font-family:simsun;font-size:14px;margin:0px auto !important;background:#FFBB77;&quot; class=&quot;ke-zeroborder&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;464&quot; height=&quot;27&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				&amp;nbsp;代码如下\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;109&quot; align=&quot;center&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				复制代码\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td height=&quot;auto&quot; colspan=&quot;2&quot; valign=&quot;top&quot; bgcolor=&quot;#FFFFFF&quot; class=&quot;copyclass&quot; id=&quot;copy8708&quot;&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					select&amp;nbsp; id,title FROM post WHERE MATCH(content) AGAINST (\'search keyword\')\r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	或者显式声明使用自然语言搜索方式&lt;br /&gt;\r\n[code=plain]\r\n&lt;/p&gt;\r\n&lt;table width=&quot;620&quot; align=&quot;center&quot; border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; style=&quot;color:#000000;font-family:simsun;font-size:14px;margin:0px auto !important;background:#FFBB77;&quot; class=&quot;ke-zeroborder&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;464&quot; height=&quot;27&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				&amp;nbsp;代码如下\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;109&quot; align=&quot;center&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				复制代码\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td height=&quot;auto&quot; colspan=&quot;2&quot; valign=&quot;top&quot; bgcolor=&quot;#FFFFFF&quot; class=&quot;copyclass&quot; id=&quot;copy8846&quot;&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					select&amp;nbsp; id,title FROM post WHERE MATCH(content) AGAINST (\'search keyword\' IN NATURAL LANGUAGE MODE)\r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	&lt;br /&gt;\r\n测试：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	1、100万数据，mysql / mongo ，在这种情况下。无论是查询什么数据，基本上都在0.00x秒级，&lt;br /&gt;\r\nmysql的查询是like \'%xxxx%\' , mongo 是 {title:/xxxx/i}&amp;nbsp;&lt;br /&gt;\r\n一般情况下，两者速度真心差不多，但如果查询一下不数据库中不存在的关键字，一般都在0.2秒至2秒左右，mongo会相对好一点，在0.5秒&lt;br /&gt;\r\n&amp;nbsp;&lt;br /&gt;\r\n2、500万～1000万数据&lt;br /&gt;\r\n查询条件如上&lt;br /&gt;\r\nmysql 查询的时候 cpu 占40%左右，20多秒 （mysql 1100万数据）&lt;br /&gt;\r\nmongo 查询的时候 CPU占50%左右，10秒/8秒左右 （mongo 550万）&lt;br /&gt;\r\n这种性能没法用啊&lt;br /&gt;\r\n&amp;nbsp;&lt;br /&gt;\r\n---下一步&lt;br /&gt;\r\n1、xunsearch / coreseek(sphinx)&lt;br /&gt;\r\n2、mysql 全文索引&lt;br /&gt;\r\n&amp;nbsp;&lt;br /&gt;\r\n需要再次测试一下。关键mysql虽然100万只有0.00x或者0.0x秒左右。但是如果多个并发的时候就会卡死了。&lt;br /&gt;\r\n所以需要再次考虑 场景的复杂性\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	继昨天的处理之后，又来新的笔记 ，这次的笔记纯粹是个人的测试，与实际条件有关，比如，我要查询的字段不超过varchar的255的长度，所以我才这么做。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	昨天做普通索引后，1100万条记录，索引 为220M，改成全文索引后，索引文件为1.1G，存储空间上，涨了5倍左右。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	以下是笔记 ，请不要笑话，场景不同而已&lt;br /&gt;\r\n&amp;nbsp;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	•经过测试\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	•title 字段改为全文索引后，在1100万条的时候&amp;nbsp;&lt;br /&gt;\r\n•优点：&amp;nbsp;&lt;br /&gt;\r\n•速度也为0.0x秒级。速度非常快&lt;br /&gt;\r\n•即使有or条件，只要带了limit参数，速度也非常快&lt;br /&gt;\r\n•缺点：&amp;nbsp;&lt;br /&gt;\r\n•如果查询不带limit ,直接卡死，因为他要计算total count&lt;br /&gt;\r\n•select count() 卡死&lt;br /&gt;\r\n•如果查询不存在的关键字，卡死&lt;br /&gt;\r\n•使用方法&amp;nbsp;&lt;br /&gt;\r\n•尽量不做select count 查询 （数量低于100万时可以考虑，超过100万时，其实已经没有必要）&lt;br /&gt;\r\n•查询一定要带上limit条件&lt;br /&gt;\r\n•每次查询到不存在的关键字时，记录到关键词库，每次有新增记录时，select 关键词库一下，如果新增房间中有关键字，则将关键词去除，避免卡死&lt;br /&gt;\r\n•暂时不使用coreseek（sphinx）/xunsearch等第三方工具&amp;nbsp;&lt;br /&gt;\r\n•xunsearch只支持分词查询，不支持完全匹配&lt;br /&gt;\r\n•第三方工具，耗内存，而且增量的时候，不够及时\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	费话说了一大篇下面进入测试\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	&lt;br /&gt;\r\n一个SELECT查询中的LIKE语句来执行这种查询，尽管这种方法可行，\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	但对于全文查找而言，这是一种效率极端低下的方法，尤其在处理大量数据的时候。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	-------------------&lt;br /&gt;\r\n上面这句话 我是在网上看到的， 说得挺有道理的， mysql 本身提供了一种叫做全文搜索的技术吧，\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	不过这好像从后来的版本才有的， 比较旧的版本不支持，不过那是很早期的版本了，\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	现在大家使用的版本 应该都支持的。我现在使用 mysql6.0.4 来演示\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	全文搜索 比起 索引 我觉得更加全面， 索引只对某一个字段，然后在查询时候使用 like 配合。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	全文搜索它可以设置多个字段进行搜索，可以说是比起 select .... like 高级吧。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	好了， 既然 全文搜索 有这样的优点，下面我们来看看 是否真的如此。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	下面提供的测试例子，是 mysql 手册上面的一个例子\r\n&lt;/p&gt;\r\n&lt;table width=&quot;620&quot; align=&quot;center&quot; border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; style=&quot;color:#000000;font-family:simsun;font-size:14px;margin:0px auto !important;background:#FFBB77;&quot; class=&quot;ke-zeroborder&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;464&quot; height=&quot;27&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				&amp;nbsp;代码如下\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;109&quot; align=&quot;center&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				复制代码\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td height=&quot;auto&quot; colspan=&quot;2&quot; valign=&quot;top&quot; bgcolor=&quot;#FFFFFF&quot; class=&quot;copyclass&quot; id=&quot;copy5291&quot;&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					CREATE TABLE articles (\r\n				&lt;/p&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					&amp;nbsp;&amp;nbsp; id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,\r\n				&lt;/p&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					&amp;nbsp;&amp;nbsp; title VARCHAR(200),\r\n				&lt;/p&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					&amp;nbsp;&amp;nbsp;&amp;nbsp; body TEXT,\r\n				&lt;/p&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; FULLTEXT (title,body)\r\n				&lt;/p&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					&amp;nbsp;&amp;nbsp; );\r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	上面这是创建表的 mysql 语句， 其中最后一句&amp;nbsp; FULLTEXT (title,body)\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	就是为 title 和 body 创建一个 全文搜索，也就是 以后 方便搜索 标题 和\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	标题正文的内容。复制语句上去 就成功创建一张表了。&lt;br /&gt;\r\n查看一下 全文搜索 是否被创建， 下面语句作用是：查看表的 主键， 索引， 全文搜索\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	show indexes from 表名\r\n&lt;/p&gt;\r\n&lt;table width=&quot;620&quot; align=&quot;center&quot; border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; style=&quot;color:#000000;font-family:simsun;font-size:14px;margin:0px auto !important;background:#FFBB77;&quot; class=&quot;ke-zeroborder&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;464&quot; height=&quot;27&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				&amp;nbsp;代码如下\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;109&quot; align=&quot;center&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				复制代码\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td height=&quot;auto&quot; colspan=&quot;2&quot; valign=&quot;top&quot; bgcolor=&quot;#FFFFFF&quot; class=&quot;copyclass&quot; id=&quot;copy8961&quot;&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					mysql&amp;gt; show indexes from articles;&lt;br /&gt;\r\n+----------+------------+----------+--------------+-------------+&lt;br /&gt;\r\n| Table&amp;nbsp;&amp;nbsp;&amp;nbsp; | Non_unique | Key_name | Seq_in_index | Column_name |&lt;br /&gt;\r\n+----------+------------+----------+--------------+-------------+&lt;br /&gt;\r\n| articles |&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 | PRIMARY&amp;nbsp; |&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 | id&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; |&lt;br /&gt;\r\n| articles |&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 | title&amp;nbsp;&amp;nbsp;&amp;nbsp; |&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 | title&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; |&lt;br /&gt;\r\n| articles |&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 | title&amp;nbsp;&amp;nbsp;&amp;nbsp; |&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2 | body&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; |&lt;br /&gt;\r\n+----------+------------+----------+--------------+-------------+&lt;br /&gt;\r\n3 rows in set (0.01 sec)\r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	可以看到 成功创建了， Key_name名字叫做 title ， 它的字段列名Column_name是 title 和 body\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	=================\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	下面为 表 添加数据内容， 好让我们进行测试。\r\n&lt;/p&gt;\r\n&lt;table width=&quot;620&quot; align=&quot;center&quot; border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; style=&quot;color:#000000;font-family:simsun;font-size:14px;margin:0px auto !important;background:#FFBB77;&quot; class=&quot;ke-zeroborder&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;464&quot; height=&quot;27&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				&amp;nbsp;代码如下\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;109&quot; align=&quot;center&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				复制代码\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td height=&quot;auto&quot; colspan=&quot;2&quot; valign=&quot;top&quot; bgcolor=&quot;#FFFFFF&quot; class=&quot;copyclass&quot; id=&quot;copy7924&quot;&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					INSERT INTO articles (title,body) VALUES\r\n				&lt;/p&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					&amp;nbsp;&amp;nbsp;&amp;nbsp; (\'MySQL Tutorial\',\'DBMS stands for DataBase ...\'),\r\n				&lt;/p&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					&amp;nbsp;&amp;nbsp;&amp;nbsp; (\'How To Use MySQL Well\',\'After you went through a ...\'),\r\n				&lt;/p&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					&amp;nbsp;&amp;nbsp;&amp;nbsp; (\'Optimizing MySQL\',\'In this tutorial we will show ...\'),\r\n				&lt;/p&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					&amp;nbsp;&amp;nbsp;&amp;nbsp; (\'1001 MySQL Tricks\',\'1. Never run mysqld as root. 2. ...\'),\r\n				&lt;/p&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					&amp;nbsp;&amp;nbsp;&amp;nbsp; (\'MySQL vs. YourSQL\',\'In the following database comparison ...\'),\r\n				&lt;/p&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					&amp;nbsp;&amp;nbsp;&amp;nbsp; (\'MySQL Security\',\'When configured properly, MySQL ...\');\r\n				&lt;/p&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					mysql&amp;gt; select * from articles;&lt;br /&gt;\r\n+----+-----------------------+------------------------------------------+&lt;br /&gt;\r\n| id | title&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | body&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; |&lt;br /&gt;\r\n+----+-----------------------+------------------------------------------+&lt;br /&gt;\r\n|&amp;nbsp; 1 | MySQL Tutorial&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | DBMS stands for DataBase ...&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; |&lt;br /&gt;\r\n|&amp;nbsp; 2 | How To Use MySQL Well | After you went through a ...&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; |&lt;br /&gt;\r\n|&amp;nbsp; 3 | Optimizing MySQL&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | In this tutorial we will show ...&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; |&lt;br /&gt;\r\n|&amp;nbsp; 4 | 1001 MySQL Tricks&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | 1. Never run mysqld as root. 2. ...&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; |&lt;br /&gt;\r\n|&amp;nbsp; 5 | MySQL vs. YourSQL&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | In the following database comparison ... |&lt;br /&gt;\r\n|&amp;nbsp; 6 | MySQL Security&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | When configured properly, MySQL ...&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; |&lt;br /&gt;\r\n+----+-----------------------+------------------------------------------+&lt;br /&gt;\r\n6 rows in set (0.00 sec)\r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	添加好数据库， 下面我们就使用 全文搜索 提供的 查询语句 进行测试。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	=================================================\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	使用语句的模版如下：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	SELECT 表字段 FROM 表名 WHERE MATCH (全文搜索表字段) AGAINST (\'搜索字符串\');\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	下面 搜索 title 和 body 包含 database 这个字符串\r\n&lt;/p&gt;\r\n&lt;table width=&quot;620&quot; align=&quot;center&quot; border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; style=&quot;color:#000000;font-family:simsun;font-size:14px;margin:0px auto !important;background:#FFBB77;&quot; class=&quot;ke-zeroborder&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;464&quot; height=&quot;27&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				&amp;nbsp;代码如下\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;109&quot; align=&quot;center&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				复制代码\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td height=&quot;auto&quot; colspan=&quot;2&quot; valign=&quot;top&quot; bgcolor=&quot;#FFFFFF&quot; class=&quot;copyclass&quot; id=&quot;copy8367&quot;&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					&amp;nbsp;mysql&amp;gt; SELECT * FROM articles&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp; -&amp;gt;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp; -&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; WHERE MATCH (title,body) AGAINST (\'database\');&lt;br /&gt;\r\n+----+-------------------+------------------------------------------+&lt;br /&gt;\r\n| id | title&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | body&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; |&lt;br /&gt;\r\n+----+-------------------+------------------------------------------+&lt;br /&gt;\r\n|&amp;nbsp; 5 | MySQL vs. YourSQL | In the following database comparison ... |&lt;br /&gt;\r\n|&amp;nbsp; 1 | MySQL Tutorial&amp;nbsp;&amp;nbsp;&amp;nbsp; | DBMS stands for DataBase ...&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; |&lt;br /&gt;\r\n+----+-------------------+------------------------------------------+&lt;br /&gt;\r\n2 rows in set (0.00 sec)\r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	MATCH 相当于要找的列， 而&amp;nbsp; AGAINST 就是要找的内容。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	比起 like 有点不一样\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	而且 match ... against 还提供很多 操作， 对数据 进一步过滤，\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	一般可以作为 比较精确的搜索，\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	例如下面的这个例子： 搜索title和body中包含 MySQL ，但是不能有 YourSQL 的结果。\r\n&lt;/p&gt;\r\n&lt;table width=&quot;620&quot; align=&quot;center&quot; border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; style=&quot;color:#000000;font-family:simsun;font-size:14px;margin:0px auto !important;background:#FFBB77;&quot; class=&quot;ke-zeroborder&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;464&quot; height=&quot;27&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				&amp;nbsp;代码如下\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;109&quot; align=&quot;center&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				复制代码\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td height=&quot;auto&quot; colspan=&quot;2&quot; valign=&quot;top&quot; bgcolor=&quot;#FFFFFF&quot; class=&quot;copyclass&quot; id=&quot;copy1039&quot;&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					&amp;nbsp;SELECT * FROM articles WHERE MATCH (title,body)\r\n				&lt;/p&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					&amp;nbsp;&amp;nbsp;&amp;nbsp; AGAINST (\'+MySQL -YourSQL\' IN BOOLEAN MODE);\r\n				&lt;/p&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					------------------\r\n				&lt;/p&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					|&amp;nbsp; 5 | MySQL vs. YourSQL&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | In the following database comparison ... |\r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	你会发现 可以看到 这个结果被过滤掉了\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	fulltext 还提供了 更加多的逻辑搜索，也就是一些 模糊搜索 等等，要求更加高的&lt;br /&gt;\r\n匹配字符搜索， 大家可以上 mysql 官方网站查看。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	=============================================================\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	上面 建立全文搜索 是在 建立表的同时建立的， 如果你已经建好表了， 但是想加入&lt;br /&gt;\r\n这个功能的话， 可以使用下面语句\r\n&lt;/p&gt;\r\n&lt;table width=&quot;620&quot; align=&quot;center&quot; border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; style=&quot;color:#000000;font-family:simsun;font-size:14px;margin:0px auto !important;background:#FFBB77;&quot; class=&quot;ke-zeroborder&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;464&quot; height=&quot;27&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				&amp;nbsp;代码如下\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;109&quot; align=&quot;center&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				复制代码\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td height=&quot;auto&quot; colspan=&quot;2&quot; valign=&quot;top&quot; bgcolor=&quot;#FFFFFF&quot; class=&quot;copyclass&quot; id=&quot;copy7330&quot;&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					mysql&amp;gt; alter table articles add fulltext index(title,body);\r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	--------------------\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	为了演示，我先把刚才的删除掉\r\n&lt;/p&gt;\r\n&lt;table width=&quot;620&quot; align=&quot;center&quot; border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; style=&quot;color:#000000;font-family:simsun;font-size:14px;margin:0px auto !important;background:#FFBB77;&quot; class=&quot;ke-zeroborder&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;464&quot; height=&quot;27&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				&amp;nbsp;代码如下\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;109&quot; align=&quot;center&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				复制代码\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td height=&quot;auto&quot; colspan=&quot;2&quot; valign=&quot;top&quot; bgcolor=&quot;#FFFFFF&quot; class=&quot;copyclass&quot; id=&quot;copy7338&quot;&gt;\r\n				&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;&quot;&gt;\r\n					mysql&amp;gt; drop index title on articles;\r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	再查看一下， 已经被删除了。\r\n&lt;/p&gt;\r\n&lt;table width=&quot;620&quot; align=&quot;center&quot; border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; style=&quot;color:#000000;font-family:simsun;font-size:14px;margin:0px auto !important;background:#FFBB77;&quot; class=&quot;ke-zeroborder&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;464&quot; height=&quot;27&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				&amp;nbsp;代码如下\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;109&quot; align=&quot;center&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				复制代码\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td height=&quot;auto&quot; colspan=&quot;2&quot; valign=&quot;top&quot; bgcolor=&quot;#FFFFFF&quot; class=&quot;copyclass&quot; id=&quot;copy8209&quot;&gt;\r\n				mysql&amp;gt; show indexes from articles;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	再为表添加 fulltext 上去\r\n&lt;/p&gt;\r\n&lt;table width=&quot;620&quot; align=&quot;center&quot; border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; style=&quot;color:#000000;font-family:simsun;font-size:14px;margin:0px auto !important;background:#FFBB77;&quot; class=&quot;ke-zeroborder&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;464&quot; height=&quot;27&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				&amp;nbsp;代码如下\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;109&quot; align=&quot;center&quot; bgcolor=&quot;#FFE7CE&quot;&gt;\r\n				复制代码\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td height=&quot;auto&quot; colspan=&quot;2&quot; valign=&quot;top&quot; bgcolor=&quot;#FFFFFF&quot; class=&quot;copyclass&quot; id=&quot;copy8842&quot;&gt;\r\n				mysql&amp;gt; alter table articles add fulltext index(title,body);\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	看到了吧， 这样就通过修改现有的表来添加全文搜索功能， 希望这个教程可以帮你&lt;br /&gt;\r\n日后使用到这个搜索功能。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#373737;font-size:14px;font-family:&amp;quot;background-color:#F5F8FD;&quot;&gt;\r\n	来源：http://www.bkjia.com/Mysql/450588.html\r\n&lt;/p&gt;', '1', '0', '1481696568', '小兔', null, '0', '26');
INSERT INTO `article` VALUES ('36', 'php foreach 使用引用注意事项', 'php foreach 使用引用注意事项', '&lt;h2 id=&quot;-&quot; style=&quot;font-size:18px;color:#111111;font-family:Georgia, \'Microsoft Yahei\', \'Trebuchet MS\', \'Times New Roman\', Times, sans-serif;background-color:#FCFCFA;&quot;&gt;\r\n	问题案例\r\n&lt;/h2&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;php\r\n    $arr &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; array&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; var_dump&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$arr &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$v&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color:#999999;&quot;&gt;//do something here&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$arr &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; $v&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color:#999999;&quot;&gt;//do something here&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; var_dump&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;color:#111111;font-family:Georgia, \'Microsoft Yahei\', \'Trebuchet MS\', \'Times New Roman\', Times, sans-serif;font-size:15px;background-color:#FCFCFA;&quot;&gt;\r\n	输出为：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; array&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;\r\n&lt;h2 id=&quot;-&quot; style=&quot;font-size:18px;color:#111111;font-family:Georgia, \'Microsoft Yahei\', \'Trebuchet MS\', \'Times New Roman\', Times, sans-serif;background-color:#FCFCFA;&quot;&gt;\r\n	问题分析\r\n&lt;/h2&gt;\r\n&lt;blockquote style=&quot;font-size:15px;color:#111111;font-family:Georgia, \'Microsoft Yahei\', \'Trebuchet MS\', \'Times New Roman\', Times, sans-serif;background-color:whitesmoke;&quot;&gt;\r\n	&lt;p&gt;\r\n		foreach 中不使用引用就没事， 用 foreach $k =&amp;gt; $v 然后 $ar[$k] 来改变原始数组， 略微损失点效率。\r\n	&lt;/p&gt;\r\n&lt;/blockquote&gt;\r\n&lt;p style=&quot;color:#111111;font-family:Georgia, \'Microsoft Yahei\', \'Trebuchet MS\', \'Times New Roman\', Times, sans-serif;font-size:15px;background-color:#FCFCFA;&quot;&gt;\r\n	&lt;strong&gt;执行第一个使用引用的 foreach 时：&lt;/strong&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#111111;font-family:Georgia, \'Microsoft Yahei\', \'Trebuchet MS\', \'Times New Roman\', Times, sans-serif;font-size:15px;background-color:#FCFCFA;&quot;&gt;\r\n	一开始， $v 指向 $arr[0] 的存储空间，空间内存储着 4 ， foreach 结束时， $v 指向 $arr[2] 的存储空间，空间内存储着 6 。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#111111;font-family:Georgia, \'Microsoft Yahei\', \'Trebuchet MS\', \'Times New Roman\', Times, sans-serif;font-size:15px;background-color:#FCFCFA;&quot;&gt;\r\n	&lt;strong&gt;开始执行第二个 foreach 时：&lt;/strong&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#111111;font-family:Georgia, \'Microsoft Yahei\', \'Trebuchet MS\', \'Times New Roman\', Times, sans-serif;font-size:15px;background-color:#FCFCFA;&quot;&gt;\r\n	注意和第一个 foreach 不同， 第二个 foreach 没有使用引用，那么就是赋值方式， 即将 $arr 的值依次 赋值 给 $v 。 进行到第一个元素时，要将 $ar[0] 赋值给 $v 。&amp;nbsp;&lt;strong&gt;问题就在这里&lt;/strong&gt;，由于刚刚执行完第一个 foreach，&amp;nbsp;&lt;strong&gt;$v 不是一个新变量，而是已经存在的、指向 $arr[2] 的那个 引用&lt;/strong&gt;&amp;nbsp;， 如此一来，对 $v 进行赋值的时候，就将 $arr[0] = 4 写入了 $arr[2] 的实际存储空间， 相当于对 $arr[2] 进行赋值。 依此类推，第二个 foreach 执行的结果， 就是数组的最后一个元素变成了倒数第二个元素的值。\r\n&lt;/p&gt;\r\n&lt;blockquote style=&quot;font-size:15px;color:#111111;font-family:Georgia, \'Microsoft Yahei\', \'Trebuchet MS\', \'Times New Roman\', Times, sans-serif;background-color:whitesmoke;&quot;&gt;\r\n	&lt;p&gt;\r\n		PHP 的开发者也认为，这种情况属于语言特性造成的，不是 bug。要修复这个问题，一种方法是对 foreach 进行特殊处理， 另一种就是限制 foreach 中 $v 的作用域， 这两种方式都与目前 PHP 的语言特性不符，开发人员不愿改， 但还是在&amp;nbsp;&lt;a href=&quot;http://cn2.php.net/manual/en/control-structures.foreach.php&quot;&gt;官方文档&lt;/a&gt;&amp;nbsp;中用 Warning 进行了说明。\r\n	&lt;/p&gt;\r\n&lt;/blockquote&gt;\r\n&lt;h2 id=&quot;-&quot; style=&quot;font-size:18px;color:#111111;font-family:Georgia, \'Microsoft Yahei\', \'Trebuchet MS\', \'Times New Roman\', Times, sans-serif;background-color:#FCFCFA;&quot;&gt;\r\n	解决方案\r\n&lt;/h2&gt;\r\n&lt;blockquote style=&quot;font-size:15px;color:#111111;font-family:Georgia, \'Microsoft Yahei\', \'Trebuchet MS\', \'Times New Roman\', Times, sans-serif;background-color:whitesmoke;&quot;&gt;\r\n	&lt;p&gt;\r\n		简单的方法，就是在使用了引用的 foreach 之后， unset 掉 $v\r\n	&lt;/p&gt;\r\n&lt;/blockquote&gt;\r\n&lt;p style=&quot;color:#111111;font-family:Georgia, \'Microsoft Yahei\', \'Trebuchet MS\', \'Times New Roman\', Times, sans-serif;font-size:15px;background-color:#FCFCFA;&quot;&gt;\r\n	修改后的案例：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;php\r\n    $arr &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; array&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; var_dump&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$arr &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$v&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color:#999999;&quot;&gt;//do something here&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; unset&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$v&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$arr &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; $v&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color:#999999;&quot;&gt;//do something here&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; var_dump&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/pre&gt;\r\n&lt;p style=&quot;color:#111111;font-family:Georgia, \'Microsoft Yahei\', \'Trebuchet MS\', \'Times New Roman\', Times, sans-serif;font-size:15px;background-color:#FCFCFA;&quot;&gt;\r\n	输出：\r\n&lt;/p&gt;\r\n&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; array&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;\r\n\r\n\r\n\r\n来源：http://www.9958.pw/post/php_foreach', '1', '0', '1481802395', '小兔', null, '0', '34');
INSERT INTO `article` VALUES ('37', 'HTTP协议详解', 'HTTP协议详解', '&lt;div class=&quot;postTitle&quot; style=&quot;border:0px solid red;padding:10px 10px 10px 5px;font-size:14px;font-weight:bold;font-family:&amp;quot;&quot;&gt;\r\n	&lt;h1 style=&quot;font-size:14px;&quot;&gt;\r\n		&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html&quot;&gt;HTTP协议详解&lt;/a&gt;\r\n	&lt;/h1&gt;\r\n&lt;/div&gt;\r\n&lt;p&gt;\r\n	&lt;p&gt;\r\n		当今web程序的开发技术真是百家争鸣，ASP.NET, PHP, JSP，Perl, AJAX 等等。 无论Web技术在未来如何发展，理解Web程序之间通信的基本协议相当重要, 因为它让我们理解了Web应用程序的内部工作. 本文将对HTTP协议进行详细的实例讲解，内容较多，希望大家耐心看。也希望对大家的开发工作或者测试工作有所帮助。使用Fiddler工具非常方便地捕获HTTP Request和HTTP Response,&amp;nbsp; 关于Fiddler工具的用法，请看我另一篇博客[&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/06/2337728.html&quot; target=&quot;_blank&quot;&gt;Fiddler 教程&lt;/a&gt;]\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		阅读目录\r\n	&lt;/p&gt;\r\n	&lt;ol&gt;\r\n		&lt;li style=&quot;margin-left:10px;&quot;&gt;\r\n			&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#whathttp&quot;&gt;什么是HTTP协议&lt;/a&gt;\r\n		&lt;/li&gt;\r\n		&lt;li style=&quot;margin-left:10px;&quot;&gt;\r\n			&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#threeconcept&quot;&gt;Web服务器，浏览器,代理服务器&lt;/a&gt;\r\n		&lt;/li&gt;\r\n		&lt;li style=&quot;margin-left:10px;&quot;&gt;\r\n			&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#urlexplain&quot;&gt;URL详解&lt;/a&gt;\r\n		&lt;/li&gt;\r\n		&lt;li style=&quot;margin-left:10px;&quot;&gt;\r\n			&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#statelesshttp&quot;&gt;HTTP协议是无状态的&lt;/a&gt;\r\n		&lt;/li&gt;\r\n		&lt;li style=&quot;margin-left:10px;&quot;&gt;\r\n			&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#ManyRequest&quot;&gt;打开一个网页需要浏览器发送很多次Request&lt;/a&gt;\r\n		&lt;/li&gt;\r\n		&lt;li style=&quot;margin-left:10px;&quot;&gt;\r\n			&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#httpmeessagestructe&quot;&gt;HTTP消息的结构&lt;/a&gt;\r\n		&lt;/li&gt;\r\n		&lt;li style=&quot;margin-left:10px;&quot;&gt;\r\n			&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#getpost&quot;&gt;Get和Post方法的区别&lt;/a&gt;\r\n		&lt;/li&gt;\r\n		&lt;li style=&quot;margin-left:10px;&quot;&gt;\r\n			&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#statecode&quot;&gt;状态码&lt;/a&gt;\r\n		&lt;/li&gt;\r\n		&lt;li style=&quot;margin-left:10px;&quot;&gt;\r\n			&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#httprequestheader&quot;&gt;HTTP Request header&lt;/a&gt;\r\n		&lt;/li&gt;\r\n		&lt;li style=&quot;margin-left:10px;&quot;&gt;\r\n			&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#httpresponseheader&quot;&gt;HTTP Response header&lt;/a&gt;\r\n		&lt;/li&gt;\r\n		&lt;li style=&quot;margin-left:10px;&quot;&gt;\r\n			&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#statelessalive&quot;&gt;HTTP协议是无状态的和Connection: keep-alive的区别&lt;/a&gt;\r\n		&lt;/li&gt;\r\n	&lt;/ol&gt;\r\n	&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;\r\n		什么是HTTP协议&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;\r\n	&lt;/h1&gt;\r\n	&lt;p&gt;\r\n		协议是指计算机通信网络中两台计算机之间进行通信所必须共同遵守的规定或规则，超文本传输协议(HTTP)是一种通信协议，它允许将超文本标记语言(HTML)文档从Web服务器传送到客户端的浏览器\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		目前我们使用的是HTTP/1.1 版本\r\n	&lt;/p&gt;\r\n	&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;\r\n		Web服务器，浏览器,代理服务器&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;\r\n	&lt;/h1&gt;\r\n	&lt;p&gt;\r\n		当我们打开浏览器，在地址栏中输入URL，然后我们就看到了网页。 原理是怎样的呢？\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		实际上我们输入URL后，我们的浏览器给Web服务器发送了一个Request, Web服务器接到Request后进行处理，生成相应的Response，然后发送给浏览器， 浏览器解析Response中的HTML,这样我们就看到了网页，过程如下图所示\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012020910422542.png&quot; alt=&quot;&quot; width=&quot;586&quot; height=&quot;272&quot; /&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		我们的Request 有可能是经过了代理服务器，最后才到达Web服务器的。\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		过程如下图所示\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012020910491417.png&quot; alt=&quot;&quot; width=&quot;583&quot; height=&quot;256&quot; /&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		代理服务器就是网络信息的中转站，有什么功能呢？\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		1. 提高访问速度， 大多数的代理服务器都有缓存功能。\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		2. 突破限制， 也就是FQ了\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		3. 隐藏身份。\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;\r\n		URL详解&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;\r\n	&lt;/h1&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;URL(Uniform Resource Locator) 地址用于描述一个网络上的资源,&amp;nbsp; 基本格式如下\r\n	&lt;/p&gt;\r\n	&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:5px 0px;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n&lt;pre&gt;schema://host[:port#]/path/.../[?query-string][#anchor]&lt;/pre&gt;\r\n	&lt;/div&gt;\r\n	&lt;p&gt;\r\n		scheme&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 指定低层使用的协议(例如：http, https, ftp)\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		host&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; HTTP服务器的IP地址或者域名\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		port#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; HTTP服务器的默认端口是80，这种情况下端口号可以省略。如果使用了别的端口，必须指明，例如 http://www.cnblogs.com:8080/\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		path&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 访问资源的路径\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		query-string&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 发送给http服务器的数据\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		anchor-&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 锚\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		URL 的一个例子\r\n	&lt;/p&gt;\r\n	&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:5px 0px;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n		&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;\r\n			&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;http://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt;\r\n		&lt;/div&gt;\r\n&lt;pre&gt;http://www.mywebsite.com/sj/test/test.aspx?name=sviergn&amp;amp;x=true#stuff\r\n\r\nSchema:                 http\r\nhost:                   www.mywebsite.com\r\npath:                   /sj/test/test.aspx\r\nQuery String:           name=sviergn&amp;amp;x=true\r\nAnchor:                 stuff&lt;/pre&gt;\r\n		&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;\r\n			&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;http://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt;\r\n		&lt;/div&gt;\r\n	&lt;/div&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;\r\n		HTTP协议是无状态的&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;\r\n	&lt;/h1&gt;\r\n	&lt;p&gt;\r\n		http协议是无状态的，同一个客户端的这次请求和上次请求是没有对应关系，对http服务器来说，它并不知道这两个请求来自同一个客户端。 为了解决这个问题， Web程序引入了Cookie机制来维护状态.\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;\r\n		打开一个网页需要浏览器发送很多次Request&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;\r\n	&lt;/h1&gt;\r\n	&lt;p&gt;\r\n		1. 当你在浏览器输入URL http://www.cnblogs.com 的时候，浏览器发送一个Request去获取 http://www.cnblogs.com 的html.&amp;nbsp; 服务器把Response发送回给浏览器.\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		2. 浏览器分析Response中的 HTML，发现其中引用了很多其他文件，比如图片，CSS文件，JS文件。\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		3. 浏览器会自动再次发送Request去获取图片，CSS文件，或者JS文件。\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		4. 等所有的文件都下载成功后。 网页就被显示出来了。\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;\r\n		HTTP消息的结构&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;\r\n	&lt;/h1&gt;\r\n	&lt;p&gt;\r\n		先看Request 消息的结构,&amp;nbsp;&amp;nbsp; Request 消息分为3部分，第一部分叫Request line, 第二部分叫Request header, 第三部分是body. header和body之间有个空行， 结构如下图\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012020914293943.png&quot; alt=&quot;&quot; /&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		第一行中的Method表示请求方法,比如&quot;POST&quot;,&quot;GET&quot;,&amp;nbsp; Path-to-resoure表示请求的资源， Http/version-number 表示HTTP协议的版本号\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		当使用的是&quot;GET&quot; 方法的时候， body是为空的\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		比如我们打开博客园首页的request 如下\r\n	&lt;/p&gt;\r\n	&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:5px 0px;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n&lt;pre&gt;GET http://www.cnblogs.com/ HTTP/1.1\r\nHost: www.cnblogs.com&lt;/pre&gt;\r\n	&lt;/div&gt;\r\n	&lt;p&gt;\r\n		抽象的东西，难以理解，老感觉是虚的， 所谓眼见为实, 实际见到的东西，我们才能理解和记忆。 我们今天用Fiddler，实际的看看Request和Response.\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		下面我们打开Fiddler 捕捉一个博客园登录的Request 然后分析下它的结构, 在Inspectors tab下以Raw的方式可以看到完整的Request的消息， &amp;nbsp; 如下图\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012022009421183.png&quot; alt=&quot;&quot; /&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		我们再看Response消息的结构, 和Request消息的结构基本一样。 同样也分为三部分,第一部分叫Response line, 第二部分叫Response header，第三部分是body. header和body之间也有个空行,&amp;nbsp; 结构如下图\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021309365350.png&quot; alt=&quot;&quot; /&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		HTTP/version-number表示HTTP协议的版本号，&amp;nbsp; status-code 和message 请看下节[&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#statecode&quot; target=&quot;_blank&quot;&gt;状态代码&lt;/a&gt;]的详细解释.\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		我们用Fiddler 捕捉一个博客园首页的Response然后分析下它的结构, 在Inspectors tab下以Raw的方式可以看到完整的Response的消息， &amp;nbsp; 如下图\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012022009373182.png&quot; alt=&quot;&quot; /&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;\r\n		Get和Post方法的区别&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;\r\n	&lt;/h1&gt;\r\n	&lt;p&gt;\r\n		Http协议定义了很多与服务器交互的方法，最基本的有4种，分别是GET,POST,PUT,DELETE. 一个URL地址用于描述一个网络上的资源，而HTTP中的GET, POST, PUT, DELETE就对应着对这个资源的查，改，增，删4个操作。 我们最常见的就是GET和POST了。&lt;span style=&quot;color:#FF0000;&quot;&gt;GET一般用于获取/查询资源信息，而POST一般用于更新资源信息.&lt;/span&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		我们看看GET和POST的区别\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		1. GET提交的数据会放在URL之后，以?分割URL和传输数据，参数之间以&amp;amp;相连，如EditPosts.aspx?name=test1&amp;amp;id=123456.&amp;nbsp; POST方法是把提交的数据放在HTTP包的Body中.\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		2. GET提交的数据大小有限制（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制.\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		3. GET方式需要使用Request.QueryString来取得变量的值，而POST方式通过Request.Form来获取变量的值。\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		4. GET方式提交数据，会带来安全问题，比如一个登录页面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码.\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;\r\n		状态码&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;\r\n	&lt;/h1&gt;\r\n	&lt;p&gt;\r\n		Response 消息中的第一行叫做状态行，由HTTP协议版本号， 状态码， 状态消息 三部分组成。\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		状态码用来告诉HTTP客户端,HTTP服务器是否产生了预期的Response.\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		HTTP/1.1中定义了5类状态码， 状态码由三位数字组成，第一个数字定义了响应的类别\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		1XX&amp;nbsp; 提示信息 - 表示请求已被成功接收，继续处理\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		2XX&amp;nbsp; 成功 - 表示请求已被成功接收，理解，接受\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		3XX&amp;nbsp; 重定向 - 要完成请求必须进行更进一步的处理\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		4XX&amp;nbsp; 客户端错误 -&amp;nbsp; 请求有语法错误或请求无法实现\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		5XX&amp;nbsp; 服务器端错误 -&amp;nbsp;&amp;nbsp; 服务器未能实现合法的请求\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		看看一些常见的状态码\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		200 OK&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		最常见的就是成功响应状态码200了， 这表明该请求被成功地完成，所请求的资源发送回客户端\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		如下图， 打开博客园首页\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021114423456.png&quot; alt=&quot;&quot; /&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		302 Found\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		重定向，新的URL会在response 中的Location中返回，浏览器将会自动使用新的URL发出新的Request\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如在IE中输入， http://www.google.com. HTTP服务器会返回302， IE取到Response中Location header的新URL, 又重新发送了一个Request.\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021115280744.png&quot; alt=&quot;&quot; width=&quot;766&quot; height=&quot;527&quot; /&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		304 Not Modified\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		代表上次的文档已经被缓存了， 还可以继续使用，\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如打开博客园首页, 发现很多Response 的status code 都是304\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021115064471.png&quot; alt=&quot;&quot; /&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		提示：　如果你不想使用本地缓存可以用Ctrl+F5 强制刷新页面\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		400 Bad Request&amp;nbsp; 客户端请求与语法错误，不能被服务器所理解\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		403 Forbidden 服务器收到请求，但是拒绝提供服务\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		404 Not Found&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		请求资源不存在（输错了URL）\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		比如在IE中输入一个错误的URL， http://www.cnblogs.com/tesdf.aspx\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021114534541.png&quot; alt=&quot;&quot; /&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		500 Internal Server Error 服务器发生了不可预期的错误\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		503 Server Unavailable 服务器当前不能处理客户端的请求，一段时间后可能恢复正常\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;\r\n		HTTP Request header&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;\r\n	&lt;/h1&gt;\r\n	&lt;p&gt;\r\n		使用Fiddler 能很方便的查看Reques header, 点击Inspectors tab -&amp;gt;Request tab-&amp;gt; headers&amp;nbsp; 如下图所示.\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021116181545.png&quot; alt=&quot;&quot; /&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		header 有很多，比较难以记忆，我们也按照Fiddler那样把header 进行分类，这样比较清晰也容易记忆。\r\n	&lt;/p&gt;\r\n	&lt;h2 style=&quot;font-size:21px;&quot;&gt;\r\n		Cache 头域\r\n	&lt;/h2&gt;\r\n	&lt;p&gt;\r\n		If-Modified-Since\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用： 把浏览器端缓存页面的最后修改时间发送到服务器去，服务器会把这个时间与服务器上实际文件的最后修改时间进行对比。如果时间一致，那么返回304，客户端就直接使用本地缓存文件。如果时间不一致，就会返回200和新的文件内容。客户端接到之后，会丢弃旧文件，把新文件缓存起来，并显示在浏览器中.\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如：If-Modified-Since: Thu, 09 Feb 2012 09:07:57 GMT\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		实例如下图\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021322503738.png&quot; alt=&quot;&quot; /&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		If-None-Match\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用: If-None-Match和ETag一起工作，工作原理是在HTTP Response中添加ETag信息。 当用户再次请求该资源时，将在HTTP Request 中加入If-None-Match信息(ETag的值)。如果服务器验证资源的ETag没有改变（该资源没有更新），将返回一个304状态告诉客户端使用本地缓存文件。否则将返回200状态和新的资源和Etag.&amp;nbsp; 使用这样的机制将提高网站的性能\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如: If-None-Match: &quot;03f2b33c0bfcc1:0&quot;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		实例如下图\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021117041918.png&quot; alt=&quot;&quot; /&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Pragma\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用： 防止页面被缓存， 在HTTP/1.1版本中，它和Cache-Control:no-cache作用一模一样\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Pargma只有一个用法， 例如： Pragma: no-cache\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&lt;span style=&quot;color:#FF0000;&quot;&gt;注意: 在HTTP/1.0版本中，只实现了Pragema:no-cache, 没有实现Cache-Control&lt;/span&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Cache-Control\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用: 这个是非常重要的规则。 这个用来指定Response-Request遵循的缓存机制。各个指令含义如下\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Cache-Control:Public&amp;nbsp;&amp;nbsp; 可以被任何缓存所缓存（）\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Cache-Control:Private&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 内容只缓存到私有缓存中\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Cache-Control:no-cache&amp;nbsp; 所有内容都不会被缓存\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		还有其他的一些用法， 我没搞懂其中的意思， 请大家参考其他的资料\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;h2 style=&quot;font-size:21px;&quot;&gt;\r\n		Client 头域\r\n	&lt;/h2&gt;\r\n	&lt;p&gt;\r\n		Accept\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用：&amp;nbsp;浏览器端可以接受的媒体类型,\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如：&amp;nbsp; Accept: text/html &amp;nbsp;代表浏览器可以接受服务器回发的类型为 text/html &amp;nbsp;也就是我们常说的html文档,\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		如果服务器无法返回text/html类型的数据,服务器应该返回一个406错误(non acceptable)\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		通配符 * 代表任意类型\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如 &amp;nbsp;Accept: */* &amp;nbsp;代表浏览器可以处理所有类型,(一般浏览器发给服务器都是发这个)\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Accept-Encoding：\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用： 浏览器申明自己接收的编码方法，通常指定压缩方法，是否支持压缩，支持什么压缩方法（gzip，deflate），（注意：这不是只字符编码）;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如： Accept-Encoding: gzip, deflate\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Accept-Language\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用： 浏览器申明自己接收的语言。&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		语言跟字符集的区别：中文是语言，中文有多种字符集，比如big5，gb2312，gbk等等；\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如： Accept-Language: en-us\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		User-Agent\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用：告诉HTTP服务器， 客户端使用的操作系统和浏览器的名称和版本.\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		我们上网登陆论坛的时候，往往会看到一些欢迎信息，其中列出了你的操作系统的名称和版本，你所使用的浏览器的名称和版本，这往往让很多人感到很神奇，实际上，服务器应用程序就是从User-Agent这个请求报头域中获取到这些信息User-Agent请求报头域允许客户端将它的操作系统、浏览器和其它属性告诉服务器。\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如：&amp;nbsp;&lt;span style=&quot;font-size:12px;&quot;&gt;User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; CIBA; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; InfoPath.2; .NET4.0E)&lt;/span&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Accept-Charset\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用：浏览器申明自己接收的字符集，这就是本文前面介绍的各种字符集和字符编码，如gb2312，utf-8（通常我们说Charset包括了相应的字符编码方案）；\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如：\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;h2 style=&quot;font-size:21px;&quot;&gt;\r\n		Cookie/Login 头域\r\n	&lt;/h2&gt;\r\n	&lt;p&gt;\r\n		Cookie:\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用： 最重要的header, 将cookie的值发送给HTTP 服务器\r\n	&lt;/p&gt;\r\n	&lt;h2 style=&quot;font-size:21px;&quot;&gt;\r\n		Entity头域\r\n	&lt;/h2&gt;\r\n	&lt;p&gt;\r\n		Content-Length\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用：发送给HTTP服务器数据的长度。\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如： Content-Length: 38\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Content-Type\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用：\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如：Content-Type: application/x-www-form-urlencoded\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;h2 style=&quot;font-size:21px;&quot;&gt;\r\n		Miscellaneous 头域\r\n	&lt;/h2&gt;\r\n	&lt;p&gt;\r\n		Referer:\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用： 提供了Request的上下文信息的服务器，告诉服务器我是从哪个链接过来的，比如从我主页上链接到一个朋友那里，他的服务器就能够从HTTP Referer中统计出每天有多少用户点击我主页上的链接访问他的网站。\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如: Referer:http://translate.google.cn/?hl=zh-cn&amp;amp;tab=wT\r\n	&lt;/p&gt;\r\n	&lt;h2 style=&quot;font-size:21px;&quot;&gt;\r\n		Transport 头域\r\n	&lt;/h2&gt;\r\n	&lt;p&gt;\r\n		Connection\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如：　Connection: keep-alive&amp;nbsp;&amp;nbsp; 当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的TCP连接不会关闭，如果客户端再次访问这个服务器上的网页，会继续使用这一条已经建立的连接\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如：&amp;nbsp; Connection: close&amp;nbsp; 代表一个Request完成后，客户端和服务器之间用于传输HTTP数据的TCP连接会关闭， 当客户端再次发送Request，需要重新建立TCP连接。\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Host（发送请求时，该报头域是必需的）\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用: 请求报头域主要用于指定被请求资源的Internet主机和端口号，它通常从HTTP URL中提取出来的\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如: 我们在浏览器中输入：http://www.guet.edu.cn/index.html\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		浏览器发送的请求消息中，就会包含Host请求报头域，如下：\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Host：http://www.guet.edu.cn\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		此处使用缺省端口号80，若指定了端口号，则变成：Host：指定端口号\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;\r\n		&lt;span style=&quot;font-family:宋体;&quot;&gt;HTTP Response header&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;&lt;/span&gt;\r\n	&lt;/h1&gt;\r\n	&lt;p&gt;\r\n		同样使用Fiddler 查看Response header, 点击Inspectors tab -&amp;gt;Response tab-&amp;gt; headers&amp;nbsp; 如下图所示\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021116212815.png&quot; alt=&quot;&quot; /&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;我们也按照Fiddler那样把header 进行分类，这样比较清晰也容易记忆。\r\n	&lt;/p&gt;\r\n	&lt;h2 style=&quot;font-size:21px;&quot;&gt;\r\n		Cache头域\r\n	&lt;/h2&gt;\r\n	&lt;p&gt;\r\n		Date\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用:&amp;nbsp; 生成消息的具体时间和日期\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如：　Date: Sat, 11 Feb 2012 11:35:14 GMT&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Expires\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用: 浏览器会在指定过期时间内使用本地缓存\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如: Expires: Tue, 08 Feb 2022 11:35:14 GMT\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Vary\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用：\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如: Vary: Accept-Encoding\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;h2 style=&quot;font-size:21px;&quot;&gt;\r\n		Cookie/Login 头域\r\n	&lt;/h2&gt;\r\n	&lt;p&gt;\r\n		P3P\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用: 用于跨域设置Cookie, 这样可以解决iframe跨域访问cookie的问题\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如: P3P: CP=CURa ADMa DEVa PSAo PSDo OUR BUS UNI PUR INT DEM STA PRE COM NAV OTC NOI DSP COR\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Set-Cookie\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用： 非常重要的header, 用于把cookie 发送到客户端浏览器， 每一个写入cookie都会生成一个Set-Cookie.\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如: Set-Cookie: sc=4c31523a; path=/; domain=.acookie.taobao.com\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021119563476.png&quot; alt=&quot;&quot; /&gt;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;h2 style=&quot;font-size:21px;&quot;&gt;\r\n		Entity头域\r\n	&lt;/h2&gt;\r\n	&lt;p&gt;\r\n		ETag\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用:&amp;nbsp; 和If-None-Match 配合使用。 （实例请看上节中If-None-Match的实例）\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如: ETag: &quot;03f2b33c0bfcc1:0&quot;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Last-Modified:\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用： 用于指示资源的最后修改日期和时间。（实例请看上节的If-Modified-Since的实例）\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如: Last-Modified: Wed, 21 Dec 2011 09:09:10 GMT\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Content-Type\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用：WEB服务器告诉浏览器自己响应的对象的类型和字符集,\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如:\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Content-Type: text/html; charset=utf-8\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Content-Type:text/html;charset=GB2312\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Content-Type: image/jpeg\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Content-Length\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		指明实体正文的长度，以字节方式存储的十进制数字来表示。在数据下行的过程中，Content-Length的方式要预先在服务器中缓存所有数据，然后所有数据再一股脑儿地发给客户端。\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如: Content-Length: 19847\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Content-Encoding\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		WEB服务器表明自己使用了什么压缩方法（gzip，deflate）压缩响应中的对象。\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如：Content-Encoding：gzip\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		Content-Language\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用： WEB服务器告诉浏览器自己响应的对象的语言者\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如： Content-Language:da\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;h2 style=&quot;font-size:21px;&quot;&gt;\r\n		Miscellaneous 头域\r\n	&lt;/h2&gt;\r\n	&lt;p&gt;\r\n		Server:\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用：指明HTTP服务器的软件信息\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如:Server: Microsoft-IIS/7.5\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		X-AspNet-Version:\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用：如果网站是用ASP.NET开发的，这个header用来表示ASP.NET的版本\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如: X-AspNet-Version: 4.0.30319\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		X-Powered-By:\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用：表示网站是用什么技术开发的\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如： X-Powered-By: ASP.NET\r\n	&lt;/p&gt;\r\n	&lt;h2 style=&quot;font-size:21px;&quot;&gt;\r\n		Transport头域\r\n	&lt;/h2&gt;\r\n	&lt;p&gt;\r\n		Connection\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如：　Connection: keep-alive&amp;nbsp;&amp;nbsp; 当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的TCP连接不会关闭，如果客户端再次访问这个服务器上的网页，会继续使用这一条已经建立的连接\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		例如：&amp;nbsp; Connection: close&amp;nbsp; 代表一个Request完成后，客户端和服务器之间用于传输HTTP数据的TCP连接会关闭， 当客户端再次发送Request，需要重新建立TCP连接。\r\n	&lt;/p&gt;\r\n	&lt;h2 style=&quot;font-size:21px;&quot;&gt;\r\n		Location头域\r\n	&lt;/h2&gt;\r\n	&lt;p&gt;\r\n		Location\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		作用： 用于重定向一个新的位置, 包含新的URL地址\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;实例请看304状态实例\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;\r\n	&lt;/p&gt;\r\n	&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;\r\n		HTTP协议是无状态的和Connection: keep-alive的区别&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;\r\n	&lt;/h1&gt;\r\n	&lt;p&gt;\r\n		无状态是指协议对于事务处理没有记忆能力，服务器不知道客户端是什么状态。从另一方面讲，打开一个服务器上的网页和你之前打开这个服务器上的网页之间没有任何联系\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		HTTP是一个&lt;span style=&quot;color:#FF0000;&quot;&gt;无状态&lt;/span&gt;的&lt;span style=&quot;color:#FF0000;&quot;&gt;面向连接&lt;/span&gt;的协议，无状态不代表HTTP不能保持TCP连接，更不能代表HTTP使用的是UDP协议（无连接）\r\n	&lt;/p&gt;\r\n	&lt;div&gt;\r\n		从HTTP/1.1起，默认都开启了Keep-Alive，保持连接特性，简单地说，当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的TCP连接不会关闭，如果客户端再次访问这个服务器上的网页，会继续使用这一条已经建立的连接\r\n	&lt;/div&gt;\r\n	&lt;p&gt;\r\n		&amp;nbsp;Keep-Alive不会永久保持连接，它有一个保持时间，可以在不同的服务器软件（如Apache）中设定这个时间\r\n	&lt;/p&gt;\r\n	&lt;p&gt;\r\n		来源：http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#threeconcept\r\n	&lt;/p&gt;\r\n&lt;/p&gt;', '1', '0', '1482141169', '小兔', null, '0', '34');
INSERT INTO `article` VALUES ('38', 'TCP和Http的区别', 'TCP和Http的区别', '&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	1、TCP连接\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	手机能够使用联网功能是因为手机底层实现了TCP/IP协议，可以使手机终端通过无线网络建立TCP连接。TCP协议可以对上层网络提供接口，使上层网络数据的传输建立在“无差别”的网络之上。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	建立起一个TCP连接需要经过“三次握手”：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	第一次握手：客户端发送syn包(syn=j)到服务器，并进入SYN_SEND状态，等待服务器确认；\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	第二次握手：服务器收到syn包，必须确认客户的SYN（ack=j+1），同时自己也发送一个SYN包（syn=k），即SYN+ACK包，此时服务器进入SYN_RECV状态；\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	第三次握手：客户端收到服务器的SYN＋ACK包，向服务器发送确认包ACK(ack=k+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	握 手过程中传送的包里不包含数据，三次握手完毕后，客户端与服务器才正式开始传送数据。理想状态下，TCP连接一旦建立，在通信双方中的任何一方主动关闭连 接之前，TCP&amp;nbsp;连接都将被一直保持下去。断开连接时服务器和客户端均可以主动发起断开TCP连接的请求，断开过程需要经过“四次握手”（过程就不细写 了，就是服务器和客户端交互，最终确定断开）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n2、HTTP连接\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	HTTP协议即超文本传送协议(Hypertext&amp;nbsp;Transfer&amp;nbsp;Protocol&amp;nbsp;)，是Web联网的基础，也是手机联网常用的协议之一，HTTP协议是建立在TCP协议之上的一种应用。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	HTTP连接最显著的特点是客户端发送的每次请求都需要服务器回送响应，在请求结束后，会主动释放连接。从建立连接到关闭连接的过程称为“一次连接”。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	1）在HTTP&amp;nbsp;1.0中，客户端的每次请求都要求建立一次单独的连接，在处理完本次请求后，就自动释放连接。&lt;br /&gt;\r\n&lt;br /&gt;\r\n2）在HTTP&amp;nbsp;1.1中则可以在一次连接中处理多个请求，并且多个请求可以重叠进行，不需要等待一个请求结束后再发送下一个请求。&lt;br /&gt;\r\n&lt;br /&gt;\r\n由 于HTTP在每次请求结束后都会主动释放连接，因此HTTP连接是一种“短连接”，要保持客户端程序的在线状态，需要不断地向服务器发起连接请求。通常的 做法是即时不需要获得任何数据，客户端也保持每隔一段固定的时间向服务器发送一次“保持连接”的请求，服务器在收到该请求后对客户端进行回复，表明知道客 户端“在线”。若服务器长时间无法收到客户端的请求，则认为客户端“下线”，若客户端长时间无法收到服务器的回复，则认为网络已经断开。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n3、SOCKET原理\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	3.1套接字（socket）概念\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	套接字（socket）是通信的基石，是支持TCP/IP协议的网络通信的基本操作单元。它是网络通信过程中端点的抽象表示，包含进行网络通信必须的五种信息：连接使用的协议，本地主机的IP地址，本地进程的协议端口，远地主机的IP地址，远地进程的协议端口。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	应 用层通过传输层进行数据通信时，TCP会遇到同时为多个应用程序进程提供并发服务的问题。多个TCP连接或多个应用程序进程可能需要通过同一个&amp;nbsp;TCP协 议端口传输数据。为了区别不同的应用程序进程和连接，许多计算机操作系统为应用程序与TCP／IP协议交互提供了套接字(Socket)接口。应用层可以 和传输层通过Socket接口，区分来自不同应用程序进程或网络连接的通信，实现数据传输的并发服务。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n3.2&amp;nbsp;建立socket连接\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span style=&quot;color:#333333;font-family:Tahoma, Arial, sans-serif;font-size:16px;line-height:21px;background-color:#FFFFFF;&quot;&gt;建立Socket连接至少需要一对套接字，其中一个运行于客户端，称为ClientSocket&amp;nbsp;，另一个运行于服务器端，称为ServerSocket&amp;nbsp;。&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;font-family:Tahoma, Arial, sans-serif;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	套接字之间的连接过程分为三个步骤：服务器监听，客户端请求，连接确认。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	服务器监听：服务器端套接字并不定位具体的客户端套接字，而是处于等待连接的状态，实时监控网络状态，等待客户端的连接请求。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	客户端请求：指客户端的套接字提出连接请求，要连接的目标是服务器端的套接字。为此，客户端的套接字必须首先描述它要连接的服务器的套接字，指出服务器端套接字的地址和端口号，然后就向服务器端套接字提出连接请求。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	连 接确认：当服务器端套接字监听到或者说接收到客户端套接字的连接请求时，就响应客户端套接字的请求，建立一个新的线程，把服务器端套接字的描述发给客户 端，一旦客户端确认了此描述，双方就正式建立连接。而服务器端套接字继续处于监听状态，继续接收其他客户端套接字的连接请求。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n4、SOCKET连接与TCP连接\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	创建Socket连接时，可以指定使用的传输层协议，Socket可以支持不同的传输层协议（TCP或UDP），当使用TCP协议进行连接时，该Socket连接就是一个TCP连接。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n5、Socket连接与HTTP连接\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	由 于通常情况下Socket连接就是TCP连接，因此Socket连接一旦建立，通信双方即可开始相互发送数据内容，直到双方连接断开。但在实际网络应用 中，客户端到服务器之间的通信往往需要穿越多个中间节点，例如路由器、网关、防火墙等，大部分防火墙默认会关闭长时间处于非活跃状态的连接而导 致&amp;nbsp;Socket&amp;nbsp;连接断连，因此需要通过轮询告诉网络，该连接处于活跃状态。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	而HTTP连接使用的是“请求—响应”的方式，不仅在请求时需要先建立连接，而且需要客户端向服务器发出请求后，服务器端才能回复数据。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	很 多情况下，需要服务器端主动向客户端推送数据，保持客户端与服务器数据的实时与同步。此时若双方建立的是Socket连接，服务器就可以直接将数据传送给 客户端；若双方建立的是HTTP连接，则服务器需要等到客户端发送一次请求后才能将数据传回给客户端，因此，客户端定时向服务器端发送连接请求，不仅可以 保持在线，同时也是在“询问”服务器是否有新的数据，如果有就将数据传给客户端。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	二：首先，纠正一下我以 前一直误解的概念，我一直以为Http和Tcp是两种不同的，但是地位对等的协议，虽然知道TCP是传输层，而http是应用层今天学习了下，知道了 http是要基于TCP连接基础上的，简单的说，TCP就是单纯建立连接，不涉及任何我们需要请求的实际数据，简单的传输。http是用来收发数据，即实 际应用上来的。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	第一：从传输层，先说下TCP连接，我们要和服务端连接TCP连接，需要通过三次连接，包括：请求，确认，建立连接。即传说中的“三次握手协议”。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	第一次：C发送一个请求连接的位码SYN和一个随机产生的序列号给Seq，然后S收到了这些数据。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	第二次:S收到了这个请求连接的位码，啊呀，有人向我发出请求了么，那我要不要接受他的请求，得实现确认一下，于是，发送了一个确认码&amp;nbsp;ACN（seq+1），和SYN，Seq给C，然后C收到了，这个是第二次连接。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	第三次：C收到了确认的码和之前发送的SYN一比较，偶哟，对上了么，于是他又发送了一个ACN（SEQ+1）给S，S收到以后就确定建立连接，至此，TCP连接建立完成。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	简单就是：请求，确认，连接。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	第二：从实际上的数据应用来说httP:\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	在前面客户端和应用服务器建立TCP连接之后，就需要用http协议来传送数据了，HTTP协议简单来说，还是请求，确认，连接。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	总体就是C发送一个HTTP请求给S，S收到了这个http请求，然后返回给Chttp响应，然后C的中间件或者说浏览器把这些数据渲染成为了网页，展示在用户面前。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	第一：发送一个http请求给S，这个请求包括请求头和请求内容：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	request&amp;nbsp;header：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	包括了，1.请求的方法是POST/GET,请求的URL，http协议版本2.请求的数据，和编码方式3是否有cookie和cooies，是否缓存等。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	post和get请求方式的区别是，get把请求内容放在URL后面，但是URL长度有限制。而post是以表单的形势，适合要输入密码之类的，因为不在URL中显示，所以比较安全。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	request&amp;nbsp;body：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	即请求的内容.\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	第二：S收到了http请求，然后根据请求头，返回http响应。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	response&amp;nbsp;header:包括了1.cookies或者sessions2.状态吗3.内容大小等\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	response&amp;nbsp;body：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	即响应的内容，包括，JS什么的。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	第三，C收到了以后，就由浏览器完成一系列的渲染，包括执行JS脚本等。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	这就是我所理解的webTCP,HTTP基础知识，待续。。。。。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	三、TCP是底层通讯协议，定义的是数据传输和连接方式的规范&lt;br /&gt;\r\nHTTP是应用层协议，定义的是传输数据的内容的规范&lt;br /&gt;\r\n&lt;br /&gt;\r\nHTTP协议中的数据是利用TCP协议传输的，所以支持HTTP也就一定支持TCP\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	HTTP支持的是www服务&amp;nbsp;&lt;br /&gt;\r\n而TCP/IP是协议&amp;nbsp;&lt;br /&gt;\r\n它是Internet国际互联网络的基础。TCP/IP是网络中使用的基本的通信协议。&amp;nbsp;&lt;br /&gt;\r\n&lt;br /&gt;\r\nTCP/IP实际上是一组协议，它包括上百个各种功能的协议，如：远程登录、文件传输和电子邮件等，而TCP协议和IP协议是保证数据完整传输的两个基本的重要协议。通常说TCP/IP是Internet协议族，而不单单是TCP和IP。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;\r\n	来源：http://www.myhack58.com/Article/60/63/2014/50072.htm\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;', '1', '0', '1482313009', '小兔', null, '0', '27');
INSERT INTO `article` VALUES ('39', 'Composer 的结构、Composer.json详解', 'Composer 的结构,Composer.json详解', '&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;a href=&quot;http://phpernotes.com/wp-content/uploads/2013/07/composer-cartoon.gif&quot;&gt;&lt;img src=&quot;http://phpernotes.com/wp-content/uploads/2013/07/composer-cartoon.gif&quot; alt=&quot;composer-cartoon&quot; /&gt;&lt;/a&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;a href=&quot;http://getcomposer.org/doc/04-schema.md&quot;&gt;这片文章&lt;/a&gt;是 composer.json 中各个字段的说明书。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	一、Root Package（根目录包）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	根目录包就是在你的项目的根目录由 composer.json 定义的包。主要就是由 composer.json 来定义你的项目的依赖。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	某些字段只能在根目录包的中使用，比如 config 字段，只有根目录包能定义自己的配置。依赖包中的 config 字段是被忽略的。所以 config 字段是 root-only 的。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	如果你克隆了其中一个依赖包并在上面工作，那么这个包就是根目录包。composer.json 还是一样的，但上下文不同。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	（注：一个包是不是根目录包，取决于上下文。）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	二、composer.json 中的各个属性（字段）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	1、name\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	包的名字。由供应方（vendor）名和项目名组成，用 / 分隔。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	在发布包的时候需要填。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	2、description\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	对包的一个简短描述，通常是一行的长度。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	在发布包的时候需要填。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	3、version\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	包的版本。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	格式必须是 X.Y.Z，选择性后缀：-dev、-alphaN、-betaN、-RCN。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	4、type\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	包的类型，默认为 library。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	包类型用于定制安装逻辑。如果你的包的安装需要一些特殊的逻辑，你可以定义一个定制的类型。它可以是一个 symfony-bundle 的类型，或者 wordpress-plugin，或者 typo3-module。这些类型将被特定的项目所用，它们将提供安装器来安装这些类型的包。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	Composer 支持 3 种类型：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	library：默认值。它将复制文件到 vendor 目录。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	project：它表示这是个项目，而不是库。比如像 Symfony 标准版这种应用。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	metapackage：一个含有依赖的空包，能触发安装，但不包含文件，不会向文件系统写任何东西。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	composer-install：为其他的定制类型的包提供安装器的包。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	5、keywords\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	一个与包相关的关键词数组。用于包的搜索和过滤。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	可选。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	6、homepage\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	项目的网站 URL。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	可选。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	7、time\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	版本发布时间。必须是 YYYY-MM-DD 或 YYYY-MM-DD HH:MM:SS 格式。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	可选。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	8、license\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	包的许可证。可以是字符串或字符串数组。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	可选，但强烈建议加上。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	9、authors\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	包的作者。是个对象数组。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	每个 author 对象有这些属性：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	name：作者名字&amp;nbsp;&lt;br /&gt;\r\nemail：作者邮箱&amp;nbsp;&lt;br /&gt;\r\nhomepage：作者网站 URL&amp;nbsp;&lt;br /&gt;\r\nrole：作者在项目中的角色（如：developer 或 translator）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	10、support\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	各种关于该项目如何获取支持的信息。包含这些属性：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	email：获取支持的邮箱&amp;nbsp;&lt;br /&gt;\r\nissues：问题跟踪的 URL&amp;nbsp;&lt;br /&gt;\r\nforum：论坛的 URL&amp;nbsp;&lt;br /&gt;\r\nwiki：Wiki 的 URL&amp;nbsp;&lt;br /&gt;\r\nirc：IRC 的频道&amp;nbsp;&lt;br /&gt;\r\nsource：查看或下载源码的 URL\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	可选。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	11、Package links\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	依赖包的映射表，由包名映射版本约束。如：\r\n&lt;/p&gt;\r\n&lt;pre&gt;{\r\n    &quot;require&quot;: {\r\n        &quot;monolog/monolog&quot;: &quot;1.0.*&quot;\r\n    }\r\n}&lt;/pre&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	（1）require\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	列出包所依赖的包。除非这些依赖已经存在，否则这个包不会被安装。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	（2）require-dev（root-only）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	列出开发这个包（或跑测试等等）所依赖的包。在使用 install 命令时，只有带上 “–dev” 参数才能安装 dev 包。在使用 update 命令时，带上 “–no-dev” 则不更新。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	（3）conflict\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	列出包会和哪些包发生冲突。它们将不被允许和你的包一起安装。如果约束了版本，则只会针对特定的版本。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	（4）replace\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	列出哪些包要被这个包替代。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	（5）provide\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	这个包所推荐的包列表。这个对公共接口最有用，一个包可以依赖一个虚拟的 logger 包，而实现 logger 接口的库可以放到 provide 字段中。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	12、suggest\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	建议一些能让这个包工作的更好或得到增强的包列表。这些信息只在包安装完成时给出，暗示用户可以添加更多包，虽然不是必须要安装的。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	格式是，包名映射文字说明，如：\r\n&lt;/p&gt;\r\n&lt;pre&gt;{\r\n    &quot;suggest&quot;: {\r\n        &quot;monolog/monolog&quot;: &quot;Allows more advanced logging of the application flow&quot;\r\n    }\r\n}&lt;/pre&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	13、autoload\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	提供给 PHP autoloader 的自动加载映射。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	目前支持的有：PSR-0 自动加载规范，classmap 生成器，还有 files。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	PSR-0 是比较推荐的，因为它的优秀的扩展性（在添加新的类的适合，不需要重新生成自动加载器）。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	（1）PSR-0\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	在 psr-0 键名下，定义一个命名空间到路径的映射表，相对于包的根目录。注意，这也同样支持 PEAR-style 的没有命名空间的风格。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	请注意命名空间的声明得以 \\ 结尾，确保自动加载器正确响应。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	PSR-0 的引用可以在安装或更新时生成的文件中查看：&amp;nbsp;&lt;br /&gt;\r\nvendor/composer/autoload_namespaces.php\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	例子：\r\n&lt;/p&gt;\r\n&lt;pre&gt;{\r\n    &quot;autoload&quot;: {\r\n        &quot;psr-0&quot;: {\r\n            &quot;Monolog\\&quot;: &quot;src/&quot;,\r\n            &quot;Vendor\\Namespace\\&quot;: &quot;src/&quot;,\r\n            &quot;Vendor_Namespace_&quot;: &quot;src/&quot;\r\n        }\r\n    }\r\n}&lt;/pre&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	如果你需要在多个目录里查找同一个前缀的命名空间，你可以用数组，如：\r\n&lt;/p&gt;\r\n&lt;pre&gt;{\r\n    &quot;autoload&quot;: {\r\n        &quot;psr-0&quot;: { &quot;Monolog\\&quot;: [&quot;src/&quot;, &quot;lib/&quot;] }\r\n    }\r\n}&lt;/pre&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	PSR-0 风格并不局限于加载命名空间的声明的东西，也可以用于类这个层级。当库中只有一个在全局命名空间中的类时，这种方式就能用上。比如你有个 PHP 源文件放在项目的根目录，你可以这样声明：\r\n&lt;/p&gt;\r\n&lt;pre&gt;{\r\n    &quot;autoload&quot;: {\r\n        &quot;psr-0&quot;: { &quot;UniqueGlobalClass&quot;: &quot;&quot; }\r\n    }\r\n}&lt;/pre&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	如果你有个目录下全是用命名空间组织的，你可以用空前缀：\r\n&lt;/p&gt;\r\n&lt;pre&gt;{\r\n    &quot;autoload&quot;: {\r\n        &quot;psr-0&quot;: { &quot;&quot;: &quot;src/&quot; }\r\n    }\r\n}&lt;/pre&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	（2）Classmap\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	classmap 的引用可以在安装或更新时生成的文件中查看：&amp;nbsp;&lt;br /&gt;\r\nvendor/composer/autoload_classmap.php\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	类映射表是通过扫描指定的目录或文件下的所有的 .php 和 .inc 文件生成的。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	你可以给任何不支持 PSR-0 的库用 classmap 生成器实现自动加载。配置上只要指定类所在的目录或文件即可：\r\n&lt;/p&gt;\r\n&lt;pre&gt;{\r\n    &quot;autoload&quot;: {\r\n        &quot;classmap&quot;: [&quot;src/&quot;, &quot;lib/&quot;, &quot;Something.php&quot;]\r\n    }\r\n}&lt;/pre&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	（3）files\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	如果你确定需要在任何请求中都加载某些文件，你可以使用 files 自动加载机制。对于那些包中有些 PHP 函数但不能自动加载时特别有用。例如：\r\n&lt;/p&gt;\r\n&lt;pre&gt;{\r\n    &quot;autoload&quot;: {\r\n        &quot;files&quot;: [&quot;src/MyLibrary/functions.php&quot;]\r\n    }\r\n}&lt;/pre&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	14、include-path\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	（将被弃用，它的功能由 autoload 代替。其实就是设置 include_path，可选）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	15、target-dir\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	指定安装目标路径。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	如果包的根目录是在命名空间下，自动加载就不正确了，所以才有 target-dir 来解决这个问题。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	Symfony 就是个例子。它由很多组件包组成。Yaml 组件是在\r\n&lt;/p&gt;\r\n&lt;pre&gt;SymfonyComponentYaml&lt;/pre&gt;\r\n&lt;span style=&quot;color:#333333;font-family:arial;font-size:15px;line-height:27px;background-color:#FFFFFF;&quot;&gt;&amp;nbsp;&amp;nbsp;命名空间下的，它的根目录是 Yaml 目录。要让自动加载正常工作，我们要确保它不是安装在&lt;/span&gt; \r\n&lt;pre&gt;vendor/symfony/yaml&lt;/pre&gt;\r\n&lt;span style=&quot;color:#333333;font-family:arial;font-size:15px;line-height:27px;background-color:#FFFFFF;&quot;&gt;&amp;nbsp;，而是在&lt;/span&gt; \r\n&lt;pre&gt;vendor/symfony/yaml/Symfony/Component/Yaml&lt;/pre&gt;\r\n&lt;span style=&quot;color:#333333;font-family:arial;font-size:15px;line-height:27px;background-color:#FFFFFF;&quot;&gt;&amp;nbsp;，这样自动加载器才能从 vendor/symfony/yaml 加载它。&lt;/span&gt; \r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	所以要定义 target-dir 如下：\r\n&lt;/p&gt;\r\n&lt;pre&gt;{\r\n    &quot;autoload&quot;: {\r\n        &quot;psr-0&quot;: { &quot;Symfony\\Component\\Yaml\\&quot;: &quot;&quot; }\r\n    },\r\n    &quot;target-dir&quot;: &quot;Symfony/Component/Yaml&quot;\r\n}&lt;/pre&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	16、minimum-stability（root-only）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	定义根据稳定性如何过滤包。默认是 stable，如果你信赖一个 dev 包，你需要指明。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	17、prefer-stable（root-only）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	如果开启，Composer 会在稳定包和不稳定包中选择前者。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	18、repositories（root-only）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	定制包的仓库地址。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	默认的，Composer 只使用 Packagist 仓库。通过指定仓库地址，你可以从任何地方获取包。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	仓库不能递归。你只能将它们添加到主的 composer.json 中。所依赖包中 composer.json 文件中的仓库定义是被忽略的。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	支持的仓库的类型有：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	（1）composer\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	composer 仓库通过网络提供 packages.json 文件，它包含一个 composer.json 对象的列表，还有额外的 dist 或 source 信息。packages.json 文件通过 PHP 流加载。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	（2）vcs\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	版本控制系统仓库，如：git、svn、hg。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	（3）pear\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	通过它，你可以导入任何 pear 仓库到你的项目中。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	（4）package\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	如果你依赖一个不支持 composer 的项目，你可以定义一个 package 类型的仓库，然后将 composer.json 对象直接写入。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	完整的例子：\r\n&lt;/p&gt;\r\n&lt;pre&gt;{\r\n    &quot;repositories&quot;: [\r\n        {\r\n            &quot;type&quot;: &quot;composer&quot;,\r\n            &quot;url&quot;: &quot;http://packages.example.com&quot;\r\n        },\r\n        {\r\n            &quot;type&quot;: &quot;composer&quot;,\r\n            &quot;url&quot;: &quot;https://packages.example.com&quot;,\r\n            &quot;options&quot;: {\r\n                &quot;ssl&quot;: {\r\n                    &quot;verify_peer&quot;: &quot;true&quot;\r\n                }\r\n            }\r\n        },\r\n        {\r\n            &quot;type&quot;: &quot;vcs&quot;,\r\n            &quot;url&quot;: &quot;https://github.com/Seldaek/monolog&quot;\r\n        },\r\n        {\r\n            &quot;type&quot;: &quot;pear&quot;,\r\n            &quot;url&quot;: &quot;http://pear2.php.net&quot;\r\n        },\r\n        {\r\n            &quot;type&quot;: &quot;package&quot;,\r\n            &quot;package&quot;: {\r\n                &quot;name&quot;: &quot;smarty/smarty&quot;,\r\n                &quot;version&quot;: &quot;3.1.7&quot;,\r\n                &quot;dist&quot;: {\r\n                    &quot;url&quot;: &quot;http://www.smarty.net/files/Smarty-3.1.7.zip&quot;,\r\n                    &quot;type&quot;: &quot;zip&quot;\r\n                },\r\n                &quot;source&quot;: {\r\n                    &quot;url&quot;: &quot;http://smarty-php.googlecode.com/svn/&quot;,\r\n                    &quot;type&quot;: &quot;svn&quot;,\r\n                    &quot;reference&quot;: &quot;tags/Smarty_3_1_7/distribution/&quot;\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}&lt;/pre&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	19、config（root-only）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	针对项目的一些配置。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	process-timeout：默认 300 秒，Composer 进程执行超时时间；&amp;nbsp;&lt;br /&gt;\r\nuse-include-path：默认 false，如果是 true，Composer 自动加载器也会到 PHP 的 include_path 中查找；&amp;nbsp;&lt;br /&gt;\r\npreferred-install：默认 auto，设置 Composer 安装方式；&amp;nbsp;&lt;br /&gt;\r\ngithub-protocols：默认 [“git”, “https”]，设置与 github 通信协议；&amp;nbsp;&lt;br /&gt;\r\ngithub-oauth：设置 oauth；&amp;nbsp;&lt;br /&gt;\r\nvendor-dir：默认 vendor，你可以换成别的；&amp;nbsp;&lt;br /&gt;\r\nbin-dir：默认 vendor/bin，如果项目有二进制文件，会链接到这；&amp;nbsp;&lt;br /&gt;\r\ncache-dir：默认 $home/cache，存放 Composer 运行时产生的缓存；&amp;nbsp;&lt;br /&gt;\r\ncache-files-dir：默认 $cache-dir/files，存放包的 zip 文件；&amp;nbsp;&lt;br /&gt;\r\ncache-repo-dir：默认 $cache-dir/repo，存放仓库元数据；&amp;nbsp;&lt;br /&gt;\r\ncache-vcs-dir：默认 $cache-dir/vcs，存放 vcs 克隆；&amp;nbsp;&lt;br /&gt;\r\ncache-files-ttl：默认六个月，缓存的过期时间；&amp;nbsp;&lt;br /&gt;\r\ncache-files-maxsize：默认 300M；&amp;nbsp;&lt;br /&gt;\r\nnotify-no-install：默认 true，从仓库安装包会有个通知，可以关掉；&amp;nbsp;&lt;br /&gt;\r\ndiscard-changes：默认false，如何处理脏的更新；\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	20、scripts（root-only）\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	Composer 允许你在安装进程中安装钩子脚本，钩子是基于事件的；\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	21、extra\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	供 scripts 消费的额外数据；\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	22、bin\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	指定哪些文件必须被当做二进制文件处理的；\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	23、archive\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	设置创建包时的选项，exclude 属性可以设置排除哪些目录，例如：\r\n&lt;/p&gt;\r\n&lt;pre&gt;{\r\n    &quot;archive&quot;: {\r\n        &quot;exclude&quot;: [&quot;/foo/bar&quot;, &quot;baz&quot;, &quot;/*.test&quot;, &quot;!/foo/bar/baz&quot;]\r\n    }\r\n}&lt;/pre&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	这篇看下来，再看 Symfony 的标准版中的 composer.json，应该了然了吧。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#333333;font-family:arial;font-size:15px;background-color:#FFFFFF;&quot;&gt;\r\n	来源：http://phpernotes.com/php/composer_schema\r\n&lt;/p&gt;', '1', '0', '1482744657', '小兔', null, '0', '31');
INSERT INTO `article` VALUES ('40', '一、使用git GitHub创建管理仓库', 'git,GitHub创建管理仓库', '&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span&gt;一：&lt;a href=&quot;http://lib.csdn.net/base/git&quot; class=&quot;replace_word&quot; target=&quot;_blank&quot;&gt;Git&lt;/a&gt;是什么？&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Git是目前世界上最先进的分布式&lt;a href=&quot;http://lib.csdn.net/base/git&quot; class=&quot;replace_word&quot; target=&quot;_blank&quot;&gt;版本控制&lt;/a&gt;系统。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span&gt;二：SVN与Git的最主要的区别？&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp; SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而干活的时候，用的都是自己的电脑，所以首先要从中央服务器哪里得到最新的版本，然后干活，干完后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，如果在局域网还可以，带宽够大，速度够快，如果在互联网下，如果网速慢的话，就纳闷了。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp; Git是分布式版本控制系统，那么它就没有中央服务器的，每个人的电脑就是一个完整的版本库，这样，工作的时候就不需要联网了，因为版本都是在自己的电脑上。既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢？比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span&gt;三：在windows上如何安装Git？&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp; msysgit是 windows版的Git,如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/8x48lqn2LRVL0AP.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;需要从网上下载一个，然后进行默认安装即可。安装完成后，在开始菜单里面找到 “Git –&amp;gt; Git Bash”,如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/xi6zn8jX09wSfjM.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	会弹出一个类似的命令窗口的东西，就说明Git安装成功。如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/PIAkBl1ofc04oW4.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	安装完成后，还需要最后一步设置，在命令行输入如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/2J908MSiaPdX7I0.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; 因为Git是分布式版本控制系统，所以需要填写用户名和邮箱作为一个标识。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span&gt;&amp;nbsp; &amp;nbsp;注意：&lt;/span&gt;git config&amp;nbsp; –global 参数，有了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然你也可以对某个仓库指定的不同的用户名和邮箱。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span&gt;四：如何操作？&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp;一：创建版本库。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp;什么是版本库？版本库又名仓库，英文名repository,你可以简单的理解一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改，删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻还可以将文件”还原”。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; 所以创建一个版本库也非常简单，如下我是D盘 –&amp;gt; www下 目录下新建一个testgit版本库。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/jYFj8GV0u18qrgC.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	pwd 命令是用于显示当前的目录。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp; 1. 通过命令 git init 把这个目录变成git可以管理的仓库，如下：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/iaMI1KVJtwYWJw4.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp;这时候你当前testgit目录下会多了一个.git的目录，这个目录是Git来跟踪管理版本的，没事千万不要手动乱改这个目录里面的文件，否则，会把git仓库给破坏了。如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/G5sMFrS1HDRAt8h.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;2. 把文件添加到版本库中。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 首先要明确下，所有的版本控制系统，只能跟踪文本文件的改动，比如txt文件，网页，所有程序的代码等，Git也不列外，版本控制系统可以告诉你每次的改动，但是图片，视频这些二进制文件，虽能也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是知道图片从1kb变成2kb，但是到底改了啥，版本控制也不知道。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;下面先看下demo如下演示：&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp;我在版本库testgit目录下新建一个记事本文件 readme.txt 内容如下：11111111\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp;第一步：使用命令 git add readme.txt添加到暂存区里面去。如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/vhH0q8IBH8x6O0S.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;如果和上面一样，没有任何提示，说明已经添加成功了。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;第二步：用命令 git commit告诉Git，把文件提交到仓库。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/iDo1PtJ8KRb2RU1.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp;现在我们已经提交了一个readme.txt文件了，我们下面可以通过命令git status来查看是否还有文件未提交，如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/yG88Eo9NqCFe8Tb.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;说明没有任何文件未提交，但是我现在继续来改下readme.txt内容，比如我在下面添加一行2222222222内容，继续使用git status来查看下结果，如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/r8e5TuO3SZkus4E.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	上面的命令告诉我们 readme.txt文件已被修改，但是未被提交的修改。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	接下来我想看下readme.txt文件到底改了什么内容，如何查看呢？可以使用如下命令：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	git diff readme.txt 如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/JqLHnPwh2dk8HJr.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	如上可以看到，readme.txt文件内容从一行11111111改成 二行 添加了一行22222222内容。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	知道了对readme.txt文件做了什么修改后，我们可以放心的提交到仓库了，提交修改和提交文件是一样的2步(第一步是git add&amp;nbsp; 第二步是：git commit)。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/i1kNV28aXQ10Biz.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	二：版本回退：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp;如上，我们已经学会了修改文件，现在我继续对readme.txt文件进行修改，再增加一行\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	内容为33333333333333.继续执行命令如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/GrgRzT7m41PbYXl.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	现在我已经对readme.txt文件做了三次修改了，那么我现在想查看下历史记录，如何查呢？我们现在可以使用命令 git log 演示如下所示：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/G0bqJwkHX0YN9Zv.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; git log命令显示从最近到最远的显示日志，我们可以看到最近三次提交，最近的一次是,增加内容为333333.上一次是添加内容222222，第一次默认是 111111.如果嫌上面显示的信息太多的话，我们可以使用命令 git log –pretty=oneline 演示如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/u5d0n2jKEaAUCZh.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; 现在我想使用版本回退操作，我想把当前的版本回退到上一个版本，要使用什么命令呢？可以使用如下2种命令，第一种是：git reset&amp;nbsp; –hard HEAD^ 那么如果要回退到上上个版本只需把HEAD^ 改成 HEAD^^ 以此类推。那如果要回退到前100个版本的话，使用上面的方法肯定不方便，我们可以使用下面的简便命令操作：git reset&amp;nbsp; –hard HEAD~100 即可。未回退之前的readme.txt内容如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/n5dPLmBvuZtIco8.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	如果想回退到上一个版本的命令如下操作：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/Y898yhU8sZ9tjCI.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	再来查看下 readme.txt内容如下：通过命令cat readme.txt查看\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/Qpet9p68bQWVZy9.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	可以看到，内容已经回退到上一个版本了。我们可以继续使用git log 来查看下历史记录信息，如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/yN7sFW00uJpu8Zw.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	我们看到 增加333333 内容我们没有看到了，但是现在我想回退到最新的版本，如：有333333的内容要如何恢复呢？我们可以通过版本号回退，使用命令方法如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	git reset&amp;nbsp; –hard 版本号 ，但是现在的问题假如我已经关掉过一次命令行或者333内容的版本号我并不知道呢？要如何知道增加3333内容的版本号呢？可以通过如下命令即可获取到版本号：git reflog&amp;nbsp; 演示如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/BgbfZ6Vw3xDpI2e.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	通过上面的显示我们可以知道，增加内容3333的版本号是 6fcfc89.我们现在可以命令\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	git reset&amp;nbsp; –hard 6fcfc89来恢复了。演示如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/HQsf9x40Om9961T.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	可以看到 目前已经是最新的版本了。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	三：理解工作区与暂存区的区别？\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span&gt;工作区：&lt;/span&gt;就是你在电脑上看到的目录，比如目录下testgit里的文件(.git隐藏目录版本库除外)。或者以后需要再新建的目录文件等等都属于工作区范畴。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 版本库(Repository)：&lt;/span&gt;工作区有一个隐藏目录.git,这个不属于工作区，这是版本库。其中版本库里面存了很多东西，其中最重要的就是stage(暂存区)，还有Git为我们自动创建了第一个分支master,以及指向master的一个指针HEAD。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	我们前面说过使用Git提交文件到版本库有两步：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; 第一步：是使用 git add 把文件添加进去，实际上就是把文件添加到暂存区。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; 第二步：使用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支上。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	我们继续使用demo来演示下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	我们在readme.txt再添加一行内容为4444444，接着在目录下新建一个文件为test.txt 内容为test，我们先用命令 git status来查看下状态，如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/T3zv8PRTBlHE0P7.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	现在我们先使用git add 命令把2个文件都添加到暂存区中，再使用git status来查看下状态，如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/0Xon8nbuDp6dj29.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	接着我们可以使用git commit一次性提交到分支上，如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/8MXs0W0Pg91nER2.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	四：Git撤销修改和删除文件操作。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span&gt;一：撤销修改：&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp;&amp;nbsp; 比如我现在在readme.txt文件里面增加一行 内容为555555555555，我们先通过命令查看如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/cMQQ1J9128H0brT.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	在我未提交之前，我发现添加5555555555555内容有误，所以我得马上恢复以前的版本，现在我可以有如下几种方法可以做修改：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	第一：如果我知道要删掉那些内容的话，直接手动更改去掉那些需要的文件，然后add添加到暂存区，最后commit掉。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	第二：我可以按以前的方法直接恢复到上一个版本。使用 git reset&amp;nbsp; –hard HEAD^\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	但是现在我不想使用上面的2种方法，我想直接想使用撤销命令该如何操作呢？首先在做撤销之前，我们可以先用 git status 查看下当前的状态。如下所示：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/5j6t24FZjmZaZ3r.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	可以发现，Git会告诉你，git checkout&amp;nbsp; — file 可以丢弃工作区的修改，如下命令：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	git checkout&amp;nbsp; –&amp;nbsp; readme.txt,如下所示：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/S099MuiGMcET8fB.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	命令 git checkout –readme.txt 意思就是，把readme.txt文件在工作区做的修改全部撤销，这里有2种情况，如下：\r\n&lt;/p&gt;\r\n&lt;ol style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;li&gt;\r\n		readme.txt自动修改后，还没有放到暂存区，使用 撤销修改就回到和版本库一模一样的状态。\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		另外一种是readme.txt已经放入暂存区了，接着又作了修改，撤销修改就回到添加暂存区后的状态。\r\n	&lt;/li&gt;\r\n&lt;/ol&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	对于第二种情况，我想我们继续做demo来看下，假如现在我对readme.txt添加一行 内容为6666666666666，我git add 增加到暂存区后，接着添加内容7777777，我想通过撤销命令让其回到暂存区后的状态。如下所示：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/MBkivDC43mdsM2M.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span&gt;注意：&lt;/span&gt;命令git checkout — readme.txt 中的 — 很重要，如果没有 — 的话，那么命令变成创建分支了。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span&gt;二：删除文件。&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp;假如我现在版本库testgit目录添加一个文件b.txt,然后提交。如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/9MIylUjU1ww5GpB.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	如上：一般情况下，可以直接在文件目录中把文件删了，或者使用如上rm命令：rm b.txt ，如果我想彻底从版本库中删掉了此文件的话，可以再执行commit命令 提交掉，现在目录是这样的，\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/H8CsbxvepOQS02L.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	只要没有commit之前，如果我想在版本库中恢复此文件如何操作呢？\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	可以使用如下命令 git checkout&amp;nbsp; — b.txt，如下所示：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/JWXRL0cuT2gGZnw.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	再来看看我们testgit目录，添加了3个文件了。如下所示：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/0uo3cPRXt8cAO92.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	来源：http://blog.csdn.net/zhang1027963459/article/details/50478340\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p&gt;\r\n	&lt;a href=&quot;http://115.28.20.111/art/article/id/41.htm&quot;&gt;下一篇&lt;/a&gt; \r\n&lt;/p&gt;', '1', '0', '1482908288', '小兔', null, '0', '24');
INSERT INTO `article` VALUES ('41', '二、使用git GitHub创建管理仓库', 'git,GitHub创建管理仓库', '&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	五：远程仓库。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp;在了解之前，先注册github账号，由于你的本地Git仓库和github仓库之间的传输是通过SSH加密的，所以需要一点设置：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp;第一步：创建SSH Key。在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果有的话，直接跳过此如下命令，如果没有的话，打开命令行，输入如下命令：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	ssh-keygen&amp;nbsp; -t rsa –C “youremail@example.com”, 由于我本地此前运行过一次，所以本地有，如下所示：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/nizE9Avi8a1yPkk.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	第二步：登录github,打开” settings”中的SSH Keys页面，然后点击“Add SSH Key”,填上任意title，在Key文本框里黏贴id_rsa.pub文件的内容。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/F81VndiWDc4L1X9.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	点击 Add Key，你就应该可以看到已经添加的key。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/HAI8FD81ly1bngL.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;ol style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;li&gt;\r\n		如何添加远程库？\r\n	&lt;/li&gt;\r\n&lt;/ol&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;现在的情景是：我们已经在本地创建了一个Git仓库后，又想在github创建一个Git仓库，并且希望这两个仓库进行远程同步，这样github的仓库可以作为备份，又可以其他人通过该仓库来协作。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; 首先，登录github上，然后在右上角找到“create a new repo”创建一个新的仓库。如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/Ymjp3XSgjVIb7Iz.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	在Repository name填入testgit，其他保持默认设置，点击“Create repository”按钮，就成功地创建了一个新的Git仓库：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/1PzFL0IIvt1NUlt.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; 目前，在GitHub上的这个testgit仓库还是空的，GitHub告诉我们，可以从这个仓库克隆出新的仓库，也可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	现在，我们根据GitHub的提示，在本地的testgit仓库下运行命令：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	git remote add origin https://github.com/tugenhua0707/testgit.git\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	所有的如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/626Go441AETJfrR.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	把本地库的内容推送到远程，使用 git push命令，实际上是把当前分支master推送到远程。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	由于远程库是空的，我们第一次推送master分支时，加上了 –u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。推送成功后，可以立刻在github页面中看到远程库的内容已经和本地一模一样了，上面的要输入github的用户名和密码如下所示：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/4o7UtjQ8sBlpO80.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	从现在起，只要本地作了提交，就可以通过如下命令：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	git push origin master\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	把本地master分支的最新修改推送到github上了，现在你就拥有了真正的分布式版本库了。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	2. 如何从远程库克隆？\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	上面我们了解了先有本地库，后有远程库时候，如何关联远程库。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	现在我们想，假如远程库有新的内容了，我想克隆到本地来 如何克隆呢？\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	首先，登录github，创建一个新的仓库，名字叫testgit2.如下：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/32Z59Ez2Bz1V2dC.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	如下，我们看到：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/Q3roSbX83FaFupC.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	现在，远程库已经准备好了，下一步是使用命令git clone克隆一个本地库了。如下所示：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/Lo5bJ9f2xhyv2xY.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	接着在我本地目录下 生成testgit2目录了，如下所示：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/8EWnsfPGEjLfo8V.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	六：创建与合并分支。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	在 &amp;nbsp;版本回填退里，你已经知道，每次提交，Git都把它们串成一条时间线，这条时间线就是一个分支。截止到目前，只有一条时间线，在Git里，这个分支叫主分支，即master分支。HEAD严格来说不是指向提交，而是指向master，master才是指向提交的，所以，HEAD指向的就是当前分支。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	首先，我们来创建dev分支，然后切换到dev分支上。如下操作：\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/qI2LjJGPI2x1pqv.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	git checkout 命令加上 –b参数表示创建并切换，相当于如下2条命令\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	git branch dev\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	git checkout dev\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	git branch查看分支，会列出所有的分支，当前分支前面会添加一个星号。然后我们在dev分支上继续做demo，比如我们现在在readme.txt再增加一行 7777777777777\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	首先我们先来查看下readme.txt内容，接着添加内容77777777，如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/Dn1Z1i9gp3P1e9w.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	现在dev分支工作已完成，现在我们切换到主分支master上，继续查看readme.txt内容如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/zk9zwe38tHwhFcY.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	现在我们可以把dev分支上的内容合并到分支master上了，可以在master分支上，使用如下命令 git merge dev 如下所示：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/1fBq02Zz3EyO93I.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	git merge命令用于合并指定分支到当前分支上，合并后，再查看readme.txt内容，可以看到，和dev分支最新提交的是完全一样的。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	注意到上面的&lt;span&gt;Fast-forward&lt;/span&gt;信息，Git告诉我们，这次合并是“快进模式”，也就是直接把master指向dev的当前提交，所以合并速度非常快。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	合并完成后，我们可以接着删除dev分支了，操作如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/rStmHfRG8BNViSx.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	总结创建与合并分支命令如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; 查看分支：git branch\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; 创建分支：git branch name\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; 切换分支：git checkout name\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	创建+切换分支：git checkout –b name\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	合并某分支到当前分支：git merge name\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	删除分支：git branch –d name\r\n&lt;/p&gt;\r\n&lt;ol style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;li&gt;\r\n		如何解决冲突？\r\n	&lt;/li&gt;\r\n&lt;/ol&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	下面我们还是一步一步来，先新建一个新分支，比如名字叫fenzhi1，在readme.txt添加一行内容8888888，然后提交，如下所示：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/8J31zY0POZTDdO6.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	同样，我们现在切换到master分支上来，也在最后一行添加内容，内容为99999999，如下所示：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/l8o4jvA1484Fu9Y.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	现在我们需要在master分支上来合并fenzhi1，如下操作：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/i67B4WZubeJvhm3.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	Git用&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;，=======，&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;标记出不同分支的内容，其中&amp;lt;&amp;lt;&amp;lt;HEAD是指主分支修改的内容，&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;fenzhi1 是指fenzhi1上修改的内容，我们可以修改下如下后保存：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/DX8ssfes56RWbCw.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	如果我想查看分支合并的情况的话，需要使用命令 git log.命令行演示如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/zkSXmmjC7Lgg1NS.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; 3.分支管理策略。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp; &amp;nbsp; 通常合并分支时，git一般使用”Fast forward”模式，在这种模式下，删除分支后，会丢掉分支信息，现在我们来使用带参数 –no-ff来禁用”Fast forward”模式。首先我们来做demo演示下：\r\n&lt;/p&gt;\r\n&lt;ol style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;li&gt;\r\n		创建一个dev分支。\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		修改readme.txt内容。\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		添加到暂存区。\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		切换回主分支(master)。\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		合并dev分支，使用命令 git merge –no-ff&amp;nbsp; -m “注释” dev\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		查看历史记录\r\n	&lt;/li&gt;\r\n&lt;/ol&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	截图如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/1Rg2AZ8eI9BZRd1.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span&gt;分支策略：&lt;/span&gt;首先master主分支应该是非常稳定的，也就是用来发布新版本，一般情况下不允许在上面干活，干活一般情况下在新建的dev分支上干活，干完后，比如上要发布，或者说dev分支代码稳定后可以合并到主分支master上来。\r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	七：bug分支：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在开发中，会经常碰到bug问题，那么有了bug就需要修复，在Git中，分支是很强大的，每个bug都可以通过一个临时分支来修复，修复完成后，合并分支，然后将临时的分支删除掉。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	比如我在开发中接到一个404 bug时候，我们可以创建一个404分支来修复它，但是，当前的dev分支上的工作还没有提交。比如如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/D3CWqo30q6cWC9a.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;并不是我不想提交，而是工作进行到一半时候，我们还无法提交，比如我这个分支bug要2天完成，但是我issue-404 bug需要5个小时内完成。怎么办呢？还好，Git还提供了一个stash功能，可以把当前工作现场 ”隐藏起来”，等以后恢复现场后继续工作。如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/V6s8ZtRyY0sZp38.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;所以现在我可以通过创建issue-404分支来修复bug了。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	首先我们要确定在那个分支上修复bug，比如我现在是在主分支master上来修复的，现在我要在master分支上创建一个临时分支，演示如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/HDWKZCzY3fv08x4.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	修复完成后，切换到master分支上，并完成合并，最后删除issue-404分支。演示如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/3J1MBQ0TETjxiZw.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	现在，我们回到dev分支上干活了。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/b71xiQ17eUC0P0N.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	工作区是干净的，那么我们工作现场去哪里呢？我们可以使用命令 git stash list来查看下。如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/jZXabZq6ivpSiYi.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	工作现场还在，Git把stash内容存在某个地方了，但是需要恢复一下，可以使用如下2个方法：\r\n&lt;/p&gt;\r\n&lt;ol style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;li&gt;\r\n		git stash apply恢复，恢复后，stash内容并不删除，你需要使用命令git stash drop来删除。\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		另一种方式是使用git stash pop,恢复的同时把stash内容也删除了。\r\n	&lt;/li&gt;\r\n&lt;/ol&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 演示如下\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/4zGVnobeLGyO6DK.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	八：多人协作。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	当你从远程库克隆时候，实际上Git自动把本地的master分支和远程的master分支对应起来了，并且远程库的默认名称是origin。\r\n&lt;/p&gt;\r\n&lt;ol style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;li&gt;\r\n		要查看远程库的信息 使用 git remote\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		要查看远程库的详细信息 使用 git remote –v\r\n	&lt;/li&gt;\r\n&lt;/ol&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	如下演示：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/kn91OAW960pMOXa.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span&gt;一：推送分支：&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 推送分支就是把该分支上所有本地提交到远程库中，推送时，要指定本地分支，这样，Git就会把该分支推送到远程库对应的远程分支上：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 使用命令 git push origin master\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	比如我现在的github上的readme.txt代码如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/ws02DEhfitl71Ha.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	本地的readme.txt代码如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/IrOho2iBXE8CRK0.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	现在我想把本地更新的readme.txt代码推送到远程库中，使用命令如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/s1JI1NM8svR3SPb.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	我们可以看到如上，推送成功，我们可以继续来截图github上的readme.txt内容 如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/tXS1910d3nh0qzF.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	可以看到 推送成功了，如果我们现在要推送到其他分支，比如dev分支上，我们还是那个命令 git push origin dev\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	那么一般情况下，那些分支要推送呢？\r\n&lt;/p&gt;\r\n&lt;ol style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;li&gt;\r\n		master分支是主分支，因此要时刻与远程同步。\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		一些修复bug分支不需要推送到远程去，可以先合并到主分支上，然后把主分支master推送到远程去。\r\n	&lt;/li&gt;\r\n&lt;/ol&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span&gt;二：抓取分支：&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	多人协作时，大家都会往master分支上推送各自的修改。现在我们可以模拟另外一个同事，可以在另一台电脑上（注意要把SSH key添加到github上）或者同一台电脑上另外一个目录克隆，新建一个目录名字叫testgit2\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	但是我首先要把dev分支也要推送到远程去，如下\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/HhCQp2481Nnih0y.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	接着进入testgit2目录，进行克隆远程的库到本地来，如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/IoL1mGYCjXqRS6G.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	现在目录下生成有如下所示：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/Ydo1u3UOWm24V40.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	现在我们的小伙伴要在dev分支上做开发，就必须把远程的origin的dev分支到本地来，于是可以使用命令创建本地dev分支：git checkout&amp;nbsp; –b dev origin/dev\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	现在小伙伴们就可以在dev分支上做开发了，开发完成后把dev分支推送到远程库时。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/JHkV8W1xZBLFT4b.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	小伙伴们已经向origin/dev分支上推送了提交，而我在我的目录文件下也对同样的文件同个地方作了修改，也试图推送到远程库时，如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/0sFEKz85EuH6u25.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	由上面可知：推送失败，因为我的小伙伴最新提交的和我试图推送的有冲突，解决的办法也很简单，上面已经提示我们，先用git pull把最新的提交从origin/dev抓下来，然后在本地合并，解决冲突，再推送。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/pcd0xCnPzCRAHa4.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span&gt;git pull&lt;/span&gt;也失败了，原因是没有指定本地dev分支与远程origin/dev分支的链接，根据提示，设置dev和origin/dev的链接：如下：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/j4No0Xe4sjPzF5S.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	这回&lt;span&gt;git pull&lt;/span&gt;成功，但是合并有冲突，需要手动解决，解决的方法和分支管理中的 解决冲突完全一样。解决后，提交，再push：\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	我们可以先来看看readme.txt内容了。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/bpuFGiHtx8vE12f.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	现在手动已经解决完了，我接在需要再提交，再push到远程库里面去。如下所示：&lt;br /&gt;\r\n&lt;img alt=&quot;&quot; src=&quot;/Public/files/images/2016/12/28/2d6fR28wwl5BbbB.jpg&quot; style=&quot;height:auto;&quot; /&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	因此：多人协作工作模式一般是这样的：\r\n&lt;/p&gt;\r\n&lt;ol style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;li&gt;\r\n		首先，可以试图用git push origin branch-name推送自己的修改.\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		如果推送失败，则因为远程分支比你的本地更新早，需要先用git pull试图合并。\r\n	&lt;/li&gt;\r\n	&lt;li&gt;\r\n		如果合并有冲突，则需要解决冲突，并在本地提交。再用git push origin branch-name推送。\r\n	&lt;/li&gt;\r\n&lt;/ol&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span&gt;Git基本常用命令如下：&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; mkdir：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; XX (创建一个空目录 XX指目录名)\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; pwd：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 显示当前目录的路径。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; git init&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 把当前的目录变成可以管理的git仓库，生成隐藏.git文件。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; git add XX&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 把xx文件添加到暂存区去。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; git commit –m “XX”&amp;nbsp; 提交文件 –m 后面的是注释。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; git status&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 查看仓库状态\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; git diff&amp;nbsp; XX&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 查看XX文件修改了那些内容\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; git log&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 查看历史记录\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; git reset&amp;nbsp; –hard HEAD^ 或者 git reset&amp;nbsp; –hard HEAD~ 回退到上一个版本\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (如果想回退到100个版本，使用git reset –hard HEAD~100 )\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; cat XX&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 查看XX文件内容\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; git reflog&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 查看历史记录的版本号id\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; git checkout — XX&amp;nbsp; 把XX文件在工作区的修改全部撤销。\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; git rm XX&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 删除XX文件\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; git remote add origin&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/tugenhua0707/testgit&quot;&gt;https://github.com/tugenhua0707/testgit&lt;/a&gt;&amp;nbsp;关联一个远程库\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp;&amp;nbsp; git push –u(第一次要用-u 以后不需要) origin master 把当前master分支推送到远程库\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;git clone&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/tugenhua0707/testgit&quot;&gt;https://github.com/tugenhua0707/testgit&lt;/a&gt;&amp;nbsp; 从远程库中克隆\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;git checkout –b dev&amp;nbsp; 创建dev分支 并切换到dev分支上\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;git branch&amp;nbsp; 查看当前所有的分支\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;git checkout master 切换回master分支\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;git merge dev&amp;nbsp; &amp;nbsp;&amp;nbsp;在当前的分支上合并dev分支\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;git branch –d dev 删除dev分支\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;git branch name&amp;nbsp; 创建分支\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;git stash 把当前的工作隐藏起来 等以后恢复现场后继续工作\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;git stash list 查看所有被隐藏的文件列表\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;git stash apply 恢复被隐藏的文件，但是内容不删除\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;git stash drop 删除文件\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;git stash pop 恢复文件的同时 也删除文件\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;git remote 查看远程库的信息\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;git remote –v 查看远程库的详细信息\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&amp;nbsp; &amp;nbsp;git push origin master&amp;nbsp; Git会把master分支推送到远程库对应的远程分支上\r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	来源：&lt;span style=&quot;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;font-size:15px;line-height:25px;&quot;&gt;http://blog.csdn.net/zhang1027963459/article/details/50478340&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p align=&quot;left&quot; style=&quot;font-size:15px;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span style=&quot;color:#2E2E2E;font-family:&amp;quot;background-color:#FFFFFF;font-size:15px;line-height:25px;&quot;&gt;&lt;a href=&quot;http://115.28.20.111/art/article/id/40.htm&quot;&gt;上一篇&lt;/a&gt;&lt;/span&gt; \r\n&lt;/p&gt;', '1', '0', '1482908378', '小兔', null, '0', '35');
INSERT INTO `article` VALUES ('42', 'git 常用命令', 'git', '&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	&lt;strong&gt;查看、添加、提交、删除、找回，重置修改文件&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git help &amp;lt;command&amp;gt; # 显示command的help\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git show # 显示某次提交的内容 git show $id\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git co -- &amp;lt;file&amp;gt; # 抛弃工作区修改\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git co . # 抛弃工作区修改\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git add &amp;lt;file&amp;gt; # 将工作文件修改提交到本地暂存区\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git add . # 将所有修改过的工作文件提交暂存区\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git rm &amp;lt;file&amp;gt; # 从版本库中删除文件\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git rm &amp;lt;file&amp;gt; --cached # 从版本库中删除文件，但不删除文件\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git reset &amp;lt;file&amp;gt; # 从暂存区恢复到工作文件\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git reset -- . # 从暂存区恢复到工作文件\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git reset --hard # 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git ci &amp;lt;file&amp;gt; git ci . git ci -a # 将git add, git rm和git ci等操作都合并在一起做　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　git ci -am &quot;some comments&quot;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git ci --amend # 修改最后一次提交记录\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git revert &amp;lt;$id&amp;gt; # 恢复某次提交的状态，恢复动作本身也创建次提交对象\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git revert HEAD # 恢复最后一次提交的状态\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	&lt;strong&gt;查看文件diff&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git diff &amp;lt;file&amp;gt; # 比较当前文件和暂存区文件差异 git diff\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git diff &amp;lt;&lt;span class=&quot;MathJax_Preview&quot; style=&quot;color:inherit;&quot;&gt;&lt;/span&gt;id1&amp;gt;&amp;lt;&lt;span class=&quot;MJX_Assistive_MathML&quot; style=&quot;vertical-align:0px;&quot;&gt;id1&amp;gt;&amp;lt;&lt;/span&gt;id2&amp;gt; # 比较两次提交之间的差异\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git diff &amp;lt;branch1&amp;gt;..&amp;lt;branch2&amp;gt; # 在两个分支之间比较\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git diff --staged # 比较暂存区和版本库差异\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git diff --cached # 比较暂存区和版本库差异\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git diff --stat # 仅仅比较统计信息\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	&lt;strong&gt;查看提交记录&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git log git log &amp;lt;file&amp;gt; # 查看该文件每次提交记录\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git log -p &amp;lt;file&amp;gt; # 查看每次详细修改内容的diff\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git log -p -2 # 查看最近两次详细修改内容的diff\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git log --stat #查看提交统计信息\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	&lt;strong&gt;tig&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	Mac上可以使用tig代替diff和log，brew install tig\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	&lt;strong&gt;Git 本地分支管理&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	&lt;strong&gt;查看、切换、创建和删除分支&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git br -r # 查看远程分支\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git br &amp;lt;new_branch&amp;gt; # 创建新的分支\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git br -v # 查看各个分支最后提交信息\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git br --merged # 查看已经被合并到当前分支的分支\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git br --no-merged # 查看尚未被合并到当前分支的分支\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git co &amp;lt;branch&amp;gt; # 切换到某个分支\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git co -b &amp;lt;new_branch&amp;gt; # 创建新的分支，并且切换过去\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git co -b &amp;lt;new_branch&amp;gt; &amp;lt;branch&amp;gt; # 基于branch创建新的new_branch\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git co $id # 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git co $id -b &amp;lt;new_branch&amp;gt; # 把某次历史提交记录checkout出来，创建成一个分支\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git br -d &amp;lt;branch&amp;gt; # 删除某个分支\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git br -D &amp;lt;branch&amp;gt; # 强制删除某个分支 (未被合并的分支被删除的时候需要强制)\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	&lt;strong&gt;&amp;nbsp;分支合并和rebase&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git merge &amp;lt;branch&amp;gt; # 将branch分支合并到当前分支\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git merge origin/master --no-ff # 不要Fast-Foward合并，这样可以生成merge提交\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git rebase master &amp;lt;branch&amp;gt; # 将master rebase到branch，相当于： git co &amp;lt;branch&amp;gt; &amp;amp;&amp;amp; git rebase master &amp;amp;&amp;amp; git co master &amp;amp;&amp;amp; git merge &amp;lt;branch&amp;gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	&lt;strong&gt;&amp;nbsp;Git补丁管理(方便在多台机器上开发同步时用)&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git diff &amp;gt; ../sync.patch # 生成补丁\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git apply ../sync.patch # 打补丁\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git apply --check ../sync.patch #测试补丁能否成功\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	&lt;strong&gt;&amp;nbsp;Git暂存管理&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git stash # 暂存\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git stash list # 列所有stash\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git stash apply # 恢复暂存的内容\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git stash drop # 删除暂存区\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	&lt;strong&gt;Git远程分支管理&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git pull # 抓取远程仓库所有分支更新并合并到本地\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git pull --no-ff # 抓取远程仓库所有分支更新并合并到本地，不要快进合并\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git fetch origin # 抓取远程仓库更新\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git merge origin/master # 将远程主分支合并到本地当前分支\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git co --track origin/branch # 跟踪某个远程分支创建相应的本地分支\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git co -b &amp;lt;local_branch&amp;gt; origin/&amp;lt;remote_branch&amp;gt; # 基于远程分支创建本地分支，功能同上\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git push # push所有分支\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git push origin master # 将本地主分支推到远程主分支\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git push -u origin master # 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git push origin &amp;lt;local_branch&amp;gt; # 创建远程分支， origin是远程仓库名\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git push origin &amp;lt;local_branch&amp;gt;:&amp;lt;remote_branch&amp;gt; # 创建远程分支\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git push origin :&amp;lt;remote_branch&amp;gt; #先删除本地分支(git br -d &amp;lt;branch&amp;gt;)，然后再push删除远程分支\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	&lt;strong&gt;Git远程仓库管理&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	&lt;span style=&quot;color:#FFFFFF;&quot;&gt;&lt;em&gt;&lt;span class=&quot;wp_keywordlink&quot;&gt;&lt;a href=&quot;http://blog.jobbole.com/6492/&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git remote -v # 查看远程服务器地址和仓库名称\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git remote show origin # 查看远程服务器仓库状态\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git remote add origin git@ github:robbin/robbin_site.git # 添加远程仓库地址\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git remote set-url origin git@ github.com:robbin/robbin_site.git # 设置远程仓库地址(用于修改远程仓库地址) git remote rm &amp;lt;repository&amp;gt; # 删除远程仓库\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	&lt;strong&gt;创建远程仓库&lt;/strong&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git clone --bare robbin_site robbin_site.git # 用带版本的项目创建纯版本仓库\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	scp -r my_project.git git@ git.csdn.net:~ # 将纯仓库上传到服务器上\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	mkdir robbin_site.git &amp;amp;&amp;amp; cd robbin_site.git &amp;amp;&amp;amp; git --bare init # 在服务器创建纯仓库\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git remote add origin git@ github.com:robbin/robbin_site.git # 设置远程仓库地址\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git push -u origin master # 客户端首次提交\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git push -u origin develop # 首次将本地develop分支提交到远程develop分支，并且track\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git remote set-head origin master # 设置远程仓库的HEAD指向master分支\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	也可以命令设置跟踪远程库和本地库\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git branch --set-upstream master origin/master\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	git branch --set-upstream develop origin/develop\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#393939;font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#FAF7EF;&quot;&gt;\r\n	来源：http://www.cnblogs.com/cspku/articles/Git_cmds.html\r\n&lt;/p&gt;', '1', '0', '1482977890', '小兔', null, '0', '28');
INSERT INTO `article` VALUES ('43', '【爱分享，爱Java】JAVA学习路线【新手可以参考看下】', 'java学习路线', '&lt;table cellspacing=&quot;0&quot; class=&quot;t_table&quot; style=&quot;font-size:12px;border:1px solid #999999;color:#000000;font-family:宋体, Arial, Helvetica, san-serif;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;strong&gt;第一阶段&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;strong&gt;技术名称&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;strong&gt;技术内容&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td rowspan=&quot;8&quot; width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;strong&gt;&lt;span&gt;&lt;span&gt;J2SE&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n&lt;span&gt;&lt;span&gt;(java&lt;span&gt;基础部分&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;java&lt;span&gt;开发前奏&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;计算机基本原理，Java&lt;span&gt;语言发展简史以及开发环境的搭建，体验&lt;/span&gt;Java&lt;span&gt;程序的开发，环境变量的设置，程序的执行过程，&lt;br /&gt;\r\n相关反编译工具介绍，&lt;/span&gt;java&lt;span&gt;开发工具&lt;/span&gt;Eclipse&lt;span&gt;的安装和使用，&lt;/span&gt;javadoc&lt;span&gt;的说明。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;Java&lt;span&gt;基础语法&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;Java&lt;span&gt;语法格式，常量和变量，变量的作用域，方法和方法的重载，运算符，程序流程控制，数组和操作数组的类，&lt;br /&gt;\r\n对数组循环遍历以及针对数组的常用查找、排序算法原理，最后使用&lt;/span&gt;Java&lt;span&gt;程序进行功能实现。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;面向对象编程&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;理解对象的本质，以及面向对象，类与对象之间的关系，如何用面向对象的思想分析和解决显示生活中的问题，&lt;br /&gt;\r\n并java&lt;span&gt;程序的手段编写出来。&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n&lt;span&gt;&lt;span&gt;如何设计类，设计类的基本原则，类的实例化过程，类元素：构造函数、this&lt;span&gt;关键字、方法和方法的参数传递过程、&lt;br /&gt;\r\n&lt;/span&gt;static&lt;span&gt;关键字、内部类，&lt;/span&gt;Java&lt;span&gt;的垃圾对象回收机制。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n&lt;span&gt;&lt;span&gt;对象的三大特性：封装、继承和多态。子类对象的实例化过程、方法的重写和重载、final&lt;span&gt;关键字、抽象类、接口、&lt;br /&gt;\r\n继承的优点和缺点。 对象的多态性：子类和父类之间的转换、父类纸箱子类的引用、抽象类和接口在多态中的应&lt;br /&gt;\r\n用、多态优点。常用设计模式如单利、模版等模式。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n&lt;span&gt;&lt;span&gt;什么是异常 异常的捕捉和抛出 异常捕捉的原则 finally&lt;span&gt;的使用，&lt;/span&gt;package&lt;span&gt;的应用&amp;nbsp;&lt;/span&gt;import&lt;span&gt;关键字。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;多线程应用&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;多线程的概念，如何在程序中创建多线程(Thread&lt;span&gt;、&lt;/span&gt;Runnable)&lt;span&gt;，线程安全问题，线程的同步，线程之间的通讯、&lt;br /&gt;\r\n死锁问题的剖析。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;javaAPI&lt;span&gt;详解&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;JavaAPI&lt;span&gt;介绍、&lt;/span&gt;String&lt;span&gt;和&lt;/span&gt;StringBuffer&lt;span&gt;、各种基本数据类型包装类，&lt;/span&gt;System&lt;span&gt;和&lt;/span&gt;Runtime&lt;span&gt;类，&lt;/span&gt;Date&lt;span&gt;和&lt;/span&gt;DateFomat&lt;span&gt;类等。&lt;br /&gt;\r\n常用的集合类使用如下：&lt;/span&gt;Java Collections Framework&lt;span&gt;：&lt;/span&gt;Collection&lt;span&gt;、&lt;/span&gt;Set&lt;span&gt;、&lt;/span&gt;List&lt;span&gt;、&lt;/span&gt;ArrayList&lt;span&gt;、&lt;/span&gt;Vector&lt;span&gt;、&lt;/span&gt;LinkedList&lt;span&gt;、&lt;/span&gt;Hashset&lt;span&gt;、&lt;/span&gt;TreeSet&lt;span&gt;、&lt;/span&gt;Map&lt;span&gt;、&lt;/span&gt;HashMap&lt;span&gt;、&lt;br /&gt;\r\n&lt;/span&gt;TreeMap&lt;span&gt;、&lt;/span&gt;Iterator&lt;span&gt;、&lt;/span&gt;Enumeration&lt;span&gt;等常用集合类&lt;/span&gt;API&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;IO&lt;span&gt;技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;什么是IO&lt;span&gt;，&lt;/span&gt;File&lt;span&gt;及相关类，字节流&lt;/span&gt;InputStream&lt;span&gt;和&lt;/span&gt;OutputStream&lt;span&gt;，字符流&lt;/span&gt;Reader&lt;span&gt;和&lt;/span&gt;Writer&lt;span&gt;，以及相应缓冲流和管道流，字节和字符的转化流，包装流，以及常用包装类使用，分析&lt;/span&gt;java&lt;span&gt;的&lt;/span&gt;IO&lt;span&gt;性能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;网络编程&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;Java&lt;span&gt;网络编程，网络通信底层协议&lt;/span&gt;TCP/UDP/IP&lt;span&gt;，&lt;/span&gt;Socket&lt;span&gt;编程。网络通信常用应用层协议简介：&lt;/span&gt;HTTP&lt;span&gt;、&lt;/span&gt;FTP&lt;span&gt;等，以及&lt;/span&gt;WEB&lt;span&gt;服务器的工作原理。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;java&lt;span&gt;高级特性&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;递归程序，Java&lt;span&gt;的高级特性：反射、代理和泛型、枚举、&lt;/span&gt;Java&lt;span&gt;正则表达式&lt;/span&gt;API&lt;span&gt;详解及其应用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;br /&gt;\r\n&lt;table cellspacing=&quot;0&quot; class=&quot;t_table&quot; bgcolor=&quot;rgb(255, 255, 255)&quot; style=&quot;font-size:12px;border:1px solid #999999;color:#000000;font-family:宋体, Arial, Helvetica, san-serif;width:704px;&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;第二阶段&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;span&gt;&lt;br /&gt;\r\n&lt;/span&gt; \r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;技术名称&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;技术内容&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td rowspan=&quot;6&quot; width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;strong&gt;数据库技术&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;Oracle&amp;nbsp;&lt;span&gt;基础管理&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;Oracle&lt;span&gt;背景简介，数据库的安装，数据库的用户名和密码，客户端登录数据库服务&lt;/span&gt;SQLPLUS&lt;span&gt;，数据库基本概。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;SQL&lt;span&gt;语句&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;数据库的创建，表的创建，修改，删除，查询，索引的创建，主从表的建立，数据控制授权和回收，事务控制，查询语句以及运算符的详解，sql&lt;span&gt;中的函数使用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;多表连接和子查询&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;等值和非等值连接，外连接，自连接；交叉连接，自然连接，using&lt;span&gt;子句连接，完全外连接和左右外连接，子查询使用以及注意事项。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;触发器、存储过程&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;触发器和存储过程使用场合， 通过实例进行详解。&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;数据库设计优化&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;WHERE&lt;span&gt;子句中的连接顺序，选择最有效率的表名顺序，&lt;/span&gt;SELECT&lt;span&gt;子句中避免使用&amp;nbsp;&lt;/span&gt;‘ * ‘&amp;nbsp;&lt;span&gt;计算记录条数等等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;数据备份与移植&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;移植技巧，备份方案；导入导出等。&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;br /&gt;\r\n&lt;table cellspacing=&quot;0&quot; class=&quot;t_table&quot; bgcolor=&quot;rgb(255, 255, 255)&quot; style=&quot;font-size:12px;border:1px solid #999999;color:#000000;font-family:宋体, Arial, Helvetica, san-serif;width:704px;&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;第三阶段&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;技术名称&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;技术内容&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td rowspan=&quot;3&quot; width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;strong&gt;jdbc&lt;span&gt;技术&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;JDBC&lt;span&gt;基础&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;JDBC Connection&lt;span&gt;、&lt;/span&gt;Statement&lt;span&gt;、&lt;/span&gt;PreparedStatement&lt;span&gt;、&lt;/span&gt;CallableStatement&lt;span&gt;、&lt;/span&gt;ResultSet&lt;span&gt;等不同类的使用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;连接池技术&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;了解连接池的概念，掌握连接池的建立、治理、关闭和配置。&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;ORM&lt;span&gt;与&lt;/span&gt;DAO&lt;span&gt;封装&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;对象关系映射思想，jdbc&lt;span&gt;的&lt;/span&gt;dao&lt;span&gt;封装，实现自己的&lt;/span&gt;jdbc&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;br /&gt;\r\n&lt;table cellspacing=&quot;0&quot; class=&quot;t_table&quot; bgcolor=&quot;rgb(255, 255, 255)&quot; style=&quot;font-size:12px;border:1px solid #999999;color:#000000;font-family:宋体, Arial, Helvetica, san-serif;width:704px;&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;第四阶段&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;技术名称&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;技术内容&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td rowspan=&quot;12&quot; width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;web&lt;span&gt;基础技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n&lt;span&gt;(&lt;span&gt;项目实战&lt;/span&gt;)&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;Xml&lt;span&gt;技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;使用jdom&lt;span&gt;和&lt;/span&gt;dom4j&lt;span&gt;来对&lt;/span&gt;xml&lt;span&gt;文档的解析和生成操作，&lt;/span&gt;xml&amp;nbsp;&lt;span&gt;的作用和使用场合。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;html/css&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;Java&lt;span&gt;掌握基本的&lt;/span&gt;html&lt;span&gt;标签的格式和使用，&lt;/span&gt;css&lt;span&gt;层叠样式表对&lt;/span&gt;div&lt;span&gt;的定义，实现对网站布局的基本实现。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;Javascript&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;了解javascript&lt;span&gt;的基本语法以及相关函数的使用，并结合&lt;/span&gt;html&lt;span&gt;页面实现流程控制和页面效果展示。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n&lt;span&gt;&lt;span&gt;什么是异常 异常的捕捉和抛出 异常捕捉的原则 finally&lt;span&gt;的使用，&lt;/span&gt;package&lt;span&gt;的应用&amp;nbsp;&lt;/span&gt;import&lt;span&gt;关键字。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;jsp/servlet&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;Servlet&lt;span&gt;和&lt;/span&gt;SP&amp;nbsp;&lt;span&gt;技术、上传下载、&amp;nbsp;&lt;/span&gt;Tomcat&amp;nbsp;&lt;span&gt;服务器技术、&lt;/span&gt;servlet&amp;nbsp;&lt;span&gt;过滤器和监听器。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;jstl&lt;span&gt;和&lt;/span&gt;EL&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;JSTL&lt;span&gt;核心标签库、函数标签库、格式化标签库、自定义标签技术、&lt;/span&gt;EL&lt;span&gt;表达式在&lt;/span&gt;jsp&lt;span&gt;页面的使用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;ajax&lt;span&gt;及框架技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;了解和属性原生态的ajax&lt;span&gt;的使用，&lt;/span&gt;ajax&lt;span&gt;使用的场合，使用&lt;/span&gt;ajax&lt;span&gt;的好处，&lt;/span&gt;ajax&lt;span&gt;框架&lt;/span&gt;jquery&lt;span&gt;渲染页面效果和相关的强大的第三方类库，&lt;/span&gt;dwr&lt;span&gt;如何和后台服务进行数据传输，以及页面逻辑控制等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;JSON&lt;span&gt;高级应用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;Java&lt;span&gt;使用&lt;/span&gt;json&lt;span&gt;支持的方式对字符串进行封装和解析，实现页面和&lt;/span&gt;java&lt;span&gt;后台服务的数据通信。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;Fckeditor&lt;span&gt;编辑器&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;FCKEditor&lt;span&gt;在线编辑器技术、配置、处理图片和文件上传。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;javaMail&lt;span&gt;技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;了解域名解析与MX&lt;span&gt;记录、电子邮件工作原理、邮件传输协议：&lt;/span&gt;SMTP&lt;span&gt;、&lt;/span&gt;POP3&lt;span&gt;、&lt;/span&gt;IMAP&lt;span&gt;、邮件组织结构：&lt;/span&gt;RFC822&lt;span&gt;邮件格式、&lt;/span&gt;MIME&lt;span&gt;协议、邮件编码、复合邮件结构分析、&lt;/span&gt;JavaMail API&lt;span&gt;及其体系结构、编程创建邮件内容：简单邮件内容、包含内嵌图片的复杂邮件、包含内嵌图片和附件的复杂邮件。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;JfreeChart&lt;span&gt;报表&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;统计报表；图表处理。&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;BBS&lt;span&gt;项目实战&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;采用Jquery+dwr+jsp+servlet+Fckeditor+JfreeChart+tomcat+jdbc(oracle)&amp;nbsp;&lt;span&gt;完成&lt;/span&gt;BBS&lt;span&gt;项目的实战。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;实战价值&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;学完此课程你至少已经是拥有近1&lt;span&gt;年开发经验的程序员了，但是你不应该满足现状，下面的课程会更加吸引你！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;br /&gt;\r\n&lt;table cellspacing=&quot;0&quot; class=&quot;t_table&quot; bgcolor=&quot;rgb(255, 255, 255)&quot; style=&quot;font-size:12px;border:1px solid #999999;color:#000000;font-family:宋体, Arial, Helvetica, san-serif;width:704px;&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;第五经典阶段&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;技术名称&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;技术内容&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td rowspan=&quot;7&quot; width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;web&lt;span&gt;主流框架技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n&lt;span&gt;(&lt;span&gt;项目实战&lt;/span&gt;)&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;struts2.x&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;struts2&lt;span&gt;框架的工作原理和架构分析，&lt;/span&gt;struts-default.xml&lt;span&gt;与&lt;/span&gt;default.properties&lt;span&gt;文件的作用，&lt;/span&gt;struts&lt;span&gt;。&lt;/span&gt;Xml&lt;span&gt;中引入多个配置文件。&lt;/span&gt;OGNL&lt;span&gt;表达式、&lt;/span&gt;Struts2 UI&lt;span&gt;和非&lt;/span&gt;UI&lt;span&gt;标签、输入校验、使用通配符定义&lt;/span&gt;action&lt;span&gt;、动态方法调用、多文件上传、自定义类型转换器、为&lt;/span&gt;Action&lt;span&gt;的属性注入值、自定义拦截器、异常处理、使用&lt;/span&gt;struts2&lt;span&gt;实现的&lt;/span&gt;CRUD&lt;span&gt;操作的案例。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;hibernate3.x&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;Hibernate&lt;span&gt;应用开发基础；&amp;nbsp;&lt;/span&gt;ORM&lt;span&gt;基础理论； 关系映射技术； 性能调优技术； 性能优化 一级缓存 二级缓存 查询缓存 事务与并发 悲观锁、乐观锁。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;spring3.x&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;Spring IoC&lt;span&gt;技术；&amp;nbsp;&lt;/span&gt;Spring AOP&lt;span&gt;技术；&amp;nbsp;&lt;/span&gt;Spring&amp;nbsp;&lt;span&gt;声明事务管理；&amp;nbsp;&lt;/span&gt;Spring&amp;nbsp;&lt;span&gt;常用功能说明，&lt;/span&gt;spring3.0&lt;span&gt;的新特性，&amp;nbsp;&lt;/span&gt;Spring&lt;span&gt;整合&lt;/span&gt;struts2&lt;span&gt;和&lt;/span&gt;hibernate3&lt;span&gt;的运用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;Log4j&lt;span&gt;和&lt;/span&gt;Junit&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;Logging API&lt;span&gt;；&amp;nbsp;&lt;/span&gt;JUnit&lt;span&gt;单元测试技术； 压力测试技术：&lt;/span&gt;badboy&amp;nbsp;&lt;span&gt;进行测试计划跟踪获取以及&lt;/span&gt;JMeter&lt;span&gt;压力测试。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;在线支付技术&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;完成支付宝的支付接口的在线支付功能。&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;电子商务网实战&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;采用spring3+hibernate3+struts2+jquery+dwr+FckEditor+tomcat&amp;nbsp;&lt;span&gt;完成电子商务网站实战开发。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;实战价值&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;项目实战价值完全高标准的高要求的迎合企业的需求，学完此课程，全部消化了，你已经就是一个地地道道的高级程序员，已经为你的职业生涯铺平了道路，你还等什么，向着高薪冲刺吧！&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;br /&gt;\r\n&lt;table cellspacing=&quot;0&quot; class=&quot;t_table&quot; bgcolor=&quot;rgb(255, 255, 255)&quot; style=&quot;font-size:12px;border:1px solid #999999;color:#000000;font-family:宋体, Arial, Helvetica, san-serif;width:704px;&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;第六进阶阶段&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;技术名称&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;技术内容&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td rowspan=&quot;10&quot; width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;web&lt;span&gt;高级进阶&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n&lt;span&gt;(&lt;span&gt;项目实战&lt;/span&gt;)&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;openJpa&lt;span&gt;技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;JPA&lt;span&gt;介绍及开发环境搭建、单表实体映射、一对多&lt;/span&gt;/&lt;span&gt;多对一、一对一、多对多关联、实体继承、复合主键、&lt;/span&gt;JPQL&lt;span&gt;语句、&lt;/span&gt;EntityManager API&lt;span&gt;、事务管理，了解一下&lt;/span&gt;jpa2.0&lt;span&gt;的新特性以及应用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;lucene&lt;span&gt;搜索引擎&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;了解全文搜索原理、全文搜索引擎、什么是OSEM&lt;span&gt;、&lt;/span&gt;OSEM&lt;span&gt;框架&lt;/span&gt;Compass&lt;span&gt;、基于使用&lt;/span&gt;Lucene&lt;span&gt;使用&lt;/span&gt;Compass&lt;span&gt;实现全文增量型索引创建和搜索、探索&lt;/span&gt;Lucene 3.0&lt;span&gt;以及&lt;/span&gt;API&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;电子商务网重构&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;此项目采用了Lucene+compass+openJpa+&lt;span&gt;上一版电子商务网站的技术进行重构。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;实战价值&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;此项目的实战价值是前所未有的超值，已经超越了企业的实际要求，你已经是企业的抢手人才，一旦进入企业，便让你立于不败之地，轻松成为公司的技术骨干和精英，技术已经改变了你一生！&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;Excel/PDF&lt;span&gt;文档处理技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;java&lt;span&gt;对&lt;/span&gt;excel&lt;span&gt;和&lt;/span&gt;pdf&lt;span&gt;文档分别利用&lt;/span&gt;poi&lt;span&gt;和&lt;/span&gt;itext&lt;span&gt;来进行解析和生成。此技术在企业级系统的报表中经常使用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;OA&lt;span&gt;工作流技术&lt;/span&gt;JBPM&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;工作流是什么、JBPM&lt;span&gt;介绍、&lt;/span&gt;JBPM&lt;span&gt;的主要用法、各类节点的用法、任务各种分派方式、&lt;/span&gt;JBPM&lt;span&gt;的整体架构原理、工作流定义模型分析、运行期工作流实例模型分析、数据库表模型分析、流程定义管理、流程实例监控、对&lt;/span&gt;JBPM&lt;span&gt;的相关接口进行封装，构建自己的工作流应用平台等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;WebService&lt;span&gt;技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;WebService&lt;span&gt;技术原理、&lt;/span&gt;WebService&lt;span&gt;技术的应用、&lt;/span&gt;Soap&lt;span&gt;服务的创建与管理、&lt;/span&gt;WSDL&lt;span&gt;描述文档规范、&lt;/span&gt;UDDI&amp;nbsp;&lt;span&gt;注册中心运行原理&lt;/span&gt;;&lt;span&gt;使用&lt;/span&gt;Axis&lt;span&gt;和&lt;/span&gt;Xfire&lt;span&gt;创建&lt;/span&gt;WEB&lt;span&gt;服务、&lt;/span&gt;Webservice&lt;span&gt;客户端的编写、使用&lt;/span&gt;TCPMonitor&lt;span&gt;监听&lt;/span&gt;SOAP&lt;span&gt;协议、异构平台的整合。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;Linux&lt;span&gt;技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;Linux&amp;nbsp;&lt;span&gt;系统安装，卸载、&lt;/span&gt;linux&amp;nbsp;&lt;span&gt;使用的核心思想、&lt;/span&gt;linux&lt;span&gt;下的用户管理，文件管理&lt;/span&gt;,&lt;span&gt;系统管理、程序的安装，使用，卸载。&lt;/span&gt;linux&lt;span&gt;下作为&lt;/span&gt;server&lt;span&gt;的基本应用：&lt;/span&gt;web&lt;span&gt;服务器，&lt;/span&gt;j2ee&lt;span&gt;服务器，&lt;/span&gt;ftp&lt;span&gt;服务器的安装和项目的部署。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;CRM&lt;span&gt;项目实战&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;此项目能了解和熟悉客户关系管理的基本流程以及功能的实现，采用上面几个阶段学到的主流框架实现，同时加入了JBPM&lt;span&gt;的技术。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;实战价值&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;学完这个系统会让你轻松进入企业级的大型项目的开发，倍感得心应手。完备的知识体系和最前沿的开发技术，带给你的将是在精神上不同目光的瞻望和物质上高薪资回报的喜悦，带你进入人生的新的转折点和起点！&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;br /&gt;\r\n&lt;table cellspacing=&quot;0&quot; class=&quot;t_table&quot; bgcolor=&quot;rgb(255, 255, 255)&quot; style=&quot;font-size:12px;border:1px solid #999999;color:#000000;font-family:宋体, Arial, Helvetica, san-serif;width:704px;&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;115&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;第七架构阶段&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;技术名称&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;485&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;技术内容&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td rowspan=&quot;7&quot; width=&quot;115&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;大型高并发网站优化方案&lt;/span&gt;&lt;br /&gt;\r\n&lt;span&gt;(&lt;span&gt;项目实战&lt;/span&gt;)&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;如何构建一个高性能网站详解&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;485&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;什么样的网站需要高性能，高性能的指标体系，构建高性能网站需要做哪些工作，注意哪些细节。&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;SSI&lt;span&gt;技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;485&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;什么是SSI&lt;span&gt;，使用他有什么好处，什么样的系统才使用&lt;/span&gt;SSI&lt;span&gt;，&lt;/span&gt;SSI&lt;span&gt;技术详解和使用，应用到项目中。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;生成静态页技术&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;485&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;什么是静态页，为什么需要静态页以及带来的好处，生成静态页的模版技术Velocity&lt;span&gt;和&lt;/span&gt;Freemark&lt;span&gt;，生成静态页的访问规则等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;缓存技术&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;485&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;为什么使用缓存技术，oscache&lt;span&gt;缓存技术的介绍和使用，&lt;/span&gt;memcached&lt;span&gt;缓存技术的介绍和使用、两者缓存技术的比较和如何去使用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;经典web&lt;span&gt;服务器&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;485&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;什么是web&lt;span&gt;服务器，什么是&lt;/span&gt;javaweb&lt;span&gt;服务器，他们存在什么关系，当前技术主流中常用的&lt;/span&gt;web&lt;span&gt;服务器有哪些，&amp;nbsp;&lt;/span&gt;web&lt;span&gt;服务器&lt;/span&gt;apache&lt;span&gt;和&lt;/span&gt;nginx&lt;span&gt;的应用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;nginx&lt;span&gt;架构实战&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;485&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;&lt;span&gt;什么是反向代理，负载均衡以及集群，在nginx&lt;span&gt;中如何实现这些高性能的系统架构。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;实战价值&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;485&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;span&gt;此课程已经将你领入了技术经理和主管以及架构师的门槛了，稍微用心学习加上实战你就是技术牛人了，薪水非常高，同时很快你就是公司的技术中层管理者，你的人生就此又一次的发生巨大的转折！&lt;/span&gt;&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;br /&gt;\r\n&lt;table cellspacing=&quot;0&quot; class=&quot;t_table&quot; bgcolor=&quot;rgb(255, 255, 255)&quot; style=&quot;font-size:12px;border:1px solid #999999;color:#000000;font-family:宋体, Arial, Helvetica, san-serif;width:704px;&quot;&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;第八特色阶段&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;100&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;技术名称&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n			&lt;/td&gt;\r\n			&lt;td width=&quot;400&quot; style=&quot;font-size:12px;border:1px solid #999999;&quot;&gt;\r\n				&lt;p align=&quot;center&quot;&gt;\r\n					&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;技术内容&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;br /&gt;\r\n			&lt;/td&gt;\r\n		&lt;/tr&gt;\r\n	&lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;span style=&quot;font-family:宋体, Arial, Helvetica, san-serif;font-size:12px;line-height:22.4px;background-color:#FFFFFF;&quot;&gt;……这部分大家想到了可以给我补充。&lt;/span&gt;', '1', '0', '1488350098', '小兔', null, '0', '11');
INSERT INTO `article` VALUES ('44', 'Eclipse导入外部项目无法识别为web项目并且无法在部署到tomcat下解决方法', 'Eclipse,部署,tomcat', '&lt;div style=&quot;color:#362E2B;font-family:Arial;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n	﻿﻿1、进入项目根目录，找到.project文件，打开。\r\n&lt;/div&gt;\r\n&lt;div style=&quot;color:#362E2B;font-family:Arial;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;br /&gt;\r\n&lt;/div&gt;\r\n&lt;p style=&quot;color:#362E2B;font-family:Arial;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n	2、找到&amp;lt;natures&amp;gt;&amp;lt;/natures&amp;gt;代码段，在标签中加入如下标签内容并保存：\r\n&lt;/p&gt;\r\n&lt;div style=&quot;color:#362E2B;font-family:Arial;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n&lt;pre&gt;&amp;nbsp;&amp;nbsp;&amp;lt;nature&amp;gt;org.eclipse.jem.workbench.JavaEMFNature&amp;lt;/nature&amp;gt;\r\n&amp;nbsp;&amp;nbsp;&amp;lt;nature&amp;gt;org.eclipse.wst.common.modulecore.ModuleCoreNature&amp;lt;/nature&amp;gt;\r\n&amp;nbsp;&amp;nbsp;&amp;lt;nature&amp;gt;com.genuitec.eclipse.ast.deploy.core.deploymentnature&amp;lt;/nature&amp;gt;\r\n&amp;nbsp;&amp;nbsp;&amp;lt;nature&amp;gt;com.genuitec.eclipse.j2eedt.core.webnature&amp;lt;/nature&amp;gt;\r\n&amp;nbsp;&amp;nbsp;&amp;lt;nature&amp;gt;org.eclipse.jdt.core.javanature&amp;lt;/nature&amp;gt;\r\n&amp;nbsp;&amp;nbsp;&amp;lt;nature&amp;gt;org.eclipse.wst.jsdt.core.jsNature&amp;lt;/nature&amp;gt;\r\n&amp;nbsp;&amp;nbsp;&amp;lt;nature&amp;gt;org.eclipse.wst.common.project.facet.core.nature&amp;lt;/nature&amp;gt;&lt;/pre&gt;\r\n&lt;pre&gt;&lt;span style=&quot;color:#800000;&quot;&gt; &lt;/span&gt;&lt;/pre&gt;\r\n&lt;/div&gt;\r\n&lt;p style=&quot;color:#362E2B;font-family:Arial;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n	3、删除.setting文件夹下的文件，用eclipse新建一个Web项目并从新建的项目的.setting文件下拷贝以下文件\r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#362E2B;font-family:Arial;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span style=&quot;color:#990000;&quot;&gt;.jsdtscope&amp;nbsp;&lt;br /&gt;\r\norg.eclipse.jst.common.project.facet.core.prefs&amp;nbsp;&lt;br /&gt;\r\norg.eclipse.wst.common.component&amp;nbsp;&lt;br /&gt;\r\norg.eclipse.wst.common.project.facet.core.xml&amp;nbsp;&lt;br /&gt;\r\norg.eclipse.wst.jsdt.ui.superType.&lt;a href=&quot;http://lib.csdn.net/base/docker&quot; class=&quot;replace_word&quot; target=&quot;_blank&quot;&gt;Container&lt;/a&gt;&amp;nbsp;&lt;br /&gt;\r\norg.eclipse.wst.jsdt.ui.superType.name&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#362E2B;font-family:Arial;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;span style=&quot;color:#990000;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#990000;&quot;&gt;&lt;br /&gt;\r\n&lt;/span&gt; \r\n&lt;/p&gt;\r\n&lt;p style=&quot;color:#362E2B;font-family:Arial;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n	4.修改&lt;span style=&quot;color:#990000;&quot;&gt;org.eclipse.wst.common.component&lt;/span&gt;中项目名称相关的内容\r\n&lt;/p&gt;\r\n&lt;div style=&quot;color:#362E2B;font-family:Arial;font-size:14px;background-color:#FFFFFF;&quot;&gt;\r\n	&lt;div&gt;\r\n		&lt;div&gt;\r\n			&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;lt;project-modules id=&quot;moduleCoreId&quot; project-version=&quot;1.5.0&quot;&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;wb-module deploy-name=&quot;&lt;span style=&quot;color:#3333FF;&quot;&gt;baseproject&lt;/span&gt;&quot;&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;wb-resource deploy-path=&quot;/&quot; source-path=&quot;/&lt;span style=&quot;color:#3333FF;&quot;&gt;WebRoot&lt;/span&gt;&quot; tag=&quot;defaultRootSource&quot;/&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;wb-resource deploy-path=&quot;/WEB-INF/classes&quot; source-path=&quot;/src&quot;/&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;property name=&quot;context-root&quot; value=&quot;&lt;span style=&quot;color:#3333FF;&quot;&gt;baseproject&lt;/span&gt;&quot;/&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;property name=&quot;java-output-path&quot; value=&quot;/&lt;span style=&quot;color:#3333FF;&quot;&gt;baseproject&lt;/span&gt;/build/classes&quot;/&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/wb-module&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;lt;/project-modules&amp;gt;\r\n		&lt;/div&gt;\r\n	&lt;/div&gt;\r\n	&lt;div&gt;\r\n		&lt;br /&gt;\r\n	&lt;/div&gt;\r\n	&lt;div&gt;\r\n		将上面所有蓝色字体部分替换成你自己项目中的名称，deploy-name值相同的地方改为你的项目名，同时把source-path改为/WebRoot(如果你的项目目录是WebContent就不用改了)\r\n	&lt;/div&gt;\r\n	&lt;div&gt;\r\n		&lt;br /&gt;\r\n	&lt;/div&gt;\r\n	&lt;div&gt;\r\n		5.修改&lt;span style=&quot;color:#990000;&quot;&gt;.jsdtscope&lt;/span&gt;中项目名称相关的内容&lt;br /&gt;\r\n	&lt;/div&gt;\r\n	&lt;div&gt;\r\n		&lt;div&gt;\r\n			&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;lt;classpath&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;classpathentry kind=&quot;src&quot; path=&quot;&lt;span style=&quot;color:#3333FF;&quot;&gt;WebRoot&lt;/span&gt;&quot;/&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;classpathentry kind=&quot;con&quot; path=&quot;org.eclipse.wst.jsdt.launching.JRE_CONTAINER&quot;/&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;classpathentry kind=&quot;con&quot; path=&quot;org.eclipse.wst.jsdt.launching.WebProject&quot;&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;attributes&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;attribute name=&quot;hide&quot; value=&quot;true&quot;/&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/attributes&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/classpathentry&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;classpathentry kind=&quot;con&quot; path=&quot;org.eclipse.wst.jsdt.launching.baseBrowserLibrary&quot;/&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;classpathentry kind=&quot;output&quot; path=&quot;&quot;/&amp;gt;\r\n		&lt;/div&gt;\r\n		&lt;div&gt;\r\n			&amp;lt;/classpath&amp;gt;\r\n		&lt;/div&gt;\r\n	&lt;/div&gt;\r\n	&lt;div&gt;\r\n		&lt;br /&gt;\r\n	&lt;/div&gt;\r\n	&lt;div&gt;\r\n		和第4步一样，将蓝色字体部分修改为项目中的名称 (如果你的项目目录是WebContent就不用改了)\r\n	&lt;/div&gt;\r\n	&lt;div&gt;\r\n		&lt;br /&gt;\r\n	&lt;/div&gt;\r\n	&lt;div&gt;\r\n		&lt;p&gt;\r\n			6、在eclipse的项目上点右键，刷新项目，就会发现项目变成了web项目,然后添加到tomcat中就会发现tomcat可以识别我们的项目了。\r\n		&lt;/p&gt;\r\n	&lt;/div&gt;\r\n&lt;/div&gt;', '1', '0', '1488348187', '小兔', null, '0', '8');
INSERT INTO `article` VALUES ('45', 'PHP面试总结-上篇', 'PHP面试总结', '&lt;h1 class=&quot;postTitle&quot; style=&quot;font-size:14px;color:#999999;font-family:verdana, Arial, Helvetica, sans-serif;background-color:;&quot;&gt;\r\n	&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/hanqishihu/p/5560767.html&quot;&gt;PHP面试总结&lt;/a&gt; \r\n&lt;/h1&gt;\r\n&lt;div class=&quot;clear&quot; style=&quot;margin:0px;color:#999999;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:#10100F;&quot;&gt;\r\n&lt;/div&gt;\r\n&lt;div class=&quot;postBody&quot; style=&quot;margin:0px;color:#999999;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:;&quot;&gt;\r\n	&lt;div id=&quot;cnblogs_post_body&quot; style=&quot;margin:0px 0px 20px;&quot;&gt;\r\n		&lt;p&gt;\r\n			&lt;strong&gt;------------------------------------PHP部分-------------------------------------&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			&lt;strong&gt;这是面试我所遇到的大部分的知识点，供大家参考，没有写答案，大家自己可以查查，后续我会持续更新&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&lt;strong&gt;PHP基础&lt;/strong&gt; \r\n		&lt;/div&gt;\r\n		&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n			&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n				&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/uDreIxNPgAM1FKV.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n			&lt;/div&gt;\r\n			&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n				&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/lcyIHGaA8XlYYNz.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n			&lt;/div&gt;\r\n&lt;pre&gt;1：变量的传值与引用。\r\n2：变量的类型转换和判断类型方法。\r\n3：php运算符优先级，一般是写出运算符的运算结果。\r\n4：PHP中函数传参，闭包，判断输出的echo，print是不是函数等。\r\n5：PHP数组，数组函数，数组遍历，预定义数组（&lt;strong&gt;面试必出&lt;/strong&gt;）。\r\n6：PHP面向对象，魔术方法，封装、继承、多态。设计模式，包括（单利、工厂、迭代器、装饰、命令、策略）。\r\n7：正则表达式，每个标号含义，邮箱、网址、标签匹配，正则函数（&lt;strong&gt;面试必出&lt;/strong&gt;）。\r\n8：PHP异常处理（级别，错误日志，控制错误输出）。\r\n9：PHP时间函数，日期计算函数。\r\n10：文件系统，记录日志、目录、文件的遍历、上传、多方法得到文件扩展名、文件引用方式、引用函数区别。（&lt;strong&gt;面试必出&lt;/strong&gt;）。\r\n11：会话控制，主要说原理。session与cookie在分布式应用中出现问题的解决方案。\r\n12：PHP模板引擎，常用模板引擎特点，MVC好与不好的地方。\r\n13：PHP安全处理，过滤函数。\r\n14：XML的使用。\r\n15：PHP字符串的处理，包括转义（安全）、编码、截取、定位、与数组间的转换、处理函数等。（&lt;strong&gt;面试必出&lt;/strong&gt;）。\r\n16：Socket编程，各种协议，head头，curl参数含义。\r\n17：网络状态码含义，常用（204，304, 404, 504，502）。\r\n18：Apache配置文件，PHP配置文件，各个含义字段的含义。\r\n19：网络各种攻击的名词含义（SQL攻击、XSS、CSRF、DDos），防止措施。\r\n20：url的处理函数，得到url指定的部分。&lt;/pre&gt;\r\n			&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n				&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/008HcB6pRbq48we.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n			&lt;/div&gt;\r\n			&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n				&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/O7GCfOJGOB310sD.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n			&lt;/div&gt;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&amp;nbsp;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&lt;strong&gt;Mysql基础&lt;/strong&gt; \r\n		&lt;/div&gt;\r\n		&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n			&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n				&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/PIAJQdKLS2n3wgu.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n			&lt;/div&gt;\r\n			&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n				&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/1vS8xym0943XsYF.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n			&lt;/div&gt;\r\n&lt;pre&gt;1：基础sql语句书写（一般让写关联和子查询语句）\r\n2：索引的创建，优缺点，最左原则\r\n3：存储引擎，常用的几个，优缺点，差别，原理（&lt;strong&gt;面试必出&lt;/strong&gt;）\r\n4：sql注入的处理方法\r\n5：mysql处理函数（PHP中封装的）\r\n6：PDO的使用方法，为什么使用\r\n7：mysql的优化，表拆分等\r\n8：事务处理，sql语句的处理效率等\r\n9：数据表字段的类型，同类型间的区别，改如何选取，int(10)与int(11)的区别等。\r\n10：数据库索引使用的那种数据结构，画出数据结构&lt;/pre&gt;\r\n			&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n				&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/weOxn40ygiRTgEz.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n			&lt;/div&gt;\r\n			&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n				&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/15kk988g5284qQt.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n			&lt;/div&gt;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&amp;nbsp;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&lt;strong&gt;Linux&lt;/strong&gt; \r\n		&lt;/div&gt;\r\n		&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n&lt;pre&gt;1：常用命令的使用，vim编辑器的使用。\r\n2：进程，cpu等信息的查看命令。\r\n3：文件内查看命令（主要涉及统计信息）。\r\n4：Shell的使用，命令操作。&lt;/pre&gt;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&amp;nbsp;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&lt;strong&gt;NoSql&lt;/strong&gt; \r\n		&lt;/div&gt;\r\n		&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n&lt;pre&gt;1：Redis的应用场景，结合微博业务说出他的具体应用。\r\n2：Redis与MC支持数据的不同点，两者都支持哪些数据结构的存储，写越多越好。\r\n3：Redis持久化存储的原理，与Mysql的应用区别。怎样保持持久化数据与内存数据同步的关系（Redis同步机制）\r\n4：Redis与MC在并发状态下的性能比较。\r\n5：MC的内存管理机制，当一个数据需要存储的时候怎样分配内存空间\r\n6：Redis的内存管理机制，与MC有哪些不同点。&lt;/pre&gt;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&amp;nbsp;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&lt;div style=&quot;margin:0px;&quot;&gt;\r\n				&lt;strong&gt;开发环境&lt;/strong&gt; \r\n			&lt;/div&gt;\r\n			&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n&lt;pre&gt;1：PHP7中的新特性与废弃的特性\r\n2：为什么要使用PHP7，PHP7快在哪里&lt;/pre&gt;\r\n			&lt;/div&gt;\r\n			&lt;div style=&quot;margin:0px;&quot;&gt;\r\n				&amp;nbsp;\r\n			&lt;/div&gt;\r\n			&lt;div style=&quot;margin:0px;&quot;&gt;\r\n				&lt;strong&gt;版本控制&lt;/strong&gt; \r\n			&lt;/div&gt;\r\n			&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n&lt;pre&gt;1：git的使用命令，例如：写出版本回退命令。\r\n2：git与svn的区别。\r\n3：如何进行多分支开发，包括多人开发协同，分段测试，上线。&lt;/pre&gt;\r\n			&lt;/div&gt;\r\n		&lt;/div&gt;\r\n		&lt;p&gt;\r\n			&lt;strong&gt;&amp;nbsp;下面给大家附上一张知识点导图，帮助大家记忆：&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			&lt;img title=&quot;PHP-程序设计思维导图&quot; src=&quot;/Public/files/images/2017/03/08/wCYBzC5P4CyIV4N.png&quot; alt=&quot;PHP-程序设计思维导图&quot; width=&quot;760&quot; height=&quot;767&quot; /&gt; \r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			&amp;nbsp;\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			&lt;strong&gt;php部分我是按照面试常问的问题总结的，下面的问题在面试中出场率很高。问题比较基础&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			&lt;strong&gt;1、HTTP Keep-Alive的作用&lt;br /&gt;\r\n&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			作用：Keep-Alive：使客户端到服务器端的连接持续有效，当出现对服务器的后继请求时，Keep-Alive功能避免了建立或者重新建立连接。Web服务器，基本上都支持HTTP&amp;nbsp;Keep-Alive。\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			缺点：对于提供静态内容的网站来说，这个功能通常很有用。但是，对于负担较重的网站来说，虽然为客户保留打开的连 接有一定的好处，但它同样影响了性能，因为在处理暂停期间，本来可以释放的资源仍旧被占用。当Web服务器和应用服务器在同一台机器上运行时，Keep-&amp;nbsp;Alive功能对资源利用的影响尤其突出。\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			&lt;span class=&quot;short_url_message&quot;&gt;&lt;span class=&quot;hilite1&quot;&gt;&lt;span class=&quot;hilite2&quot;&gt;&lt;span class=&quot;hilite1&quot;&gt;&lt;span class=&quot;hilite2&quot;&gt;&lt;span class=&quot;hilite1&quot;&gt;&lt;span class=&quot;hilite2&quot;&gt;&lt;span class=&quot;hilite1&quot;&gt;&lt;span class=&quot;hilite2&quot;&gt;&lt;span class=&quot;hilite1&quot;&gt;&lt;span class=&quot;hilite2&quot;&gt;&lt;span class=&quot;hilite1&quot;&gt;解决：Keep-&lt;span class=&quot;hilite2&quot;&gt;Alive: timeout=5, max=100&lt;br /&gt;\r\ntimeout：过期时间5秒（对应httpd.conf里的参数是：KeepAliveTimeout），max是最多一百次请求，强制断掉连接。就是在timeout时间内又有新的连接过来，同时max会自动减1，直到为0，强制断掉。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			&amp;nbsp;\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			&lt;strong&gt;数组相关----------|&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&lt;div style=&quot;margin:0px;&quot;&gt;\r\n				&lt;div style=&quot;margin:0px;&quot;&gt;\r\n					&lt;div style=&quot;margin:0px;&quot;&gt;\r\n						&lt;strong&gt;1、php数组函数常见的那些? (array_merge、in_array的作用)&lt;/strong&gt; \r\n					&lt;/div&gt;\r\n					&lt;div style=&quot;margin:0px;&quot;&gt;\r\n						&lt;strong&gt;2、PHP中以array_开头的数组函数有哪些，并说出使用方法（至少6个）&lt;/strong&gt; \r\n					&lt;/div&gt;\r\n					&lt;div style=&quot;margin:0px;&quot;&gt;\r\n						&amp;nbsp;\r\n					&lt;/div&gt;\r\n					&lt;div style=&quot;margin:0px;&quot;&gt;\r\n						&lt;div style=&quot;margin:0px;&quot;&gt;\r\n							一、数组操作的基本函数\r\n						&lt;/div&gt;\r\n					&lt;/div&gt;\r\n				&lt;/div&gt;\r\n			&lt;/div&gt;\r\n			&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n				&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n					&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/Kwjv6dU9KqXiKEz.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n				&lt;/div&gt;\r\n				&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n					&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/918S8rVX0MZvUlQ.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n				&lt;/div&gt;\r\n&lt;pre&gt;1 array_values($arr);       //获得数组的值\r\n2 array_keys($arr);         //获得数组的键名\r\n3 array_flip($arr);         //数组中的值与键名互换（如果有重复前面的会被后面的覆盖）\r\n4 array_search(\'PHP\',$arr); //检索给定的值，加true则是严格类型检查\r\n5 array_reverse($arr);      //将数组中的元素翻转\r\n6 in_array(&quot;apple&quot;, $arr);  //在数组中检索apple\r\n7 array_key_exists(&quot;apple&quot;, $arr); // 检索给定的键名是否存在数组中\r\n8 array_count_values($arr);        // 统计数组中所有值出现的次数&lt;/pre&gt;\r\n				&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n					&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/8wCHh9k84vir3tw.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n				&lt;/div&gt;\r\n				&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n					&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/TnnL5f8R814Slp9.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n				&lt;/div&gt;\r\n			&lt;/div&gt;\r\n			&lt;div style=&quot;margin:0px;&quot;&gt;\r\n				二、数组的分段和填充\r\n				&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n&lt;pre&gt;1 array_slice($arr, 0, 3);    //将数组中的一段取出，此函数忽略键名（数组的分段）\r\n2 array_splice($arr, 0, 3，array(&quot;black&quot;,&quot;maroon&quot;));    //将数组中的一段取出，返回的序列从原数组中删除\r\n3 array_chunk($arr, 3, TRUE);   //将一个数组分割成多个，TRUE为保留原数组的键名（分割多个数组）&lt;/pre&gt;\r\n				&lt;/div&gt;\r\n四、数组与栈，列队\r\n			&lt;/div&gt;\r\n			&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n&lt;pre&gt;1 array_push($arr, &quot;apple&quot;, &quot;pear&quot;);    //将一个或多个元素压入数组栈的末尾（入栈），返回入栈元素的个数\r\n2 array_pop($arr);    // 将数组栈的最后一个元素弹出（出栈）\r\n3 array_shift($arr);   //数组中第一个元素移出并返回（长度减1，其他元素向前移动一位，数字键名改为从零计数，文字键名不变）\r\n4 array_unshift($arr,&quot;a&quot;,array(1,2));  //在数组的开头插入一个或多个元素&lt;/pre&gt;\r\n			&lt;/div&gt;\r\n&lt;strong&gt;六、数组的排序&lt;/strong&gt; \r\n			&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n&lt;pre&gt;1 sort($arr);       //由小到大，忽略键名       \r\n2 rsort($arr);      //由大到小，忽略键名\r\n3 asort($arr);     //由小到大，保留键名       \r\n4 arsort($arr);    // 由大到小，保留键名\r\n5 ksort($arr);     //按照键名正序排序           \r\n6 krsort($arr);   // 按照键名逆序排序&lt;/pre&gt;\r\n			&lt;/div&gt;\r\n&lt;strong&gt;七、数组的计算&lt;/strong&gt; \r\n			&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n				&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n					&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/8Nq6UX46QyqygKi.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n				&lt;/div&gt;\r\n				&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n					&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/23WFeTk7adY9wAj.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n				&lt;/div&gt;\r\n&lt;pre&gt;1 array_sum($arr);   //对数组内部的所有元素做求和运算（数组元素的求和）\r\n2 array_merge($arr1, $arr2); //合并两个或多个（相同字符串键名，后面覆盖前面，相同的数字键名，后面的附加到后面）\r\n3  \r\n4 array_diff($arr1, $arr2);           //返回差集结果数组   array_diff_assoc($arr1, $arr2, $arr3);  //返回差集结果数组，键名也做比较\r\n5 array_intersect($arr1, $arr2);  //返回交集结果数组    array_intersect_assoc($arr1, $arr2);   //返回交集结果数组，键名也做比较 &lt;/pre&gt;\r\n				&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n					&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/q8x7xHuSDBGu1n6.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n				&lt;/div&gt;\r\n				&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n					&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/8FYvL8Ew1f0qaNq.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n				&lt;/div&gt;\r\n			&lt;/div&gt;\r\n&lt;strong&gt;八、其他的数组函数&lt;/strong&gt; \r\n			&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n&lt;pre&gt;1 array_unique($arr);   //移除数组中重复的值，新的数组中会保留原始的键名\r\n2 shuffle($arr);             // 将数组的顺序打乱&lt;/pre&gt;\r\n			&lt;/div&gt;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&amp;nbsp;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&lt;strong&gt;PHP中几个输出函数echo，print()，print_r()，sprintf()，var_dump()的区别&lt;/strong&gt; \r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&lt;p&gt;\r\n				1：echo：是语句不是函数，没有返回值，可输出多个变量值，不需要圆括号。不能输出数组和对象，只能打印简单类型(如int,string)。\r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				2：print：是语句不是函数，有返回值 1 ，只能输出一个变量，不需要圆括号。不能输出数组和对象，只能打印简单类型(如int,string)。\r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				3：print_r：是函数，可以打印复合类型，例如：stirng、int、float、array、object等，输出array时会用结构表示，而且可以通过print_r($str,true)来使print_r不输出而返回print_r处理后的值\r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				4：printf：是函数，把文字格式化以后输出（参看C语言）\r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				5：sprintf：是函数，跟printf相似，但不打印，而是返回格式化后的文字（该函数把格式化的字符串写写入一个变量中，而不是输出来），其 &amp;nbsp; &amp;nbsp;他的与printf一样。&amp;nbsp;\r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				例如：&amp;nbsp;&amp;nbsp;\r\n			&lt;/p&gt;\r\n			&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n&lt;pre&gt;1 $str = &quot;Hello&quot;;    \r\n2 $number = 123; \r\n3 $txt = sprintf(&quot;%s world. Day number %u&quot;,$str,$number)；\r\n4 //输出： Hello world. Day number 123 &lt;/pre&gt;\r\n			&lt;/div&gt;\r\n			&lt;p&gt;\r\n				6：var_dump()：函数，输出变量的内容、类型或字符串的内容、类型、长度。常用来调试。\r\n			&lt;/p&gt;\r\n			&lt;div style=&quot;margin:0px;&quot;&gt;\r\n				&lt;div style=&quot;margin:0px;&quot;&gt;\r\n					&lt;p&gt;\r\n						可以通过function_exists(\'函数名称\')进行测试\r\n					&lt;/p&gt;\r\n					&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n&lt;pre&gt;1 var_dump(function_exists(\'print\'));  //bool(false)\r\n2 \r\n3 var_dump(function_exists(\'echo\'));  //bool(false)\r\n4 \r\n5 var_dump(function_exists(\'print_r\')); //bool(true)&lt;/pre&gt;\r\n					&lt;/div&gt;\r\n					&lt;h2 style=&quot;font-size:21px;&quot;&gt;\r\n						&lt;strong&gt;不用新变量直接交换现有两个变量的值&lt;/strong&gt; \r\n					&lt;/h2&gt;\r\n					&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n						&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n							&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/K9i016FMoINu8D7.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n						&lt;/div&gt;\r\n						&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n							&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/ycdNXoH1b954P6E.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n						&lt;/div&gt;\r\n&lt;pre&gt; 1 1： \r\n 3     list($a, $b) = array($b, $a);\r\n 4 2： \r\n 5     $a = $a . $b;\r\n 5     $b = strlen( $b );\r\n 6     $b = substr( $a, 0, (strlen($a) – $b ) );\r\n 7     $a = substr( $a, strlen($b) );\r\n 8 \r\n 9 3:(必须用一个两个字符串都都不能出现的字符做为分隔符)\r\n10     $a = $b.\',\'.$a ;\r\n11     $a = explode(\',\', $a);\r\n12     $b = $a[1];\r\n13     $a = $a[0];\r\n14 \r\n15 4：这个是当两个数都是数字的时候:\r\n16     $a = $a + $b;\r\n17     $b = $a – $b;\r\n18     $a = $a – $b;\r\n19 \r\n20 5：借助数组\r\n21     $a = array($a,$b);\r\n22     $b = $a[0];\r\n23     $a = $a[1];&lt;/pre&gt;\r\n						&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n							&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/6g3dd05jcnrp8lt.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n						&lt;/div&gt;\r\n						&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n							&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/59V9miOt5qT5h82.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n						&lt;/div&gt;\r\n					&lt;/div&gt;\r\n					&lt;p id=&quot;47-php中heredoc&quot;&gt;\r\n						&lt;strong&gt;heredoc&lt;/strong&gt; \r\n					&lt;/p&gt;\r\n					&lt;p&gt;\r\n						Heredoc在正规的PHP文档中和技术书籍中一般没有详细讲述。他是一种Perl风格的字符串输出技术。使用heredoc技术可以实现界面与代码的准分离，比如phpwind模板。\r\n					&lt;/p&gt;\r\n					&lt;p&gt;\r\n						heredoc的语法是用”&amp;lt;&amp;lt;&amp;lt;”加上自己定义成对的标签，在标签范围內的文字视为一个字符串\r\n					&lt;/p&gt;\r\n					&lt;p&gt;\r\n						规则如下：\r\n					&lt;/p&gt;\r\n					&lt;p&gt;\r\n						1、以&lt;strong&gt;&amp;lt;&amp;lt;&amp;lt;End&lt;/strong&gt;开始标记开始，以End结束标记结束，&lt;strong&gt;结束标记必须顶头写，不能有缩进和空格，且在结束标记末尾要有分号&lt;/strong&gt;&amp;nbsp;。开始标记和开始标记相同，比如常用大写的EOT、EOD、EOF来表示，也可以使用其他标记，只要保证&lt;strong&gt;开始标记和结束标记不在正文中出现就行&lt;/strong&gt;。\r\n					&lt;/p&gt;\r\n					&lt;p&gt;\r\n						2、位于开始标记和结束标记之间的变量可以被正常解析，&lt;strong&gt;但是函数则不可以&lt;/strong&gt;。在heredoc中，变量不需要用连接符 . 或 , 来拼接，比如：\r\n					&lt;/p&gt;\r\n					&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n&lt;pre&gt;1 $a=2;\r\n2 $b= &amp;lt;&amp;lt;&amp;lt;EOF\r\n3 &quot;zyf&quot;$a\r\n4 &quot;zyf&quot;\r\n5 EOF;\r\n6 echo $b; //结果连同双引号一起输出：&quot;zyf&quot;2 &quot;zyf&quot;&lt;/pre&gt;\r\n					&lt;/div&gt;\r\n					&lt;p&gt;\r\n						&lt;span class=&quot;top11&quot;&gt;3、heredoc常用在输出包含大量HTML语法文档的时候。他要比传统的echo输出精炼很多，如下所示：&lt;/span&gt; \r\n					&lt;/p&gt;\r\n					&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n						&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n							&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/m35l5dB5Mdk9TIf.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n						&lt;/div&gt;\r\n						&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n							&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/CFEXfr6ub6au4IS.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n						&lt;/div&gt;\r\n&lt;pre&gt; 1 function getHtml()\r\n 2 {\r\n 3     echo &quot;&amp;lt;html&amp;gt;&quot;;\r\n 4     echo &quot;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Title&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&quot;;\r\n 5     echo &quot;&amp;lt;body&amp;gt;Content&amp;lt;/body&amp;gt;&quot;;\r\n 6     echo &quot;&amp;lt;/html&amp;gt;;\r\n 7 }\r\n 8 \r\n 9 function getHtml()\r\n10 {\r\n11 echo &amp;lt;&amp;lt;&amp;lt;EOT\r\n12       &amp;lt;html&amp;gt;\r\n13       &amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Title&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;\r\n14       &amp;lt;body&amp;gt;Content&amp;lt;/body&amp;gt;\r\n15       &amp;lt;/html&amp;gt;\r\n16 EOT;\r\n17 }&lt;/pre&gt;\r\n						&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n							&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/UulU6ix8fABP9UY.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n						&lt;/div&gt;\r\n						&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n							&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/9X4ek6WgtxbTi32.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n						&lt;/div&gt;\r\n					&lt;/div&gt;\r\n					&lt;p&gt;\r\n						&amp;nbsp;\r\n					&lt;/p&gt;\r\n					&lt;div style=&quot;margin:0px;&quot;&gt;\r\n						&lt;strong&gt;写个函数来解决多线程同时读写一个文件的问题。&lt;/strong&gt; \r\n					&lt;/div&gt;\r\n					&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n						&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n							&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/4oMd3jLwHqwJ5r4.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n						&lt;/div&gt;\r\n						&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n							&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/VRrpv1oI385ase9.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n						&lt;/div&gt;\r\n&lt;pre&gt; 1 &amp;lt;?php\r\n 2     $fp = fopen(&quot;/tmp/lock.txt&quot;,&quot;w+&quot;);\r\n 3     if(flock($fp, LOCK_EX)){// 进行排它型锁定\r\n 4         fwrite($fp,&quot;Write something heren&quot;);\r\n 5         flock($fp, LOCK_UN);// 释放锁定\r\n 6     }else{\r\n 7         echo &quot;Couldn\'t lock the file !&quot;;\r\n 8     }\r\n 9     fclose($fp);\r\n10 ?&amp;gt;&lt;/pre&gt;\r\n						&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n							&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/K5iX3h5K4D4RNx3.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n						&lt;/div&gt;\r\n						&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n							&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/hJPYyBqdKoBGPtk.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n						&lt;/div&gt;\r\n					&lt;/div&gt;\r\n					&lt;p&gt;\r\n						&amp;nbsp;\r\n					&lt;/p&gt;\r\n					&lt;p&gt;\r\n						&lt;strong&gt;禁掉cookie的session使用方案，&lt;strong&gt;设置session过期的方法，对应函数：&lt;/strong&gt;&lt;/strong&gt; \r\n					&lt;/p&gt;\r\n					&lt;div style=&quot;margin:0px;&quot;&gt;\r\n						&lt;div style=&quot;margin:0px;&quot;&gt;\r\n							&lt;div style=&quot;margin:0px;&quot;&gt;\r\n								&lt;div style=&quot;margin:0px;&quot;&gt;\r\n									&lt;div style=&quot;margin:0px;&quot;&gt;\r\n										通过 url 传值，把session id附加到url上（缺点：整个站点中不能有纯静态页面，因为纯静态页面session id 将无法继续传到下一页面）\r\n									&lt;/div&gt;\r\n									&lt;div style=&quot;margin:0px;&quot;&gt;\r\n										通过隐藏表单，把session id 放到表单的隐藏文本框中同表单一块提交过去（缺点：不适用&amp;lt;a&amp;gt;标签这种直接跳转的非表单的情况）\r\n									&lt;/div&gt;\r\n									&lt;div style=&quot;margin:0px;&quot;&gt;\r\n										直接配置php.ini文件,将php.ini文件里的session.use_trans_sid= 0设为1,（好像在win上不支持）\r\n									&lt;/div&gt;\r\n									&lt;div style=&quot;margin:0px;&quot;&gt;\r\n										用文件、数据库等形式保存Session ID，在跨页过程中手动调用\r\n									&lt;/div&gt;\r\n									&lt;div style=&quot;margin:0px;&quot;&gt;\r\n										&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n											&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n												&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/J8GsQF0MPuQGB39.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n											&lt;/div&gt;\r\n											&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n												&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/ABEQZ8SG52v78AQ.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n											&lt;/div&gt;\r\n&lt;pre&gt; 1 第一种  setcookie() 直接用setcookie设置session id的生命周期。\r\n 3     $lifetime=60; //保存1分钟 \r\n 4     session_start(); \r\n 5     setcookie(session_name(), session_id(), time()+$lifetime, &quot;/&quot;);\r\n 6 第二种  session_set_cookie_params()    \r\n 7     $lifetime=60;//保存1分钟\r\n 8     session_set_cookie_params($lifetime);\r\n 9     session_start();\r\n10     session_regenerate_id(true);\r\n11     其中session_regenerate_id();方法用于改变当前session_id的值，并保留session中数组的值。参数默认为 false,如果设置为true则改变session_id的值，并清空当前session数组。&lt;/pre&gt;\r\n											&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n												&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/JJJP80USdaCtgEN.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n											&lt;/div&gt;\r\n											&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n												&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/bFOfWe8ek805066.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n											&lt;/div&gt;\r\n										&lt;/div&gt;\r\n										&lt;p&gt;\r\n											&amp;nbsp;\r\n										&lt;/p&gt;\r\n										&lt;div style=&quot;margin:0px;&quot;&gt;\r\n											&lt;p&gt;\r\n												&lt;strong&gt;json格式数据有哪些特点&amp;nbsp;&lt;/strong&gt; \r\n											&lt;/p&gt;\r\n											&lt;p&gt;\r\n												&amp;nbsp; &amp;nbsp; JSON 一种轻量级的数据交换格式。它基于ECMAScript的一个子集。 JSON采用完全独立于语言的文本格式，但是也使用了类似于C语言家族的习惯（包括C、C++、C#、Java、JavaScript、Perl、 Python等）。这些特性使JSON成为理想的数据交换语言。 易于人阅读和编写，同时也易于机器解析和生成(网络传输速率)。\r\n											&lt;/p&gt;\r\n											&lt;p&gt;\r\n												JSON的结构基于下面两点\r\n											&lt;/p&gt;\r\n&lt;strong&gt;1. &quot;名称/值&quot;对的集合&lt;/strong&gt;&amp;nbsp;不同语言中，它被理解为对象(object)，记录(record)，结构(struct)，字典(dictionary)，哈希表(hash table)，键列表(keyed list)等&lt;br /&gt;\r\n&lt;strong&gt;2. 值的有序列表&lt;/strong&gt;&amp;nbsp;多数语言中被理解为数组(array)&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;br /&gt;\r\n&lt;/span&gt; \r\n										&lt;/div&gt;\r\n										&lt;div style=&quot;margin:0px;&quot;&gt;\r\n											&amp;nbsp;\r\n										&lt;/div&gt;\r\n										&lt;div style=&quot;margin:0px;&quot;&gt;\r\n											&lt;div style=&quot;margin:0px;&quot;&gt;\r\n												&lt;strong&gt;php获取文件内容的方法，对应的函数&lt;/strong&gt; \r\n											&lt;/div&gt;\r\n&lt;span class=&quot;Apple-converted-space&quot;&gt;1：file_get_contents得到文件的内容（可以以get和post的方式获取），整个文件读入一个字符串中&lt;/span&gt; \r\n											&lt;div style=&quot;margin:0px;&quot;&gt;\r\n												2：用fopen打开url, 以get方式获取内容（借助fgets()函数）\r\n											&lt;/div&gt;\r\n&lt;span class=&quot;Apple-converted-space&quot;&gt;3：用fsockopen函数打开url（可以以get和post的方式获取），以get方式获取完整的数据，包括header和body&lt;/span&gt; \r\n											&lt;div style=&quot;margin:0px;&quot;&gt;\r\n												4：使用curl库获取内容，使用curl库之前，需要查看php.ini，查看是否已经打开了curl扩展&lt;br /&gt;\r\n												&lt;div style=&quot;margin:0px;&quot;&gt;\r\n													&lt;div style=&quot;margin:0px;&quot;&gt;\r\n														&lt;div style=&quot;margin:0px;&quot;&gt;\r\n															&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																&amp;nbsp;\r\n															&lt;/div&gt;\r\n															&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																		&lt;strong&gt;php魔术方法与魔术常量&lt;/strong&gt; \r\n																	&lt;/div&gt;\r\n																&lt;/div&gt;\r\n&lt;strong&gt;方法：&lt;/strong&gt;__construct()，__destruct()。 &amp;nbsp;&amp;nbsp;&amp;nbsp;\r\n															&lt;/div&gt;\r\n															&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																方法重载：__call()，__callStatic()。\r\n																&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																	属性重载：__get()，__set()，__isset()，__unset()&amp;nbsp; //这四个只对类中私有受保护的成员属性有效\r\n																&lt;/div&gt;\r\n																&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																	__toString()，__autoload();\r\n																&lt;/div&gt;\r\n																&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																	_set_state()； //自 PHP 5.1.0 起当调用 var_export() 导出类时，此静态 方法会被调用。 本方法的唯一参数是一个数组。\r\n																&lt;/div&gt;\r\n																&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																	&amp;nbsp;\r\n																&lt;/div&gt;\r\n__clone(); &amp;nbsp; &amp;nbsp; &amp;nbsp; //通常用于对副本进行重新初始化，\r\n																&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																		说明：this指副本对象引用，that指原对象引用 等方法在 PHP 中被称为”魔术方法”。PHP 将所有以 __（两个下划线）开头的类方法保留为魔术方法。所以在定义类方法时，除了上述魔术方法，建议不要以 __ 为前缀。在命名自己的类方法时不能使用这些方法名，除非是想使用其魔术功能。\r\n																	&lt;/div&gt;\r\n																	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																		&amp;nbsp;\r\n																	&lt;/div&gt;\r\n																&lt;/div&gt;\r\n																&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																	常量：\r\n																&lt;/div&gt;\r\n																&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																	__LINK__ &amp;nbsp; &amp;nbsp;&amp;nbsp; //文件中的当前行号。\r\n																&lt;/div&gt;\r\n																&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																	__FILE__ &amp;nbsp; &amp;nbsp; &amp;nbsp; //文件的完整路径和文件名。如果用在被包含文件中，则返回被包含的文件名。\r\n																&lt;/div&gt;\r\n																&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																	__DIR__&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;//文件所在的目录。如果用在被包括文件中，则返回被包括的文件所在的目录，它等价于&amp;nbsp;dirname(__FILE__)。\r\n																&lt;/div&gt;\r\n																&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																	&amp;nbsp;\r\n																&lt;/div&gt;\r\n																&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																	__FUNCTION__ &amp;nbsp; &amp;nbsp; &amp;nbsp; //函数名称。自 PHP 5 起本常量返回该函数被定义时的名字（区分大小写）。在 PHP 4 中该值总是小写字母的。\r\n																&lt;/div&gt;\r\n																&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																	&amp;nbsp;__CLASS__&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //类的名称。自 PHP 5 起本常量返回该类被定义时的名字（区分大小写）。在 PHP 4 中该值总是小写字母的。\r\n																&lt;/div&gt;\r\n																&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																	&amp;nbsp;__METHOD__ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //类的方法名（PHP 5.0.0 新加）。返回该方法被定义时的名字（区分大小写）。\r\n																&lt;/div&gt;\r\n																&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																	&amp;nbsp;__NAMESPACE__ &amp;nbsp;&amp;nbsp;//当前命名空间的名称（大小写敏感）。这个常量是在编译时定义的（PHP 5.3.0 新增）\r\n																&lt;/div&gt;\r\n																&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																	&amp;nbsp;\r\n																&lt;/div&gt;\r\n																&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																	&lt;p&gt;\r\n																		&lt;strong&gt;PHP 如何获取客户端的IP地址，&lt;/strong&gt; \r\n																	&lt;/p&gt;\r\n																	&lt;p&gt;\r\n																		用$_SERVER获取的IP地址有什么问题？\r\n																	&lt;/p&gt;\r\n																	&lt;p&gt;\r\n																		$_SERVER[\'REMOTE_ADDR\'] ; &amp;nbsp; 通过全局数组来获得&amp;nbsp;\r\n																	&lt;/p&gt;\r\n																	&lt;p&gt;\r\n																		getenv(\'REMOTE_ADDR\') ; 通过环境变量来获得\r\n																	&lt;/p&gt;\r\n																	&lt;p&gt;\r\n																		当客户机使用代理的时候获取不到真实的IP地址\r\n																	&lt;/p&gt;\r\n																	&lt;p&gt;\r\n																		&amp;nbsp;\r\n																	&lt;/p&gt;\r\n																	&lt;p&gt;\r\n																		&lt;strong&gt;写一个函数，可以遍历文件夹下的所有文件和文件夹。&lt;/strong&gt; \r\n																	&lt;/p&gt;\r\n																	&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n																		&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n																			&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/hfgqv8HFrkft4My.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n																		&lt;/div&gt;\r\n																		&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n																			&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/ho9wTQ1rvBlt7CP.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n																		&lt;/div&gt;\r\n&lt;pre&gt; 1     function get_dir_info($path){\r\n 2           $handle = opendir($path);//打开目录返回句柄\r\n 3           while(($content = readdir($handle))!== false){\r\n 4                 $new_dir = $path . DIRECTORY_SEPARATOR . $content;\r\n 5                 if($content == \'..\' || $content == \'.\'){\r\n 6                        continue;\r\n 7                 }\r\n 8                 if(is_dir($new_dir)){\r\n 9                       echo &quot;&amp;lt;br&amp;gt;目录：&quot;.$new_dir . \'&amp;lt;br&amp;gt;\';\r\n10                       get_dir_info($new_dir);\r\n11                 }else{\r\n12                       echo &quot;文件：&quot;.$path.\':\'.$content .\'&amp;lt;br&amp;gt;\';\r\n13                 }\r\n14           }\r\n15       }\r\n16       get_dir_info($dir);&lt;/pre&gt;\r\n																		&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n																			&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/9jva0g67mqIRac4.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n																		&lt;/div&gt;\r\n																		&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n																			&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/ZKIT52aYKW0vFyy.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n																		&lt;/div&gt;\r\n																	&lt;/div&gt;\r\n																	&lt;p&gt;\r\n																		&amp;nbsp;\r\n																	&lt;/p&gt;\r\n																	&lt;p&gt;\r\n																		&lt;strong&gt;有mail.log的一个文档，内容为若干邮件地址，用’n’分隔换行&lt;/strong&gt;&lt;strong&gt;。挑选s&lt;/strong&gt;&lt;strong&gt;i&lt;/strong&gt;&lt;strong&gt;na.com的地址（包括从文件读取、过滤到列印出来）。&lt;/strong&gt; \r\n																	&lt;/p&gt;\r\n																	&lt;p&gt;\r\n																		思路1：用正则表达式（比较慢，效率地，不推荐用）\r\n																	&lt;/p&gt;\r\n																	&lt;p&gt;\r\n																		思路2：cat mail.log | grep sina.com\r\n																	&lt;/p&gt;\r\n																	&lt;p&gt;\r\n																		&amp;nbsp;\r\n																	&lt;/p&gt;\r\n																	&lt;p&gt;\r\n																		&lt;strong&gt;PHP缓存技术有哪些? tp是局部还是完全缓存?&lt;/strong&gt; \r\n																	&lt;/p&gt;\r\n																	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n																		1.&amp;nbsp;全页面静态化缓存，也就是将页面全部生成html静态页面，用户访问时直接访问的静态页面，而不会去走php服务器解析的流程&lt;br /&gt;\r\n2.&amp;nbsp;页面部分缓存，将一个页面中不经常变的部分进行静态缓存，而经常变化的块不缓存，最后组装在一起显示&lt;br /&gt;\r\n3.&amp;nbsp;数据缓存，通过一个id进行请求的数据,将数据缓存到一个php文件中,id和文件是对应的,下次通过这个id进行请求时&amp;nbsp;直接读php文件&lt;br /&gt;\r\n4.&amp;nbsp;查询缓存，和数据缓存差不多,根据查询语句进行缓存;&lt;br /&gt;\r\n5.&amp;nbsp;常用的缓存技术有：redis和memcache&lt;br /&gt;\r\n个人认为tp应该是全局缓存&amp;nbsp;因为：tp缓存实在本地生成一个php文件来存储数据库中读取出来的数据\r\n																	&lt;/div&gt;\r\n																&lt;/div&gt;\r\n															&lt;/div&gt;\r\n														&lt;/div&gt;\r\n													&lt;/div&gt;\r\n												&lt;/div&gt;\r\n											&lt;/div&gt;\r\n										&lt;/div&gt;\r\n									&lt;/div&gt;\r\n								&lt;/div&gt;\r\n							&lt;/div&gt;\r\n						&lt;/div&gt;\r\n					&lt;/div&gt;\r\n				&lt;/div&gt;\r\n			&lt;/div&gt;\r\n		&lt;/div&gt;\r\n	&lt;/div&gt;\r\n&lt;/div&gt;', '1', '0', '1488965231', '小兔', null, '0', '3');
INSERT INTO `article` VALUES ('46', 'PHP面试总结-下篇', 'PHP面试总结', '&lt;div style=&quot;margin:0px;color:#999999;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:;&quot;&gt;\r\n	&lt;h1 style=&quot;font-size:28px;&quot;&gt;\r\n		strlen()与mb_strlen的作用与区别\r\n	&lt;/h1&gt;\r\n&lt;/div&gt;\r\n&lt;span style=&quot;color:#999999;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;background-color:;&quot;&gt;在PHP中，strlen与mb_strlen是求字符串长度的函数&lt;/span&gt; \r\n&lt;div style=&quot;margin:0px;color:#999999;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:;&quot;&gt;\r\n	PHP内置的字符串长度函数strlen无法正确处理中文字符串，它得到的只是字符串所占的字节数。对于GB2312的中文编码，strlen得到的值是汉字个数的2倍，而对于UTF-8编码的中文，就是3倍（在 UTF-8编码下，一个汉字占3个字节）。\r\n&lt;/div&gt;\r\n&lt;div style=&quot;margin:0px;color:#999999;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:;&quot;&gt;\r\n	&amp;nbsp;\r\n&lt;/div&gt;\r\n&lt;span style=&quot;color:#999999;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:21px;background-color:;&quot;&gt;采用mb_strlen函数可以较好地解决这个问题。mb_strlen的用法和strlen类似，只不过它有第二个可选参数用于指定字符编码。例如得到UTF-8的字符串$str长度，可以用 mb_strlen($str,\'UTF-8\')。如果省略第二个参数，则会使用PHP的内部编码。内部编码可以通过 mb_internal_encoding()函数得到。&lt;/span&gt; \r\n&lt;div style=&quot;margin:0px;color:#999999;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:;&quot;&gt;\r\n	&lt;br /&gt;\r\n需要注意的是，mb_strlen并不是PHP核心函数，使用前需要确保在php.ini中加载了php_mbstring.dll，即确保“extension=php_mbstring.dll”这一行存在并且没有被注释掉，否则会出现未定义函 数的问题。\r\n&lt;/div&gt;\r\n&lt;div style=&quot;margin:0px;color:#999999;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:;&quot;&gt;\r\n	&amp;nbsp;\r\n&lt;/div&gt;\r\n&lt;div style=&quot;margin:0px;color:#999999;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:;&quot;&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&lt;div style=&quot;margin:0px;&quot;&gt;\r\n				&lt;strong&gt;写一个函数，尽可能高效的从一个标准url中取出扩展名&lt;/strong&gt; \r\n			&lt;/div&gt;\r\n		&lt;/div&gt;\r\n	&lt;/div&gt;\r\n$arr&amp;nbsp;=&amp;nbsp;parse_url(\'http://www.sina.com.cn/abc/de/fg.php?id=1\');\r\n&lt;/div&gt;\r\n&lt;div style=&quot;margin:0px;color:#999999;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:;&quot;&gt;\r\n	&amp;nbsp;\r\n&lt;/div&gt;\r\n&lt;div style=&quot;margin:0px;color:#999999;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:;&quot;&gt;\r\n	$result&amp;nbsp;=&amp;nbsp;pathinfo($arr[\'path\']);var_dump($arr);\r\n&lt;/div&gt;\r\n&lt;div style=&quot;margin:0px;color:#999999;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:;&quot;&gt;\r\n	&amp;nbsp;\r\n&lt;/div&gt;\r\n&lt;div style=&quot;margin:0px;color:#999999;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:;&quot;&gt;\r\n	var_dump($result[\'extension\']);\r\n&lt;/div&gt;\r\n&lt;div style=&quot;margin:0px;color:#999999;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:;&quot;&gt;\r\n	&amp;nbsp;\r\n&lt;/div&gt;\r\n&lt;div style=&quot;margin:0px;color:#999999;font-family:verdana, Arial, Helvetica, sans-serif;font-size:14px;background-color:;&quot;&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		&lt;h1 style=&quot;font-size:28px;&quot;&gt;\r\n			php.ini 中safe mod关闭 影响哪些函数和参数，至少写6个？\r\n		&lt;/h1&gt;\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		move_uploaded_file() &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;exec()\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		system() &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;passthru()\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		popen() &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;fopen()\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		mkdir() &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;rmdir()\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		rename() &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;unlink()\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		copy() &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;chgrp()\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		chown() &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;chmod()\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		touch() &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;symlink()\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		link() &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;parse_ini_file()\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		set_time_limit() &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;max_execution_time mail()\r\n	&lt;/div&gt;\r\n	&lt;p&gt;\r\n		&lt;strong&gt;&amp;nbsp;&lt;/strong&gt; \r\n	&lt;/p&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		&lt;p&gt;\r\n			&lt;strong&gt;一群猴子排成一圈，按1，2，…，n依次编号。然后从第1只开始数，数到第m只,把它踢出圈，从它后面再开始数，再数到第m只，在把它踢出去…，如此不停 的进行下去，直到最后只剩下一只猴子为止，那只猴子就叫做大王。要求编程模拟此过程，输入m、n, 输出最后那个大王的编号。&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n		&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n			&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n				&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/5HnhX45FqExet6U.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n			&lt;/div&gt;\r\n			&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n				&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/VBIk654r1fA1Ng3.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n			&lt;/div&gt;\r\n&lt;pre&gt; 1 &amp;lt;？php\r\n 2  function fuhuan($allnum, $ti){\r\n 3      $arr = array();\r\n 4      for($i = 0; $i &amp;lt; $allnum; $i++){\r\n 5          $arr[$i] = $i;\r\n 6      }\r\n 7  \r\n 8      $nums = 1;\r\n 9      while(count($arr) &amp;gt; 1){\r\n10           foreach ($arr as $key =&amp;gt; $value) {\r\n11               if($nums == $ti){\r\n12                   unset($arr[$key]);\r\n13                   $nums = 1;\r\n14               }else{\r\n15                   $nums++;\r\n16               }\r\n17          }\r\n18      }\r\n19      $new_arr = array_values($arr);\r\n20      var_dump($new_arr[0] + 1);\r\n21  }\r\n22  fuhuan(10,10);&lt;/pre&gt;\r\n			&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n				&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/KcbxKzRf97jrd2O.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n			&lt;/div&gt;\r\n			&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n				&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/xoP5YL1Q8Sw8I39.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n			&lt;/div&gt;\r\n		&lt;/div&gt;\r\n		&lt;p&gt;\r\n			&lt;strong&gt;isset() 、empty()与is_null的区别&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			1、当变量未定义时，is_null() 和“参数本身”是不允许作为参数判断的，会报Notice警告错误；\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			2、empty , isset首先都会检查变量是否存在，然后对变量值进行检测。而is_null 和 “参数本身”只是直接检查变量值，是否为null，因此如果变量未定义就会出现错误！\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			3、isset()：仅当null和未定义，返回false；\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			4、empty()：&quot;&quot;、0、&quot;0&quot;、NULL、FALSE、array(),未定义，均返回true；\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			5、is_null()：仅判断是否为null，未定义报警告；\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			6、变量本身作为参数，与empty()一致，但接受未定义变量时，报警告；\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			&amp;nbsp;\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			&lt;strong&gt;求两个文件的相对路径&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n		&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:0px;color:#000000;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;\r\n			&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n				&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/cJCE5M8OsyN1gqu.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n			&lt;/div&gt;\r\n			&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n				&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/ud93ayL4EEJ42S1.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n			&lt;/div&gt;\r\n&lt;pre&gt; 1  getpath(\'/a/b/c/d/e.php\', \'/a/d/12/34/c.php\');\r\n 2   \r\n 3 public function getpath($a, $b)\r\n 4 {\r\n 5      $aarr = explode(\'/\', $a);\r\n 6      $barr = explode(\'/\', $b);\r\n 7      $count = count($barr) - 2;\r\n 8      $pathinfo = \'\';\r\n 9      for($i = 1; $i &amp;lt;= $count; $i++){\r\n10          if($aarr[$i] == $barr[$i]){\r\n11               $pathinfo .= \'../\';\r\n12          }else{\r\n13               $pathinfo .= $barr[$i] . \'/\';\r\n14          }\r\n15      }\r\n16      echo $pathinfo;\r\n17 }&lt;/pre&gt;\r\n			&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n				&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/7vA9z2ltM3hZvNF.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n			&lt;/div&gt;\r\n			&lt;div class=&quot;cnblogs_code_toolbar&quot; style=&quot;margin:0px;&quot;&gt;\r\n				&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;a&gt;&lt;img src=&quot;/Public/files/images/2017/03/08/g7jG7J9JB4NL1L4.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/a&gt;&lt;/span&gt; \r\n			&lt;/div&gt;\r\n		&lt;/div&gt;\r\n		&lt;p&gt;\r\n			&amp;nbsp;\r\n		&lt;/p&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&lt;strong&gt;MVC的优缺点&lt;/strong&gt; \r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&lt;strong&gt;1、 MVC的优点&amp;nbsp;&lt;/strong&gt;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 　　（1）&amp;nbsp;可以为一个模型在运行时同时建立和使用多个视图。变化-传播机制可以确保所有相关的视图及时得到模型数据变化，从而使所有关联的视图和控制器做到行为同步。&amp;nbsp;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 　　（2）&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;视图与控制器的可接插性，允许更换视图和控制器对象，而且可以根据需求动态的打开或关闭、甚至在运行期间进行对象替换。&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 　　（3）&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;模型的可移植性。因为模型是独立于视图的，所以可以把一个模型独立地移植到新的平台工作。需要做的只是在新平台上对视图和控制器进行新的修改。&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 　　（4）&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;潜在的框架结构。可以基于此模型建立应用程序框架，不仅仅是用在设计界面的设计中。&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;br /&gt;\r\n&lt;strong&gt;2、 MVC的不足之处&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 　　（1）&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;增加了系统结构和实现的复杂性。对于简单的界面，严格遵循MVC，使模型、视图与控制器分离，会增加结构的复杂性，并可能产生过多的更新操作，降低运行效率。&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 　　（2）&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;视图与控制器间的过于紧密的连接。视图与控制器是相互分离，但确实联系紧密的部件，视图没有控制器的存在，其应用是很有限的，反之亦然，这样就妨碍了他们的独立重用。&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 　　（3）&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;视图对模型数据的低效率访问。依据模型操作接口的不同，视图可能需要多次调用才能获得足够的显示数据。对未变化数据的不必要的频繁访问，也将损害操作性能。&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 　　（4） 目前，一般高级的界面工具或构造器不支持MVC模式。改造这些工具以适应MVC需要和建立分离的部件的代价是很高的，从而造成使用MVC的困难。&lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;br /&gt;\r\n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&amp;nbsp;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&amp;nbsp;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&lt;div style=&quot;margin:0px;&quot;&gt;\r\n				&lt;strong&gt;session与cookie的联系和区别（运行机制），session共享问题解决方案：&lt;/strong&gt; \r\n			&lt;/div&gt;\r\n			&lt;div style=&quot;margin:0px;&quot;&gt;\r\n				区别与联系：\r\n			&lt;/div&gt;\r\n			&lt;div style=&quot;margin:0px;&quot;&gt;\r\n				&amp;nbsp; &amp;nbsp; 使用session_start()调用session，服务器端在生成session文件的同时生成session ID哈希值和默认值为PHPSESSID的session name，并向客户端发送变量为PHPSESSID(session name)(默认)值为一个128位的哈希值。服务器端将通过该cookie与客户端进行交互，session变量的值经php内部系列化后保存在服务器 机器上的文本文件中，和客户端的变量名默认情况下为PHPSESSID的coolie进行对应交互，即服务器自动发送了http 头:header(‘Set-Cookie: session_name()=session_id(); path=/’);即setcookie(session_name(),session_id());当从该页跳转到的新页面并调用 session_start()后,PHP将检查与给定ID相关联的服务器端存贮的session数据，如果没找到则新建一个数据集。\r\n			&lt;/div&gt;\r\n			&lt;div style=&quot;margin:0px;&quot;&gt;\r\n				&lt;strong&gt;共享&lt;/strong&gt;&lt;strong&gt;方案：&lt;/strong&gt; \r\n			&lt;/div&gt;\r\n			&lt;div style=&quot;margin:0px;&quot;&gt;\r\n				1：使用数据库保存session， 使用数据库来保存session，就算服务器宕机了也没事，session照样在。\r\n			&lt;/div&gt;\r\n			&lt;div style=&quot;margin:0px;&quot;&gt;\r\n				&lt;div style=&quot;margin:0px;&quot;&gt;\r\n					&lt;p&gt;\r\n						问题：程序需要定制；每次请求都进行数据库读写开销不小，另外数据库是一个单点，可以做数据库的hash来解 决这个问题。&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;\r\n					&lt;/p&gt;\r\n					&lt;p&gt;\r\n						2：使用 memcached来保存session，&amp;nbsp;这种方式跟数据库类似，内存存取性能比数据库好很多。\r\n					&lt;/p&gt;\r\n					&lt;p&gt;\r\n						问题：程序需要定制，增加 了工作量；存入memcached中的数据都需要序列化，效率较低，断电或者重启电脑容易丢失数据；\r\n					&lt;/p&gt;\r\n				&lt;/div&gt;\r\n				&lt;div style=&quot;margin:0px;&quot;&gt;\r\n					&lt;p&gt;\r\n						3： 通过加密的cookie，在A服务器上登录，在用户的浏览器上添加加密的cookie，当用户访问B服务器时，检查有无Session，如果没有，就检验 Cookie是否有效，Cookie有效的话就在B服务器上重建session。简单，高效， 服务器的压力减小了，因为session数据不存在服务器磁盘上。根本就不会出现session读取不到的问题。\r\n					&lt;/p&gt;\r\n					&lt;p&gt;\r\n						问题：网络请求占用很多。每次请求时，客户端都要通过cookie发送session数据给服务器，session中数据不能太多，浏览器对cookie 的大\r\n					&lt;/p&gt;\r\n				&lt;/div&gt;\r\n			&lt;/div&gt;\r\n			&lt;p&gt;\r\n				小存在限制。不适合高访问量的情况，因为高访问量的情况下。\r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				&amp;nbsp;\r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				&lt;strong&gt;&amp;nbsp;正则表达式&lt;/strong&gt; \r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				匹配中文字符的正则表达式： [u4e00-u9fa5]&amp;nbsp;&lt;br /&gt;\r\n匹配双字节字符(包括汉字在内)：[^x00-xff]&amp;nbsp;&lt;br /&gt;\r\n匹配空行的正则表达式：n[s| ]*r&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;br /&gt;\r\n匹配HTML标记的正则表达式：/&amp;lt;(.*)&amp;gt;.*&amp;lt;/1&amp;gt;|&amp;lt;(.*) /&amp;gt;/&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;br /&gt;\r\n匹配首尾空格的正则表达式：(^s*)|(s*$)&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;br /&gt;\r\n匹配Email地址的正则表达式：w+([-+.]w+)*@w+([-.]w+)*.w+([-.]w+)*&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;br /&gt;\r\n匹配网址URL的正则表达式：^[a-zA-z]+://(w+(-w+)*)(.(w+(-w+)*))*(?S*)?$&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;br /&gt;\r\n匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;br /&gt;\r\n匹配国内电话号码：(d{3}-|d{4}-)?(d{8}|d{7})?&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;br /&gt;\r\n匹配腾讯QQ号：^[1-9]*[1-9][0-9]*$&lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;br /&gt;\r\n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; \r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				&amp;nbsp;\r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				&lt;strong&gt;--------------------------------------mysql部分-------------------------------------------&lt;/strong&gt; \r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				&lt;strong&gt;select * from table where (ID = 10)&amp;nbsp; or (ID = 32) or (ID = 22)&amp;nbsp; 让结果按10, 32, 22的顺序检索出来？&lt;/strong&gt; \r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				Select *&lt;br /&gt;\r\nfrom user_info&lt;br /&gt;\r\nWhere (ID IN (10, 32, 22))\r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				order BY FIND_IN_SET(ID, \'10, 32, 22\')&amp;nbsp;&lt;strong&gt;&lt;br /&gt;\r\n&lt;br /&gt;\r\n&lt;/strong&gt; \r\n			&lt;/p&gt;\r\n		&lt;/div&gt;\r\n		&lt;p&gt;\r\n			&lt;strong&gt;---------------------------------------linux部分-------------------------------------------&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			&lt;strong&gt;core文件是什么，有什么用？&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n&lt;pre&gt; core是unix系统的内核。当你的程序出现内存越界的时候，操作系统会中止你的进程，并将当前内存状态倒出到core文件中，以便进一步分析。程序员可以通过core文件来找出问题所在。它记录了程序挂掉时详细的状态描述。&lt;/pre&gt;\r\n&lt;pre&gt;&lt;strong&gt;什么是core dump&lt;/strong&gt; Core的意思是内存, Dump的意思是扔出来, 堆出来。开发和使用Unix程序时, 有时程序莫名其妙的down了, 却没有任何的提示(有时候会提示core dumped). 这时候可以查看一下有没有形如core.进程号的文件生成， 这个文件便是操作系统把程序down掉时的内存内容扔出来生成的，它可以做为调试程序的参考.\r\n    core dump又叫核心转储, 当程序运行过程中发生异常, 程序异常退出时, 由操作系统把程序当前的内存状况存储在一个core文件中, 叫core dump。如何使用core文件 gdb -c core文件路径 [应用程序的路径]，进去后输入where回车, 就可以显示程序在哪一行当掉的, 在哪个函数中.&lt;/pre&gt;\r\n&lt;pre&gt;&lt;strong&gt;为什么没有core文件生成呢?&lt;/strong&gt; core文件的生成跟你当前系统的环境设置有关系, 可以用下面的语句设置一下, 然后再运行程序便成生成core文件.&lt;/pre&gt;\r\n&lt;pre&gt;&lt;strong&gt;ulimit -c unlimited&lt;/strong&gt; core文件生成的位置一般于运行程序的路径相同, 文件名一般为core.进程号&lt;/pre&gt;\r\n		&lt;p&gt;\r\n			不用core文件，程序出了问题产生信号是否知道？答：内核向进程发信号嘛。\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			&amp;nbsp;\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			&lt;strong&gt;共享内存除了文件映射还有什么方式？&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&lt;p&gt;\r\n				共享内存对象映射。\r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				二者有什么区别：\r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				答：内存映射文件是由一个文件到一块内存的映射，使应用程序可以通过内存指针对磁盘上的文件进行访问，其过程就如同对加载了文件的内存的访问，因此内存文件映射非常适合于用来管理大文件。\r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				&amp;nbsp;\r\n			&lt;/p&gt;\r\n		&lt;/div&gt;\r\n&lt;strong&gt;请解释下列10个shell命令的用途&lt;/strong&gt;&lt;br /&gt;\r\n&lt;strong&gt;top、ps、mv、find、df、cat、chmod、chgrp、grep、wc&lt;/strong&gt; \r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&lt;strong&gt;top：命令是Linux下常用的&lt;strong&gt;性能分析工具&lt;/strong&gt;，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器。&amp;nbsp;&lt;/strong&gt; \r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			ps：查看进程&amp;nbsp;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			mv：移动或者更改文件&amp;nbsp;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			find：在子目录中搜索匹配的文件&amp;nbsp;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			df：linux中df命令参数功能：检查文件系统的磁盘空间占用情况。&lt;br /&gt;\r\n			&lt;p&gt;\r\n				cat：把一个或多个文件内容显示到标准输出&amp;nbsp;\r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				chmod：改变文件属性&amp;nbsp;\r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				chgrp：改变用户分组&amp;nbsp;\r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				grep：在文件内进行搜索&amp;nbsp;\r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				wc：命令的功能为统计指定文件中的字节数、字数、行数,&amp;nbsp;并将统计结果显示输出。\r\n			&lt;/p&gt;\r\n			&lt;p&gt;\r\n				&amp;nbsp;\r\n			&lt;/p&gt;\r\n		&lt;/div&gt;\r\n		&lt;p&gt;\r\n			&lt;strong&gt;Linux文件属性有哪些？（共十位）&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			-rw-r--r--那个是权限符号，总共是- --- --- ---这几个位。\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			第一个短横处是文件类型识别符：-表示普通文件；c表示字符设备（character）；b表示块设备（block）；d表示目录 （directory）；l表示链接文件（link）；后面第一个三个连续的短横是用户权限位（User），第二个三个连续短横是组权限位 （Group），第三个三个连续短横是其他权限位（Other）。每个权限位有三个权限，r（读权限），w（写权限），x（执行权限）。如果每个权限位都 有权限存在，那么满权限的情况就是：-rwxrwxrwx；权限为空的情况就是- --- --- ---。\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			权限的设定可以用chmod命令，其格式位：chmod ugoa+/-/=rwx filename/directory。例如：\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			一个文件aaa具有完全空的权限- --- --- ---。\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			chmod u+rw aaa（给用户权限位设置读写权限，其权限表示为：- rw- --- ---）\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			chmod g+r aaa（给组设置权限为可读，其权限表示为：- --- r-- ---）\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			chmod ugo+rw aaa（给用户，组，其它用户或组设置权限为读写，权限表示为：- rw- rw- rw-）\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			如果aaa具有满权限- rwx rwx rwx。\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			chmod u-x aaa（去掉用户可执行权限，权限表示为：- rw- rwx rwx）\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			如果要给aaa赋予制定权限- rwx r-x r-x，命令为：\r\n		&lt;/p&gt;\r\n		&lt;p&gt;\r\n			chmod u=rwx，go=rx aaa\r\n		&lt;/p&gt;\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		&amp;nbsp;\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		&lt;strong&gt;linux查询命令&lt;/strong&gt; \r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		1：find / -name &quot;文件名&quot; &amp;nbsp; &amp;nbsp;在目录结构中搜索文件，并执行指定的操作。\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		&amp;nbsp;\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		2：grep\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		&amp;nbsp;\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		3：local 文件名 &amp;nbsp;---他是 \'find -name\' 的另一种写法，但要比后者快得多，原因在于它不搜索具体目录，而是搜索一个数据库（/var/lib/locatedb），这个数据库中含 有本地所有文件信息。Linux系统自动创建这个数据库，并且每天自动更新一次，所以改命令查不到最新变动过的文件。为了避免这种情况，可以在使用locate之前，先使用updatedb命令，手动更新数据库。\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		&amp;nbsp;\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		4. whereis ---是定位可执行文件、源代码文件、帮助文件在文件系统中的位置。whereis命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		&amp;nbsp;\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		5：which &amp;nbsp;作用是在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。\r\n		&lt;p&gt;\r\n			&amp;nbsp;&lt;strong&gt;-------------------------------------服务器部分-------------------------------------&lt;/strong&gt; \r\n		&lt;/p&gt;\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		&amp;nbsp;\r\n	&lt;/div&gt;\r\n	&lt;div style=&quot;margin:0px;&quot;&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&lt;strong&gt;Apache与Nginx的优缺点比较&amp;nbsp;&lt;/strong&gt;&lt;br /&gt;\r\n1、nginx相对于apache的优点：&amp;nbsp;&lt;br /&gt;\r\n轻量级，比apache 占用更少的内存及资源。高度模块化的设计，编写模块相对简单&amp;nbsp;&lt;br /&gt;\r\n抗并发，nginx 处理请求是异步非阻塞，多个连接（万级别）可以对应一个进程，而apache 则是阻塞型的，是同步多进程模型，一个连接对应一个进程，在高并发下nginx 能保持低资源低消耗高性能&amp;nbsp;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			nginx处理静态文件好，Nginx 静态处理性能比 Apache 高 3倍以上&amp;nbsp;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&lt;br /&gt;\r\n2、apache 相对于nginx 的优点：&amp;nbsp;&lt;br /&gt;\r\napache&amp;nbsp;的rewrite 比nginx 的rewrite 强大 ，模块非常多，基本想到的都可以找到 ，比较稳定，少bug ，nginx 的bug 相对较多&amp;nbsp;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&amp;nbsp;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			3：原因：这得益于Nginx使用了最新的epoll（Linux 2.6内核）和kqueue（freebsd）网络I/O模型，而Apache则使用的是传统的select模型。目前Linux下能够承受高并发访问的 Squid、Memcached都采用的是epoll网络I/O模型。 处理大量的连接的读写，Apache所采用的select网络I/O模型非常低效。\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&amp;nbsp;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&amp;nbsp;\r\n		&lt;/div&gt;\r\n		&lt;div style=&quot;margin:0px;&quot;&gt;\r\n			&lt;strong&gt;cgi 与fastcgi的区别&lt;/strong&gt;&lt;br /&gt;\r\n			&lt;div id=&quot;cnblogs_post_body&quot; style=&quot;margin:0px 0px 20px;&quot;&gt;\r\n				&lt;p&gt;\r\n					cgi在2000年或更早的时候用得比较多， 以前web服务器一般只处理静态的请求，web服务器会根据这次请求的内容，然后会fork一个新进程来运行外部c程序 （或perl脚本...）， 这个进程会把处理完的数据返回给web服务器，最后web服务器把内容发送给用户，刚才fork的进程也随之退出。 如果下次用户还请求改动态脚本，那么web服务器又再次fork一个新进程，周而复始的进行。\r\n				&lt;/p&gt;\r\n				&lt;p&gt;\r\n					后来出现了一种更高级的方式是， web服务器可以内置perl解释器或php解释器。 也就是说这些解释器做成模块的方式，web服务器会在启动的时候就启动这些解释器。 当有新的动态请求进来时，web服务器就是自己解析这些perl或php脚本，省得重新fork一个进程，效率提高了。\r\n				&lt;/p&gt;\r\n				&lt;p&gt;\r\n					fastcgi的方式是，web服务器收到一个请求时，他不会重新fork一个进程（因为这个进程在web服务器启动时就开启了，而且不会退 出），web服务器直接把内容传递给这个进程（进程间通信，但fastcgi使用了别的方式，tcp方式通信），这个进程收到请求后进行处理，把结果返回 给web服务器，最后自己接着等待下一个请求的到来，而不是退出。&amp;nbsp;&lt;br /&gt;\r\nfastcgi跟cgi的区别是：&lt;br /&gt;\r\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;在web服务器方面&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;strong&gt;在对数据进行处理的进程方面&lt;/strong&gt;&lt;br /&gt;\r\n&lt;strong&gt;cgi&lt;/strong&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; fork一个新的进程进行处理&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 读取参数，处理数据，然后就结束生命期&lt;br /&gt;\r\n&lt;strong&gt;fastcgi&lt;/strong&gt;&amp;nbsp;&amp;nbsp; 用tcp方式跟远程机子上的进程或本地进程建立连接&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 要开启tcp端口，进入循环，等待数据的到来，处理数据&lt;/span&gt;&lt;/span&gt; \r\n				&lt;/p&gt;\r\n				&lt;p&gt;\r\n					&lt;br /&gt;\r\n举个例子: 服务端现在有个10万个字单词， 客户每次会发来一个字符串，问以这个字符串为前缀的单词有多少个。 那么可以写一个程序，这个程序会建一棵trie树，然后每次用户请求过来时可以直接到这个trie去查找。 但是如果以cgi的方式的话，这次请求结束后这课trie也就没了，等下次再启动该进程时，又要新建一棵trie树，这样的效率就太低下了。&amp;nbsp;&amp;nbsp; 而用fastcgi的方式的话，这课trie树在进程启动时建立，以后就可以直接在trie树上查询指定的前缀了。\r\n				&lt;/p&gt;\r\n				&lt;p&gt;\r\n					&amp;nbsp;\r\n				&lt;/p&gt;\r\n				&lt;div style=&quot;margin:0px;&quot;&gt;\r\n					&lt;strong&gt;select, poll和epoll的区别&lt;/strong&gt; \r\n				&lt;/div&gt;\r\n				&lt;div style=&quot;margin:0px;&quot;&gt;\r\n					&lt;strong&gt;select&lt;/strong&gt; \r\n					&lt;div style=&quot;margin:0px;&quot;&gt;\r\n						&lt;p&gt;\r\n							select最早于1983年出现在4.2BSD中，它通过一个select()系统调用来监视多个文件描述符的数组，当select()返回后，该数组中就绪的文件描述符便会被内核修改标志位，使得进程可以获得这些文件描述符从而进行后续的读写操作。\r\n						&lt;/p&gt;\r\n						&lt;p&gt;\r\n							select目前几乎在所有的平台上支持，其良好跨平台支持也是它的一个优点，事实上从现在看来，这也是它所剩不多的优点之一。\r\n						&lt;/p&gt;\r\n						&lt;p&gt;\r\n							select的一个缺点在于单个进程能够监视的文件描述符的数量存在最大限制，在Linux上一般为1024，不过可以通过修改宏定义甚至重新编译内核的方式提升这一限制。\r\n						&lt;/p&gt;\r\n						&lt;p&gt;\r\n							另外，select()所维护的存储大量文件描述符的数据结构，随着文件描述符数量的增大，其复制的开销也线性增长。同时，由于网络响应时间的延迟 使得大量TCP连接处于非活跃状态，但调用select()会对所有socket进行一次线性扫描，所以这也浪费了一定的开销。\r\n						&lt;/p&gt;\r\n						&lt;h2 style=&quot;font-size:21px;&quot;&gt;\r\n							poll\r\n						&lt;/h2&gt;\r\n						&lt;p&gt;\r\n							poll在1986年诞生于System V Release 3，它和select在本质上没有多大差别，但是poll没有最大文件描述符数量的限制。&amp;nbsp;\r\n						&lt;/p&gt;\r\n						&lt;p&gt;\r\n							poll和select同样存在一个缺点就是，包含大量文件描述符的数组被整体复制于用户态和内核的地址空间之间，而不论这些文件描述符是否就绪，它的开销随着文件描述符数量的增加而线性增大。&amp;nbsp;\r\n						&lt;/p&gt;\r\n						&lt;p&gt;\r\n							另外，select()和poll()将就绪的文件描述符告诉进程后，如果进程没有对其进行IO操作，那么下次调用select()和poll() 的时候将再次报告这些文件描述符，所以它们一般不会丢失就绪的消息，这种方式称为水平触发（Level Triggered）。\r\n						&lt;/p&gt;\r\n						&lt;h2 style=&quot;font-size:21px;&quot;&gt;\r\n							epoll\r\n						&lt;/h2&gt;\r\n						&lt;p&gt;\r\n							直到Linux2.6才出现了由内核直接支持的实现方法，那就是epoll，它几乎具备了之前所说的一切优点，被公认为Linux2.6下性能最好的多路I/O就绪通知方法。\r\n						&lt;/p&gt;\r\n						&lt;p&gt;\r\n							epoll可以同时支持水平触发和边缘触发（Edge Triggered，只告诉进程哪些文件描述符刚刚变为就绪状态，它只说一遍，如果我们没有采取行动，那么它将不会再次告知，这种方式称为边缘触发），理论上边缘触发的性能要更高一些，但是代码实现相当复杂。\r\n						&lt;/p&gt;\r\n						&lt;p&gt;\r\n							epoll同样只告知那些就绪的文件描述符，而且当我们调用epoll_wait()获得就绪文件描述符时，返回的不是实际的描述符，而是一个代表 就绪描述符数量的值，你只需要去epoll指定的一个数组中依次取得相应数量的文件描述符即可，这里也使用了内存映射（mmap）技术，这样便彻底省掉了 这些文件描述符在系统调用时复制的开销。\r\n						&lt;/p&gt;\r\n						&lt;p&gt;\r\n							另一个本质的改进在于epoll采用基于事件的就绪通知方式。在select/poll中，进程只有在调用一定的方法后，内核才对所有监视的文件描 述符进行扫描，而epoll事先通过epoll_ctl()来注册一个文件描述符，一旦基于某个文件描述符就绪时，内核会采用类似callback的回调 机制，迅速激活这个文件描述符，当进程调用epoll_wait()时便得到通知。\r\n						&lt;/p&gt;\r\n					&lt;/div&gt;\r\n				&lt;/div&gt;\r\n				&lt;p&gt;\r\n					&amp;nbsp;\r\n				&lt;/p&gt;\r\n				&lt;p&gt;\r\n					&lt;strong&gt;Memcache和Redis区别&lt;/strong&gt; \r\n				&lt;/p&gt;\r\n				&lt;div style=&quot;margin:0px;&quot;&gt;\r\n					&lt;ol&gt;\r\n						&lt;li&gt;\r\n							Redis中，并不是所有的数据都一直存储在内存中的，这是和Memcached相比一个最大的区别。\r\n						&lt;/li&gt;\r\n						&lt;li&gt;\r\n							Redis在很多方面具备数据库的特征，或者说就是一个数据库系统，而Memcached只是简单的K/V缓存。\r\n						&lt;/li&gt;\r\n						&lt;li&gt;\r\n							他们的扩展都需要做集群；实现方式：master-slave、Hash。\r\n						&lt;/li&gt;\r\n						&lt;li&gt;\r\n							在100k以上的数据中，Memcached性能要高于Redis。\r\n						&lt;/li&gt;\r\n						&lt;li&gt;\r\n							如果要说内存使用效率，使用简单的key-value存储的话，Memcached的内存利用率更高，而如果Redis采用hash结构来做key-value存储，由于其组合式的压缩，其内存利用率会高于Memcached。当然，这和你的应用场景和数据特性有关。\r\n						&lt;/li&gt;\r\n						&lt;li&gt;\r\n							如果你对数据持久化和数据同步有所要求，那么推荐你选择Redis，因为这两个特性Memcached都不具备。即使你只是希望在升级或者重启系统后缓存数据不会丢失，选择Redis也是明智的。\r\n						&lt;/li&gt;\r\n						&lt;li&gt;\r\n							Redis和Memcache在写入性能上面差别不大，读取性能上面尤其是批量读取性能上面Memcache更强\r\n						&lt;/li&gt;\r\n					&lt;/ol&gt;\r\n				&lt;/div&gt;\r\n			&lt;/div&gt;\r\n		&lt;/div&gt;\r\n	&lt;/div&gt;\r\n&lt;/div&gt;', '1', '1', '1496222812', '小兔', null, '0', '2');
INSERT INTO `article` VALUES ('47', 'MySql常用函数数学函数、加密函数等', 'MySql 函数', '&lt;span style=&quot;color:#333333;font-family:宋体;font-size:14px;line-height:28px;background-color:#F9F9F9;&quot;&gt;MySql常用函数数学函数、加密函数等&lt;/span&gt; \r\n&lt;div style=&quot;padding:0px;margin:0px;color:#333333;font-family:宋体;font-size:14px;background-color:#F9F9F9;&quot;&gt;\r\n	&amp;nbsp;\r\n	&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n		MySql函数众多，这里只是列举了一部分常用的函数。\r\n		&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n			&amp;nbsp;\r\n			&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n				一、数学函数\r\n				&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n					ABS(x) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 返回x的绝对值\r\n					&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n						BIN(x)　　　　　　　　　 &amp;nbsp;　//返回x的二进制（OCT返回八进制，HEX返回十六进制）\r\n						&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n							CEILING(x) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //返回大于x的最小整数值\r\n							&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n								EXP(x)　　　　　　　　　　 //返回值e（自然对数的底）的x次方\r\n								&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n									FLOOR(x)　　　　　　　　 &amp;nbsp; //返回小于x的最大整数值\r\n									&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n										GREATEST(x1,x2,...,xn)　　 &amp;nbsp; &amp;nbsp;//返回集合中最大的值\r\n										&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n											LEAST(x1,x2,...,xn) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 返回集合中最小的值\r\n											&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n												LN(x) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;//返回x的自然对数\r\n												&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n													LOG(x,y)　　 &amp;nbsp;//返回x的以y为底的对数\r\n													&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n														MOD(x,y) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 返回x/y的模（余数）\r\n														&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n															PI()　　　　　//返回pi的值（圆周率）\r\n															&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																RAND()　　　　//返回０到１内的随机值,可以通过提供一个参数(种子)使RAND()随机数生成器生成一个指定的值。\r\n																&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																	ROUND(x,y)　　//返回参数x的四舍五入的有y位小数的值\r\n																	&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																		SIGN(x) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;//返回代表数字x的符号的值\r\n																		&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																			SQRT(x) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //返回一个数的平方根\r\n																			&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																				TRUNCATE(x,y) &amp;nbsp; &amp;nbsp; // 返回数字x截短为y位小数的结果\r\n																				&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																					&amp;nbsp;\r\n																					&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																						二、聚合函数(常用于GROUPBY从句的SELECT查询中)\r\n																						&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																							AVG(col)　　　　　　　　　返回指定列的平均值\r\n																							&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																								COUNT(col)　　　　　　　 返回指定列中非NULL值的个数\r\n																								&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																									MIN(col)　　　　　　　　　返回指定列的最小值\r\n																									&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																										MAX(col)　　　　　　　　　返回指定列的最大值\r\n																										&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																											SUM(col)　　　　　　　　　返回指定列的所有值之和\r\n																											&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																												GROUP_CONCAT(col) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 回由属于一组的列值连接组合而成的结果\r\n																												&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																													&amp;nbsp;\r\n																													&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																														三、字符串函数\r\n																														&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																															ASCII(char)　　　　　　　　 &amp;nbsp; 返回字符的ASCII码值\r\n																															&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																BIT_LENGTH(str)　　　　　　返回字符串的比特长度\r\n																																&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																	CONCAT(s1,s2...,sn)　　　　 &amp;nbsp; 将s1,s2...,sn连接成字符串\r\n																																	&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																		CONCAT_WS(sep,s1,s2...,sn)　将s1,s2...,sn连接成字符串，并用sep字符间隔\r\n																																		&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																			INSERT(str,x,y,instr) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 将字符串str从第x位置开始，y个字符长的子串替换为字符串instr，返回结果\r\n																																			&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																				FIND_IN_SET(str,list)　　　分析逗号分隔的list列表，如果发现str，返回str在list中的位置\r\n																																				&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																					LCASE(str)或LOWER(str) &amp;nbsp; &amp;nbsp;返回将字符串str中所有字符改变为小写后的结果\r\n																																					&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																						LEFT(str,x)　　　　　　　　返回字符串str中最左边的x个字符\r\n																																						&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																							LENGTH(s)　　　　　　　　返回字符串str中的字符数\r\n																																							&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																								LTRIM(str) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;从字符串str中切掉开头的空格\r\n																																								&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																									POSITION(substr,str) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;返回子串substr在字符串str中第一次出现的位置\r\n																																									&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																										QUOTE(str) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 用反斜杠转义str中的单引号\r\n																																										&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																											REPEAT(str,srchstr,rplcstr) &amp;nbsp; &amp;nbsp; 返回字符串str重复x次的结果\r\n																																											&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																												REVERSE(str) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;返回颠倒字符串str的结果\r\n																																												&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																													RIGHT(str,x) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 返回字符串str中最右边的x个字符\r\n																																													&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																														RTRIM(str) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;返回字符串str尾部的空格\r\n																																														&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																															STRCMP(s1,s2)　　　　　比较字符串s1和s2\r\n																																															&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																TRIM(str)　　　　　　　　　去除字符串首部和尾部的所有空格\r\n																																																&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																	UCASE(str)或UPPER(str) &amp;nbsp; &amp;nbsp; &amp;nbsp; 返回将字符串str中所有字符转变为大写后的结果\r\n																																																	&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																		&amp;nbsp;\r\n																																																		&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																			LOWER(str) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;返回字符串str所有字符转换为小写后的结果\r\n																																																			&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																				&amp;nbsp;\r\n																																																				&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																					四、日期和时间函数\r\n																																																					&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																						CURDATE()或CURRENT_DATE() &amp;nbsp; &amp;nbsp;返回当前的日期\r\n																																																						&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																							CURTIME()或CURRENT_TIME() &amp;nbsp; &amp;nbsp; &amp;nbsp;返回当前的时间\r\n																																																							&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																								DATE_ADD(date,INTERVAL int keyword) &amp;nbsp; 返回日期date加上间隔时间int的结果(int必须按照关键字进行格式化),如：SELECTDATE_ADD(CURRENT_DATE,INTERVAL 6 MONTH);\r\n																																																								&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																									DATE_FORMAT(date,fmt) &amp;nbsp; &amp;nbsp; &amp;nbsp;依照指定的fmt格式格式化日期date值\r\n																																																									&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																										DATE_SUB(date,INTERVAL int keyword) 返回日期date加上间隔时间int的结果(int必须按照关键字进行格式化),如：SELECTDATE_SUB(CURRENT_DATE,INTERVAL 6 MONTH);\r\n																																																										&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																											DAYOFWEEK(date) &amp;nbsp; &amp;nbsp;返回date所代表的一星期中的第几天(1~7)\r\n																																																											&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																												DAYOFMONTH(date) &amp;nbsp; 返回date是一个月的第几天(1~31)\r\n																																																												&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																													DAYOFYEAR(date) &amp;nbsp; &amp;nbsp;返回date是一年的第几天(1~366)\r\n																																																													&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																														DAYNAME(date) &amp;nbsp; &amp;nbsp;返回date的星期名，如：SELECTDAYNAME(CURRENT_DATE);\r\n																																																														&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																															FROM_UNIXTIME(ts,fmt) &amp;nbsp; 根据指定的fmt格式，格式化UNIX时间戳ts\r\n																																																															&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																HOUR(time) &amp;nbsp; &amp;nbsp;返回time的小时值(0~23)\r\n																																																																&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																	MINUTE(time) &amp;nbsp; &amp;nbsp;返回time的分钟值(0~59)\r\n																																																																	&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																		MONTH(date) &amp;nbsp; &amp;nbsp;返回date的月份值(1~12)\r\n																																																																		&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																			MONTHNAME(date) &amp;nbsp; &amp;nbsp;返回date的月份名，如：SELECTMONTHNAME(CURRENT_DATE);\r\n																																																																			&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																				NOW() &amp;nbsp; &amp;nbsp; 返回当前的日期和时间\r\n																																																																				&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																					QUARTER(date) &amp;nbsp; &amp;nbsp;返回date在一年中的季度(1~4)，如SELECTQUARTER(CURRENT_DATE);\r\n																																																																					&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																						WEEK(date) &amp;nbsp; &amp;nbsp;返回日期date为一年中第几周(0~53)\r\n																																																																						&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																							YEAR(date) &amp;nbsp; &amp;nbsp;返回日期date的年份(1000~9999)\r\n																																																																							&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																								&amp;nbsp;\r\n																																																																								&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																									一些示例：\r\n																																																																									&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																										获取当前系统时间：SELECTFROM_UNIXTIME(UNIX_TIMESTAMP());\r\n																																																																										&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																											SELECT EXTRACT(YEAR_MONTH FROM CURRENT_DATE);\r\n																																																																											&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																												SELECT EXTRACT(DAY_SECOND FROM CURRENT_DATE);\r\n																																																																												&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																													SELECT EXTRACT(HOUR_MINUTE FROM CURRENT_DATE);\r\n																																																																													&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																														返回两个日期值之间的差值(月数)：SELECTPERIOD_DIFF(200302,199802);\r\n																																																																														&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																															在Mysql中计算年龄：\r\n																																																																															&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																SELECT DATE_FORMAT(FROM_DAYS(TO_DAYS(NOW())-TO_DAYS(birthday)), \'%Y\')+0 AS ageFROM employee;\r\n																																																																																&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																	这样，如果Brithday是未来的年月日的话，计算结果为0。\r\n																																																																																	&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																		下面的SQL语句计算员工的绝对年龄，即当Birthday是未来的日期时，将得到负值。\r\n																																																																																		&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																			SELECT DATE_FORMAT(NOW(), \'%Y\') - DATE_FORMAT(birthday, \'%Y\') -(DATE_FORMAT(NOW(), \'00-%m-%d\') &amp;lt; DATE_FORMAT(birthday, \'00-%m-%d\')) AS agefrom employee\r\n																																																																																			&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																				&amp;nbsp;\r\n																																																																																				&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																					五、加密函数\r\n																																																																																					&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																						AES_ENCRYPT(str,key) &amp;nbsp; 返回用密钥key对字符串str利用高级加密标准算法加密后的结果，调用AES_ENCRYPT的结果是一个二进制字符串，以BLOB类型存储\r\n																																																																																						&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																							AES_DECRYPT(str,key) &amp;nbsp; 返回用密钥key对字符串str利用高级加密标准算法解密后的结果\r\n																																																																																							&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																								DECODE(str,key) &amp;nbsp; &amp;nbsp;使用key作为密钥解密加密字符串str\r\n																																																																																								&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																									ENCRYPT(str,salt) &amp;nbsp; 使用UNIXcrypt()函数，用关键词salt(一个可以惟一确定口令的字符串，就像钥匙一样)加密字符串str\r\n																																																																																									&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																										ENCODE(str,key) &amp;nbsp; &amp;nbsp;使用key作为密钥加密字符串str，调用ENCODE()的结果是一个二进制字符串，它以BLOB类型存储\r\n																																																																																										&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																											MD5() &amp;nbsp; &amp;nbsp; 计算字符串str的MD5校验和\r\n																																																																																											&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																												PASSWORD(str) &amp;nbsp; &amp;nbsp;返回字符串str的加密版本，这个加密过程是不可逆转的，和UNIX密码加密过程使用不同的算法。\r\n																																																																																												&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																													SHA() &amp;nbsp; &amp;nbsp; 计算字符串str的安全散列算法(SHA)校验和\r\n																																																																																													&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																														&amp;nbsp;\r\n																																																																																														&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																															示例：\r\n																																																																																															&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																SELECT ENCRYPT(\'root\',\'salt\');\r\n																																																																																																&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																	SELECT ENCODE(\'xufeng\',\'key\');\r\n																																																																																																	&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																		SELECT DECODE(ENCODE(\'xufeng\',\'key\'),\'key\');#加解密放在一起\r\n																																																																																																		&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																			SELECT AES_ENCRYPT(\'root\',\'key\');\r\n																																																																																																			&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																				SELECT AES_DECRYPT(AES_ENCRYPT(\'root\',\'key\'),\'key\');\r\n																																																																																																				&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																					SELECT MD5(\'123456\');\r\n																																																																																																					&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																						SELECT SHA(\'123456\');\r\n																																																																																																						&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																							&amp;nbsp;\r\n																																																																																																							&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																								六、控制流函数\r\n																																																																																																								&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																									MySQL有4个函数是用来进行条件操作的，这些函数可以实现SQL的条件逻辑，允许开发者将一些应用程序业务逻辑转换到数据库后台。\r\n																																																																																																									&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																										&amp;nbsp;\r\n																																																																																																										&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																											MySQL控制流函数：\r\n																																																																																																											&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																												CASE WHEN[test1] THEN [result1]...ELSE [default] END 如果testN是真，则返回resultN，否则返回default\r\n																																																																																																												&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																													CASE [test] WHEN[val1] THEN [result]...ELSE [default] END &amp;nbsp; 如果test和valN相等，则返回resultN，否则返回default\r\n																																																																																																													&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																														IF(test,t,f) &amp;nbsp; 如果test是真，返回t；否则返回 f\r\n																																																																																																														&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																															IFNULL(arg1,arg2) 如果arg1不是空，返回arg1，否则返回arg2\r\n																																																																																																															&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																NULLIF(arg1,arg2) 如果arg1=arg2返回NULL；否则返回arg1\r\n																																																																																																																&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																	&amp;nbsp;\r\n																																																																																																																	&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																		这些函数的第一个是IFNULL()，它有两个参数，并且对第一个参数进行判断。如果第一个参数不是NULL，函数就会向调用者返回第一个参数；如果是NULL,将返回第二个参数。\r\n																																																																																																																		&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																			如：SELECTIFNULL(1,2), IFNULL(NULL,10), IFNULL(4*NULL,\'false\');\r\n																																																																																																																			&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																				&amp;nbsp;\r\n																																																																																																																				&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																					NULLIF()函数将会检验提供的两个参数是否相等，如果相等，则返回NULL，如果不相等，就返回第一个参数。\r\n																																																																																																																					&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																						如：SELECTNULLIF(1,1),NULLIF(\'A\',\'B\'),NULLIF(2+3,4+1);\r\n																																																																																																																						&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																							&amp;nbsp;\r\n																																																																																																																							&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																								和许多脚本语言提供的IF()函数一样，MySQL的IF()函数也可以建立一个简单的条件测试，这个函数有三个参数，第一个是要被判断的表达式，如果表达式为真，IF()将会返回第二个参数，如果为假，IF()将会返回第三个参数。\r\n																																																																																																																								&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																									如：SELECTIF(1&amp;lt;10,2,3),IF(56&amp;gt;100,\'true\',\'false\');\r\n																																																																																																																									&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																										&amp;nbsp;\r\n																																																																																																																										&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																											IF()函数在只有两种可能结果时才适合使用。然而，在现实世界中，我们可能发现在条件测试中会需要多个分支。在这种情况下，MySQL提供了CASE函数，它和PHP及Perl语言的switch-case条件例程一样。\r\n																																																																																																																											&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																												CASE函数的格式有些复杂，通常如下所示：\r\n																																																																																																																												&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																													CASE [expression to be evaluated]\r\n																																																																																																																													&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																														WHEN [val 1] THEN [result 1]\r\n																																																																																																																														&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																															WHEN [val 2] THEN [result 2]\r\n																																																																																																																															&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																WHEN [val 3] THEN [result 3]\r\n																																																																																																																																&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																	......\r\n																																																																																																																																	&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																		WHEN [val n] THEN [result n]\r\n																																																																																																																																		&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																			ELSE [default result]\r\n																																																																																																																																			&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																				END\r\n																																																																																																																																				&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																					这里，第一个参数是要被判断的值或表达式，接下来的是一系列的WHEN-THEN块，每一块的第一个参数指定要比较的值，如果为真，就返回结果。所有的WHEN-THEN块将以ELSE块结束，当END结束了所有外部的CASE块时，如果前面的每一个块都不匹配就会返回ELSE块指定的默认结果。如果没有指定ELSE块，而且所有的WHEN-THEN比较都不是真，MySQL将会返回NULL。\r\n																																																																																																																																					&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																						CASE函数还有另外一种句法，有时使用起来非常方便，如下：\r\n																																																																																																																																						&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																							CASE\r\n																																																																																																																																							&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																								WHEN [conditional test 1] THEN [result 1]\r\n																																																																																																																																								&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																									WHEN [conditional test 2] THEN [result 2]\r\n																																																																																																																																									&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																										ELSE [default result]\r\n																																																																																																																																										&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																											END\r\n																																																																																																																																											&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																												这种条件下，返回的结果取决于相应的条件测试是否为真。\r\n																																																																																																																																												&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																													示例：\r\n																																																																																																																																													&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																														mysql&amp;gt;SELECT CASE \'green\'\r\n																																																																																																																																														&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																															&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;WHEN \'red\' THEN \'stop\'\r\n																																																																																																																																															&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;WHEN \'green\' THEN \'go\' END;\r\n																																																																																																																																																&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																	&amp;nbsp;\r\n																																																																																																																																																	&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																		SELECTCASE 9 WHEN 1 THEN \'a\' WHEN 2 THEN \'b\' ELSE \'N/A\' END;\r\n																																																																																																																																																		&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																			SELECT CASE WHEN (2+2)=4 THEN \'OK\' WHEN (2+2)&amp;lt;&amp;gt;4 THEN \'not OK\' END ASSTATUS;\r\n																																																																																																																																																			&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																				SELECT Name,IF((IsActive = 1),\'已激活\',\'未激活\')AS RESULT FROM UserLoginInfo;\r\n																																																																																																																																																				&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																					SELECT fname,lname,(math+sci+lit) AS total,\r\n																																																																																																																																																					&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																						CASE WHEN (math+sci+lit) &amp;lt; 50 THEN \'D\'\r\n																																																																																																																																																						&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																							WHEN (math+sci+lit) BETWEEN 50 AND 150 THEN \'C\'\r\n																																																																																																																																																							&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																								WHEN (math+sci+lit) BETWEEN 151 AND 250 THEN \'B\'\r\n																																																																																																																																																								&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																									ELSE \'A\' END\r\n																																																																																																																																																									&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																										&amp;nbsp;AS grade FROM marks;\r\n																																																																																																																																																										&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																											&amp;nbsp;\r\n																																																																																																																																																											&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																												SELECTIF(ENCRYPT(\'sue\',\'ts\')=upass,\'allow\',\'deny\') AS LoginResult FROM users WHEREuname = \'sue\';#一个登陆验证\r\n																																																																																																																																																												&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																													&amp;nbsp;\r\n																																																																																																																																																													&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																														七、格式化函数\r\n																																																																																																																																																														&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																															DATE_FORMAT(date,fmt) &amp;nbsp; 依照字符串fmt格式化日期date值\r\n																																																																																																																																																															&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																FORMAT(x,y) &amp;nbsp; &amp;nbsp;把x格式化为以逗号隔开的数字序列，y是结果的小数位数\r\n																																																																																																																																																																&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																	INET_ATON(ip) &amp;nbsp; &amp;nbsp;返回IP地址的数字表示\r\n																																																																																																																																																																	&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																		INET_NTOA(num) &amp;nbsp; &amp;nbsp;返回数字所代表的IP地址\r\n																																																																																																																																																																		&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																			TIME_FORMAT(time,fmt) &amp;nbsp; 依照字符串fmt格式化时间time值\r\n																																																																																																																																																																			&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																				其中最简单的是FORMAT()函数，它可以把大的数值格式化为以逗号间隔的易读的序列。\r\n																																																																																																																																																																				&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																					示例：\r\n																																																																																																																																																																					&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																						SELECT FORMAT(34234.34323432,3);\r\n																																																																																																																																																																						&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																							SELECT DATE_FORMAT(NOW(),\'%W,%D %M %Y %r\');\r\n																																																																																																																																																																							&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																								SELECT DATE_FORMAT(NOW(),\'%Y-%m-%d\');\r\n																																																																																																																																																																								&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																									SELECT DATE_FORMAT(19990330,\'%Y-%m-%d\');\r\n																																																																																																																																																																									&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																										SELECT DATE_FORMAT(NOW(),\'%h:%i %p\');\r\n																																																																																																																																																																										&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																											SELECT INET_ATON(\'10.122.89.47\');\r\n																																																																																																																																																																											&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																												SELECT INET_NTOA(175790383);\r\n																																																																																																																																																																												&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																													&amp;nbsp;\r\n																																																																																																																																																																													&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																														八、类型转化函数\r\n																																																																																																																																																																														&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																															为了进行数据类型转化，MySQL提供了CAST()函数，它可以把一个值转化为指定的数据类型。类型有：BINARY,CHAR,DATE,TIME,DATETIME,SIGNED,UNSIGNED\r\n																																																																																																																																																																															&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																																示例：\r\n																																																																																																																																																																																&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																																	SELECT CAST(NOW() AS SIGNED INTEGER),CURDATE()+0;\r\n																																																																																																																																																																																	&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																																		SELECT \'f\'=BINARY \'F\',\'f\'=CAST(\'F\' AS BINARY);\r\n																																																																																																																																																																																		&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																																			&amp;nbsp;\r\n																																																																																																																																																																																			&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																																				九、系统信息函数\r\n																																																																																																																																																																																				&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																																					DATABASE() &amp;nbsp; &amp;nbsp;返回当前数据库名\r\n																																																																																																																																																																																					&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																																						BENCHMARK(count,expr) &amp;nbsp; 将表达式expr重复运行count次\r\n																																																																																																																																																																																						&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																																							CONNECTION_ID() &amp;nbsp; &amp;nbsp;返回当前客户的连接ID\r\n																																																																																																																																																																																							&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																																								FOUND_ROWS() &amp;nbsp; &amp;nbsp;返回最后一个SELECT查询进行检索的总行数\r\n																																																																																																																																																																																								&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																																									USER()或SYSTEM_USER() &amp;nbsp; 返回当前登陆用户名\r\n																																																																																																																																																																																									&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																																										VERSION() &amp;nbsp; &amp;nbsp;返回MySQL服务器的版本\r\n																																																																																																																																																																																										&lt;div style=&quot;padding:0px;margin:0px;&quot;&gt;\r\n																																																																																																																																																																																											示例：\r\n																																																																																																																																																																																											&lt;p&gt;\r\n																																																																																																																																																																																												SELECT DATABASE(),VERSION(),USER();\r\n																																																																																																																																																																																											&lt;/p&gt;\r\n																																																																																																																																																																																											&lt;p&gt;\r\n																																																																																																																																																																																												SELECT BENCHMARK(9999999,LOG(RAND()*PI()));#该例中,MySQL计算LOG(RAND()*PI())表达式9999999次。\r\n																																																																																																																																																																																											&lt;/p&gt;\r\n																																																																																																																																																																																											&lt;p&gt;\r\n																																																																																																																																																																																												来源：http://www.2cto.com/database/201310/248331.html\r\n																																																																																																																																																																																											&lt;/p&gt;\r\n																																																																																																																																																																																											&lt;p&gt;\r\n																																																																																																																																																																																												&lt;br /&gt;\r\n																																																																																																																																																																																											&lt;/p&gt;\r\n																																																																																																																																																																																										&lt;/div&gt;\r\n																																																																																																																																																																																									&lt;/div&gt;\r\n																																																																																																																																																																																								&lt;/div&gt;\r\n																																																																																																																																																																																							&lt;/div&gt;\r\n																																																																																																																																																																																						&lt;/div&gt;\r\n																																																																																																																																																																																					&lt;/div&gt;\r\n																																																																																																																																																																																				&lt;/div&gt;\r\n																																																																																																																																																																																			&lt;/div&gt;\r\n																																																																																																																																																																																		&lt;/div&gt;\r\n																																																																																																																																																																																	&lt;/div&gt;\r\n																																																																																																																																																																																&lt;/div&gt;\r\n																																																																																																																																																																															&lt;/div&gt;\r\n																																																																																																																																																																														&lt;/div&gt;\r\n																																																																																																																																																																													&lt;/div&gt;\r\n																																																																																																																																																																												&lt;/div&gt;\r\n																																																																																																																																																																											&lt;/div&gt;\r\n																																																																																																																																																																										&lt;/div&gt;\r\n																																																																																																																																																																									&lt;/div&gt;\r\n																																																																																																																																																																								&lt;/div&gt;\r\n																																																																																																																																																																							&lt;/div&gt;\r\n																																																																																																																																																																						&lt;/div&gt;\r\n																																																																																																																																																																					&lt;/div&gt;\r\n																																																																																																																																																																				&lt;/div&gt;\r\n																																																																																																																																																																			&lt;/div&gt;\r\n																																																																																																																																																																		&lt;/div&gt;\r\n																																																																																																																																																																	&lt;/div&gt;\r\n																																																																																																																																																																&lt;/div&gt;\r\n																																																																																																																																																															&lt;/div&gt;\r\n																																																																																																																																																														&lt;/div&gt;\r\n																																																																																																																																																													&lt;/div&gt;\r\n																																																																																																																																																												&lt;/div&gt;\r\n																																																																																																																																																											&lt;/div&gt;\r\n																																																																																																																																																										&lt;/div&gt;\r\n																																																																																																																																																									&lt;/div&gt;\r\n																																																																																																																																																								&lt;/div&gt;\r\n																																																																																																																																																							&lt;/div&gt;\r\n																																																																																																																																																						&lt;/div&gt;\r\n																																																																																																																																																					&lt;/div&gt;\r\n																																																																																																																																																				&lt;/div&gt;\r\n																																																																																																																																																			&lt;/div&gt;\r\n																																																																																																																																																		&lt;/div&gt;\r\n																																																																																																																																																	&lt;/div&gt;\r\n																																																																																																																																																&lt;/div&gt;\r\n																																																																																																																																															&lt;/div&gt;\r\n																																																																																																																																														&lt;/div&gt;\r\n																																																																																																																																													&lt;/div&gt;\r\n																																																																																																																																												&lt;/div&gt;\r\n																																																																																																																																											&lt;/div&gt;\r\n																																																																																																																																										&lt;/div&gt;\r\n																																																																																																																																									&lt;/div&gt;\r\n																																																																																																																																								&lt;/div&gt;\r\n																																																																																																																																							&lt;/div&gt;\r\n																																																																																																																																						&lt;/div&gt;\r\n																																																																																																																																					&lt;/div&gt;\r\n																																																																																																																																				&lt;/div&gt;\r\n																																																																																																																																			&lt;/div&gt;\r\n																																																																																																																																		&lt;/div&gt;\r\n																																																																																																																																	&lt;/div&gt;\r\n																																																																																																																																&lt;/div&gt;\r\n																																																																																																																															&lt;/div&gt;\r\n																																																																																																																														&lt;/div&gt;\r\n																																																																																																																													&lt;/div&gt;\r\n																																																																																																																												&lt;/div&gt;\r\n																																																																																																																											&lt;/div&gt;\r\n																																																																																																																										&lt;/div&gt;\r\n																																																																																																																									&lt;/div&gt;\r\n																																																																																																																								&lt;/div&gt;\r\n																																																																																																																							&lt;/div&gt;\r\n																																																																																																																						&lt;/div&gt;\r\n																																																																																																																					&lt;/div&gt;\r\n																																																																																																																				&lt;/div&gt;\r\n																																																																																																																			&lt;/div&gt;\r\n																																																																																																																		&lt;/div&gt;\r\n																																																																																																																	&lt;/div&gt;\r\n																																																																																																																&lt;/div&gt;\r\n																																																																																																															&lt;/div&gt;\r\n																																																																																																														&lt;/div&gt;\r\n																																																																																																													&lt;/div&gt;\r\n																																																																																																												&lt;/div&gt;\r\n																																																																																																											&lt;/div&gt;\r\n																																																																																																										&lt;/div&gt;\r\n																																																																																																									&lt;/div&gt;\r\n																																																																																																								&lt;/div&gt;\r\n																																																																																																							&lt;/div&gt;\r\n																																																																																																						&lt;/div&gt;\r\n																																																																																																					&lt;/div&gt;\r\n																																																																																																				&lt;/div&gt;\r\n																																																																																																			&lt;/div&gt;\r\n																																																																																																		&lt;/div&gt;\r\n																																																																																																	&lt;/div&gt;\r\n																																																																																																&lt;/div&gt;\r\n																																																																																															&lt;/div&gt;\r\n																																																																																														&lt;/div&gt;\r\n																																																																																													&lt;/div&gt;\r\n																																																																																												&lt;/div&gt;\r\n																																																																																											&lt;/div&gt;\r\n																																																																																										&lt;/div&gt;\r\n																																																																																									&lt;/div&gt;\r\n																																																																																								&lt;/div&gt;\r\n																																																																																							&lt;/div&gt;\r\n																																																																																						&lt;/div&gt;\r\n																																																																																					&lt;/div&gt;\r\n																																																																																				&lt;/div&gt;\r\n																																																																																			&lt;/div&gt;\r\n																																																																																		&lt;/div&gt;\r\n																																																																																	&lt;/div&gt;\r\n																																																																																&lt;/div&gt;\r\n																																																																															&lt;/div&gt;\r\n																																																																														&lt;/div&gt;\r\n																																																																													&lt;/div&gt;\r\n																																																																												&lt;/div&gt;\r\n																																																																											&lt;/div&gt;\r\n																																																																										&lt;/div&gt;\r\n																																																																									&lt;/div&gt;\r\n																																																																								&lt;/div&gt;\r\n																																																																							&lt;/div&gt;\r\n																																																																						&lt;/div&gt;\r\n																																																																					&lt;/div&gt;\r\n																																																																				&lt;/div&gt;\r\n																																																																			&lt;/div&gt;\r\n																																																																		&lt;/div&gt;\r\n																																																																	&lt;/div&gt;\r\n																																																																&lt;/div&gt;\r\n																																																															&lt;/div&gt;\r\n																																																														&lt;/div&gt;\r\n																																																													&lt;/div&gt;\r\n																																																												&lt;/div&gt;\r\n																																																											&lt;/div&gt;\r\n																																																										&lt;/div&gt;\r\n																																																									&lt;/div&gt;\r\n																																																								&lt;/div&gt;\r\n																																																							&lt;/div&gt;\r\n																																																						&lt;/div&gt;\r\n																																																					&lt;/div&gt;\r\n																																																				&lt;/div&gt;\r\n																																																			&lt;/div&gt;\r\n																																																		&lt;/div&gt;\r\n																																																	&lt;/div&gt;\r\n																																																&lt;/div&gt;\r\n																																															&lt;/div&gt;\r\n																																														&lt;/div&gt;\r\n																																													&lt;/div&gt;\r\n																																												&lt;/div&gt;\r\n																																											&lt;/div&gt;\r\n																																										&lt;/div&gt;\r\n																																									&lt;/div&gt;\r\n																																								&lt;/div&gt;\r\n																																							&lt;/div&gt;\r\n																																						&lt;/div&gt;\r\n																																					&lt;/div&gt;\r\n																																				&lt;/div&gt;\r\n																																			&lt;/div&gt;\r\n																																		&lt;/div&gt;\r\n																																	&lt;/div&gt;\r\n																																&lt;/div&gt;\r\n																															&lt;/div&gt;\r\n																														&lt;/div&gt;\r\n																													&lt;/div&gt;\r\n																												&lt;/div&gt;\r\n																											&lt;/div&gt;\r\n																										&lt;/div&gt;\r\n																									&lt;/div&gt;\r\n																								&lt;/div&gt;\r\n																							&lt;/div&gt;\r\n																						&lt;/div&gt;\r\n																					&lt;/div&gt;\r\n																				&lt;/div&gt;\r\n																			&lt;/div&gt;\r\n																		&lt;/div&gt;\r\n																	&lt;/div&gt;\r\n																&lt;/div&gt;\r\n															&lt;/div&gt;\r\n														&lt;/div&gt;\r\n													&lt;/div&gt;\r\n												&lt;/div&gt;\r\n											&lt;/div&gt;\r\n										&lt;/div&gt;\r\n									&lt;/div&gt;\r\n								&lt;/div&gt;\r\n							&lt;/div&gt;\r\n						&lt;/div&gt;\r\n					&lt;/div&gt;\r\n				&lt;/div&gt;\r\n			&lt;/div&gt;\r\n		&lt;/div&gt;\r\n	&lt;/div&gt;\r\n&lt;/div&gt;', '1', '12', '1495790131', '小兔', null, '0', '1');
INSERT INTO `article` VALUES ('48', 'php 简单的hash表存储算法', 'hash', '&lt;p&gt;简单的hash算法，值有重复时采用链表的方式存储&lt;/p&gt;&lt;pre class=&quot;brush:php;toolbar:false&quot;&gt;class&amp;nbsp;HashNode{\r\n	public&amp;nbsp;$key,$value,$nexNode;\r\n	public&amp;nbsp;function&amp;nbsp;__construct($key,$value,$nexNode=Null){\r\n		$this-&amp;gt;key=$key;\r\n		$this-&amp;gt;value=$value;\r\n		$this-&amp;gt;nexNode=$nexNode;\r\n	}\r\n}\r\n\r\nclass&amp;nbsp;NewHashTable{\r\n	private&amp;nbsp;$arr,$size=10;\r\n	public&amp;nbsp;function&amp;nbsp;__construct(){\r\n		$this-&amp;gt;arr=new&amp;nbsp;SplFixedArray($this-&amp;gt;size);\r\n	}\r\n	private&amp;nbsp;function&amp;nbsp;simpleHash($key){\r\n		$asciitotal=0;\r\n		$len=strlen($key);\r\n		for&amp;nbsp;($i=0;$i&amp;lt;$len;$i++){\r\n			$asciitotal+=ord($key[$i]);\r\n		}\r\n		return&amp;nbsp;$asciitotal&amp;nbsp;%&amp;nbsp;$this-&amp;gt;size;\r\n	}\r\n	public&amp;nbsp;function&amp;nbsp;set($key,$value){\r\n		$hash=$this-&amp;gt;simpleHash($key);\r\n		//拉链法,链表\r\n		if(isset($this-&amp;gt;arr[$hash])){\r\n			$newNode=new&amp;nbsp;HashNode($key,&amp;nbsp;$value,$this-&amp;gt;arr[$hash]);\r\n		}else{\r\n			$newNode=new&amp;nbsp;HashNode($key,&amp;nbsp;$value,Null);\r\n		}\r\n		$this-&amp;gt;arr[$hash]=$newNode;\r\n		return&amp;nbsp;true;\r\n	}\r\n	\r\n	public&amp;nbsp;function&amp;nbsp;get($key){\r\n		$hash=$this-&amp;gt;simpleHash($key);\r\n		$current=$this-&amp;gt;arr[$hash];\r\n		while&amp;nbsp;(!empty($current)){\r\n			if($current-&amp;gt;key&amp;nbsp;==&amp;nbsp;$key){\r\n				return&amp;nbsp;$current-&amp;gt;value;\r\n			}else{\r\n				$current=$current-&amp;gt;nextNode;\r\n			}\r\n		}\r\n	}\r\n	\r\n	public&amp;nbsp;function&amp;nbsp;getList(){\r\n		return&amp;nbsp;$this-&amp;gt;arr;\r\n	}\r\n}\r\n\r\n$newArr=new&amp;nbsp;NewHashTable();\r\nfor&amp;nbsp;($i=0;$i&amp;lt;30;$i++){\r\n	$newArr-&amp;gt;set(&amp;#39;key&amp;#39;.$i,&amp;nbsp;&amp;#39;value&amp;#39;.$i);\r\n}\r\nvar_export($newArr-&amp;gt;getList());&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '1', '0', '1510889499', '小兔', null, '0', '1');
INSERT INTO `article` VALUES ('49', 'thinkphp框架报错：_STORAGE_WRITE_ERROR_', '_STORAGE_WRITE_ERROR_,setenforce,setlinux', '&lt;p&gt;&lt;font color=&quot;#323232&quot; face=&quot;Century Gothic, Microsoft yahei&quot;&gt;&lt;span style=&quot;line-height: 28.8px; background-color: rgb(255, 255, 255);&quot;&gt;使用的是thinkphp框架，刚搭建了服务器安装好了php环境，跑程序报了以下错误：&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(50, 50, 50); font-family: &amp;quot;Century Gothic&amp;quot;, &amp;quot;Microsoft yahei&amp;quot;; line-height: 28.8px; background-color: rgb(255, 255, 255);&quot;&gt;_STORAGE_WRITE_ERROR_:./Application/Runtime/Cache/User/788524be80db1959c132efbce25367a0.php&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(50, 50, 50); font-family: &amp;quot;Century Gothic&amp;quot;, &amp;quot;Microsoft yahei&amp;quot;; line-height: 28.8px; background-color: rgb(255, 255, 255);&quot;&gt;错误位置&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(50, 50, 50); font-family: &amp;quot;Century Gothic&amp;quot;, &amp;quot;Microsoft yahei&amp;quot;; line-height: 28.8px; background-color: rgb(255, 255, 255);&quot;&gt;FILE: /data/web/partTime/ThinkPHP/Library/Think/Storage/Driver/File.class.php 　LINE: 47&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(50, 50, 50); font-family: &amp;quot;Century Gothic&amp;quot;, &amp;quot;Microsoft yahei&amp;quot;; line-height: 28.8px; background-color: rgb(255, 255, 255);&quot;&gt;--------------------------------------&lt;/span&gt;&lt;br/&gt;一般情况有以下几种情况：&lt;/p&gt;&lt;ol class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: decimal;&quot;&gt;&lt;li&gt;&lt;p&gt;该工作区间没有足够空间，删除大的缓存或日志文件。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;查看Runtime是否有足够的读写权限，及用户组是否有权限，用chomd命令赋权限。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;还有一种是setlinux防火墙的问题，有强制模式和宽松模式，强制模式下进程只能访问任务列表下的文件&lt;/p&gt;&lt;p&gt;所以要把setlinux改成宽松模式，临时设置命令setenforce 0，可以修改配置不过需要重启服务器&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;', '1', '13', '1514260221', '小兔', null, '0', '2');
INSERT INTO `article` VALUES ('51', '什么是函数式编程思维？', '函数式编程思维，命令式编程思维', '&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;函数式编程与命令式编程最大的不同其实在于：&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;&lt;span style=&quot;font-weight: bolder;&quot;&gt;函数式编程关心数据的映射，命令式编程关心解决问题的步骤&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;这里的映射就是数学上“函数”的概念——一种东西和另一种东西之间的对应关系。&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;这也是为什么“函数式编程”叫做“函数式编程”。&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;这是什么意思呢？&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;假如，现在你来到 google 面试，面试官让你把二叉树镜像反转一下（大雾&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;几乎不假思索的，就可以写出这样的 Python 代码：&lt;/p&gt;&lt;table style=&quot;width: 785px; color: rgb(74, 74, 74); font-family: Monaco, Menlo, Consolas, &amp;quot;Microsoft Yahei&amp;quot;, monospace; font-size: 13px;&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;firstRow&quot;&gt;&lt;td class=&quot;code&quot; style=&quot;margin: auto 5px;&quot;&gt;&lt;pre style=&quot;font-family: inherit; margin: auto; overflow-x: auto; line-height: 1.6em;&quot;&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt;&lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(121, 93, 163);&quot;&gt;invertTree&lt;/span&gt;(root):&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt;&lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;if&lt;/span&gt; root &lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt;&lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt;&lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;if&lt;/span&gt; root.left:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;invertTree(root.left)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt;&lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;if&lt;/span&gt; root.right:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;invertTree(root.right)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt; &amp;nbsp; &amp;nbsp;root.left, root.right = root.right, root.left&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt;&lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; root&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;好了，现在停下来看看这段代码究竟代表着什么——&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;它的含义是：首先判断节点是否为空；然后翻转左树；然后翻转右树；最后左右互换。&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;这就是命令式编程——你要做什么事情，你得把达到目的的步骤详细的描述出来，然后交给机器去运行。&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;这也正是命令式编程的理论模型——图灵机的特点。一条写满数据的纸带，一条根据纸带内容运动的机器，机器每动一步都需要纸带上写着如何达到。&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;那么，不用这种方式，如何翻转二叉树呢？&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;函数式思维提供了另一种思维的途径——&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;所谓“翻转二叉树”，可以看做是要得到一颗和原来二叉树对称的新二叉树。&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;这颗新二叉树的特点是每一个节点都递归地和原树相反。&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;用 haskell 代码表达出来就是：&lt;/p&gt;&lt;pre style=&quot;font-family: inherit; font-size: 13px; margin: auto; overflow-x: auto; line-height: 1.6em; color: rgb(74, 74, 74);&quot;&gt;&lt;br/&gt;&lt;/pre&gt;&lt;table style=&quot;width: 785px; color: rgb(74, 74, 74); font-family: Monaco, Menlo, Consolas, &amp;quot;Microsoft Yahei&amp;quot;, monospace; font-size: 13px;&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;firstRow&quot;&gt;&lt;td class=&quot;code&quot; style=&quot;margin: auto 5px;&quot;&gt;&lt;pre style=&quot;font-family: inherit; margin: auto; overflow-x: auto; line-height: 1.6em;&quot;&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt;&lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;type&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;Tree&lt;/span&gt; a = &lt;span class=&quot;type&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;Nil&lt;/span&gt; | &lt;span class=&quot;type&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;Node&lt;/span&gt; a (&lt;span class=&quot;type&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;Tree&lt;/span&gt; &lt;span class=&quot;title&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(121, 93, 163);&quot;&gt;a&lt;/span&gt;) (&lt;span class=&quot;type&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;Tree&lt;/span&gt; &lt;span class=&quot;title&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(121, 93, 163);&quot;&gt;a&lt;/span&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt;&lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;deriving&lt;/span&gt; (&lt;span class=&quot;type&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;Show&lt;/span&gt;, &lt;span class=&quot;type&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;Eq&lt;/span&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt;&lt;span class=&quot;title&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(121, 93, 163);&quot;&gt;invert&lt;/span&gt; :: &lt;span class=&quot;type&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;Tree&lt;/span&gt; a -&amp;gt; &lt;span class=&quot;type&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;Tree&lt;/span&gt; a&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt;&lt;span class=&quot;title&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(121, 93, 163);&quot;&gt;invert&lt;/span&gt; &lt;span class=&quot;type&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;Nil&lt;/span&gt; = &lt;span class=&quot;type&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;Nil&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt;&lt;span class=&quot;title&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(121, 93, 163);&quot;&gt;invert&lt;/span&gt; (&lt;span class=&quot;type&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;Node&lt;/span&gt; v l r) = &lt;span class=&quot;type&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;Node&lt;/span&gt; v (invert r) (invert l)&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;（防止看不懂，翻译成等价的 python ）&lt;/p&gt;&lt;pre style=&quot;font-family: inherit; font-size: 13px; margin: auto; overflow-x: auto; line-height: 1.6em; color: rgb(74, 74, 74);&quot;&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt;&lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(121, 93, 163);&quot;&gt;invert&lt;/span&gt;(node):&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt;&lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;if&lt;/span&gt; node &lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt;&lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93); background-color: rgb(250, 192, 143);&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 192, 143);&quot;&gt;&lt;span class=&quot;keyword&quot; style=&quot;background-color: rgb(250, 192, 143); color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; Tree(node.value, invert(node.right), invert(node.left))&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;这段代码最终达到的目的同样是翻转二叉树，但是它得到结果的方式和 python 代码有着本质的差别：通过描述一个 旧树-&amp;gt;新树 的映射，而不是描述“从旧树得到新树应该怎样做”来达到目的。这段代码体现的思维，就是旧树到新树的映射——对一颗二叉树而言，它的镜像树就是左右节点递归镜像的树。&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;那么这样思考有什么好处呢？&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;首先，最直观的角度来说，函数式风格的代码可以写得很精简，大大减少了键盘的损耗（&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;更重要的是，函数式的代码是“对映射的描述”，它不仅可以描述二叉树这样的数据结构之间的对应关系，任何能在计算机中体现的东西之间的对应关系都可以描述——比如函数和函数之间的映射（比如 functor）；比如外部操作到 GUI 之间的映射（就是现在前端热炒的所谓 FRP）。它的抽象程度可以很高，这就意味着函数式的代码可以更方便的复用。&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;同时，将代码写成这种样子可以方便用数学的方法进行研究（这就是为什么可以扯上“___范畴上的___”这种数学上的高深概念）&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;至于什么科里化、什么数据不可变，都只是外延体现而已。&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(74, 74, 74); font-family: &amp;quot;Source Han Serif&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: medium;&quot;&gt;来源：https://hcyue.me/2016/05/14/%E4%BB%80%E4%B9%88%E6%98%AF%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E6%80%9D%E7%BB%B4/&lt;/p&gt;', '1', '0', '1514518507', '小兔', null, '0', '2');
INSERT INTO `article` VALUES ('52', 'centos7 Nat模式上网配置', '', '&lt;p&gt;在配置前是得安装好了vmware10和centos7.&lt;/p&gt;&lt;p&gt;第一步：虚拟网络编辑&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180106/1515210423968731.png&quot; title=&quot;1515210423968731.png&quot; alt=&quot;TIM截图20180106114551.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;点击虚拟网络编辑到达以下界面&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180106/1515210509118092.png&quot; title=&quot;1515210509118092.png&quot; alt=&quot;TIM截图20180106114809.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;看你是否有名称为VMnet8 如果没有点击添加网络，如图&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180106/1515210589572925.png&quot; title=&quot;1515210589572925.png&quot; alt=&quot;TIM截图20180106114931.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;我因为有了VMnet8所以没有显示出来&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180106/1515219323665486.png&quot; title=&quot;1515219323665486.png&quot; alt=&quot;TIM截图20180106141319.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;然后选择VMnet8 点击Nat设置&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180106/1515219360586308.png&quot; title=&quot;1515219360586308.png&quot; alt=&quot;TIM截图20180106141514.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;点击添加&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180106/1515219410262407.png&quot; title=&quot;1515219410262407.png&quot; alt=&quot;TIM截图20180106141641.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;在这里添加虚拟机的静态ip 添加端口ssh，后面还可以陆续添加mysql，apache端口&lt;/p&gt;&lt;p&gt;第一步就到这里完成了&lt;/p&gt;&lt;p&gt;第二部：&lt;/p&gt;&lt;p&gt;先进入/etc/sysconfig/network-scripts&lt;/p&gt;&lt;p&gt;然后备份ifcfg-ens33&amp;nbsp;&lt;/p&gt;&lt;p&gt;命令：cp ifcfg-ens33 ifcfg-ens33.bak&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180106/1515219717118926.png&quot; title=&quot;1515219717118926.png&quot; alt=&quot;TIM截图20180106142031.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;然后修改ifcfg-ens33&lt;/p&gt;&lt;p&gt;命令：vi ifcfg-ens33&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180106/1515219845704817.png&quot; title=&quot;1515219845704817.png&quot; alt=&quot;TIM截图20180106142330.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;BOOTPROTO=DHCP&amp;nbsp; 改成static&lt;/p&gt;&lt;p&gt;ONBOOT=no 改成yes&lt;/p&gt;&lt;p&gt;添加ip、网关、dns&lt;/p&gt;&lt;p&gt;保存后重启network&lt;/p&gt;&lt;p&gt;命令：systemctl restarrt network&lt;/p&gt;&lt;p&gt;测试命令：ping &lt;a href=&quot;http://www.baidu.com&quot;&gt;www.baidu.com&lt;/a&gt; &lt;/p&gt;&lt;p&gt;第二部完成，&lt;/p&gt;&lt;p&gt;第三部：&lt;/p&gt;&lt;p&gt;现在虚拟机可以上网了，但宿主机还ping不同虚拟机所以要设置相同网段。&lt;/p&gt;&lt;p&gt;打开网络共享中心-&amp;gt;更改适配器设置&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180106/1515220221908185.png&quot; title=&quot;1515220221908185.png&quot; alt=&quot;TIM截图20180106143001.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;设置好就可以虚拟机和宿主机互相ping通了&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;有时侯会出现默认网关GATEWAY不可用，换个网关ip就可以了&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;', '1', '3', '1519270110', '小兔', null, '0', '5');
INSERT INTO `article` VALUES ('53', 'centos7 安装Java环境', 'centos7 java', '&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; background-color: rgb(254, 254, 254);&quot;&gt;Java 环境可选择 Oracle 的 JDK，或是 OpenJDK，现在一般 Linux 系统默认安装的基本是 OpenJDK，如 CentOS 6.4 就默认安装了 OpenJDK 1.7。按&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://wiki.apache.org/hadoop/HadoopJavaVersions&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; background: 0px 0px rgb(254, 254, 254); color: rgb(32, 128, 223); text-decoration-line: none; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;http://wiki.apache.org/hadoop/HadoopJavaVersions&lt;/a&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; background-color: rgb(254, 254, 254);&quot;&gt;&amp;nbsp;中说的，Hadoop 在 OpenJDK 1.7 下运行是没问题的。需要注意的是，CentOS 6.4 中默认安装的只是 Java JRE，而不是 JDK，为了开发方便，我们还是需要通过 yum 进行安装 JDK，安装过程中会让输入 [y/N]，输入 y 即可：&lt;/span&gt;&lt;span style=&quot;background-color: rgb(247, 150, 70);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(247, 150, 70);&quot;&gt;$&amp;nbsp;&amp;nbsp;&lt;span class=&quot;kwd&quot; style=&quot;background-color: rgb(247, 150, 70); box-sizing: border-box;&quot;&gt;sudo yum install java-1.7.0-openjdk java-1.7.0-openjdk-devel&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; background-color: rgb(254, 254, 254);&quot;&gt;通过上述命令安装 OpenJDK，默认安装位置为 /usr/lib/jvm/java-1.7.0-openjdk（该路径可以通过执行&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 14.4px; padding: 4px 6px; background-color: rgb(254, 233, 204); border-radius: 3px; vertical-align: middle;&quot;&gt;rpm -ql java-1.7.0-openjdk-devel | grep &amp;#39;/bin/javac&amp;#39;&lt;/code&gt;&amp;nbsp;命令确定，执行后会输出一个路径，除去路径末尾的 “/bin/javac”，剩下的就是正确的路径了）。OpenJDK 安装后就可以直接使用 java、javac 等命令了。&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; background-color: rgb(254, 254, 254);&quot;&gt;接着需要配置一下 JAVA_HOME 环境变量，为方便，我们在 ~/.bashrc 中进行设置（扩展阅读:&amp;nbsp;&lt;a href=&quot;http://www.powerxing.com/linux-environment-variable/&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; background: 0px 0px; color: rgb(32, 128, 223); text-decoration-line: none;&quot;&gt;设置Linux环境变量的方法和区别&lt;/a&gt;）：&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; background-color: rgb(254, 254, 254);&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 150, 70);&quot;&gt;&lt;span class=&quot;kwd&quot; style=&quot;background-color: rgb(247, 150, 70); box-sizing: border-box; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;$&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: rgb(0, 0, 0); font-family: sans-serif; background-color: rgb(247, 150, 70); box-sizing: border-box;&quot;&gt;vim ~/.bashrc&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; background-color: rgb(254, 254, 254);&quot;&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif;&quot;&gt;在文件最后面添加如下单独一行（指向 JDK 的安装位置），并保存：&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: sans-serif; background-color: rgb(247, 150, 70); box-sizing: border-box;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(247, 150, 70); box-sizing: border-box;&quot;&gt;export JAVA_HOME=/usr/lib/jvm/java-1.7.0-openjdk&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(247, 150, 70); box-sizing: border-box;&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180106/1515231185106680.png&quot; title=&quot;1515231185106680.png&quot; alt=&quot;TIM截图20180106173252.png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;接着还需要让该环境变量生效，执行如下代码：&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; background-color: rgb(254, 254, 254);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(247, 150, 70);&quot;&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: rgb(0, 0, 0); box-sizing: border-box;&quot;&gt;$source ~/.bashrc &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color: rgb(0, 0, 0); box-sizing: border-box; font-style: italic;&quot;&gt;# 使变量设置生效&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(247, 150, 70); color: rgb(0, 0, 0); box-sizing: border-box; font-style: italic;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; background-color: rgb(254, 254, 254);&quot;&gt;设置好后我们来检验一下是否设置正确：&lt;/span&gt;&lt;span style=&quot;background-color: rgb(247, 150, 70); color: rgb(0, 0, 0); box-sizing: border-box; font-style: italic;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(247, 150, 70); color: rgb(0, 0, 0); box-sizing: border-box; font-style: italic;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(247, 150, 70);&quot;&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: rgb(0, 0, 0); background-color: rgb(247, 150, 70); box-sizing: border-box;&quot;&gt;$&amp;nbsp; echo $JAVA_HOME &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color: rgb(0, 0, 0); background-color: rgb(247, 150, 70); box-sizing: border-box; font-style: italic;&quot;&gt;# 检验变量值&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;box-sizing: border-box; color: rgb(0, 0, 0); background-color: rgb(247, 150, 70);&quot;&gt;$&amp;nbsp; java -version&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(247, 150, 70);&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;color: rgb(0, 0, 0); background-color: rgb(247, 150, 70); box-sizing: border-box;&quot;&gt;$&amp;nbsp; $JAVA_HOME/bin/java -version &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color: rgb(0, 0, 0); background-color: rgb(247, 150, 70); box-sizing: border-box; font-style: italic;&quot;&gt;# 与直接执行 java -version 一样&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(247, 150, 70);&quot;&gt;&lt;span class=&quot;com&quot; style=&quot;color: rgb(0, 0, 0); background-color: rgb(247, 150, 70); box-sizing: border-box; font-style: italic;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(247, 150, 70); box-sizing: border-box;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;', '1', '3', '1515231384', '小兔', null, '0', '5');
INSERT INTO `article` VALUES ('54', 'linux centos 目录结构', '', '&lt;p&gt;&lt;strong style=&quot;color: rgb(0, 0, 255); font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: small; background-color: rgb(239, 239, 239);&quot;&gt;&amp;nbsp;linux 目录结构&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;color: rgb(0, 0, 255); font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: small; background-color: rgb(239, 239, 239);&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180110/1515553108127386.png&quot; title=&quot;1515553108127386.png&quot; alt=&quot;e063287e-07a0-333e-b4f5-9e418ec52ce1.png&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;color: rgb(0, 0, 255); font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: small; background-color: rgb(239, 239, 239);&quot;&gt;&lt;/strong&gt;&lt;strong style=&quot;font-size: small; background-color: rgb(239, 239, 239); font-family: Helvetica, Tahoma, Arial, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&lt;span style=&quot;font-size: small; background-color: rgb(239, 239, 239); font-family: Helvetica, Tahoma, Arial, sans-serif;&quot;&gt;根目录，一般根目录下只存放目录，不要存放文件，/etc、/bin、/dev、/lib、/sbin应该和根目录放置在一个分区中&lt;/span&gt;&lt;strong style=&quot;color: rgb(0, 0, 255); font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: small; background-color: rgb(239, 239, 239);&quot;&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/bin:/usr/bin:&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;可执行二进制文件的目录，如常用的命令ls、tar、mv、cat等。&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/boot：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;放置linux系统启动时用到的一些文件。/boot/vmlinuz为linux的内核文件，以及/boot/gurb。建议单独分区，分区大小100M即可&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/dev：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，常用的是挂载光驱mount /dev/cdrom /mnt。&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/etc：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;系统配置文件存放的目录，不建议在此目录下存放可执行文件，重要的配置文件有/etc/inittab、/etc/fstab、/etc/init.d、/etc/X11、/etc/sysconfig、/etc/xinetd.d修改配置文件之前记得备份。注：/etc/X11存放与x windows有关的设置。&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/home：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;系统默认的用户家目录，新增用户账号时，用户的家目录都存放在此目录下，~表示当前用户的家目录，~test表示用户test的家目录。建议单独分区，并设置较大的磁盘空间，方便用户存放数据&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/lib:/usr/lib:/usr/local/lib：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;系统使用的函数库的目录，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助，比较重要的目录为/lib/modules。&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/lost+fount：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;系统异常产生错误时，会将一些遗失的片段放置于此目录下，通常这个目录会自动出现在装置目录下。如加载硬盘于/disk 中，此目录下就会自动产生目录/disk/lost+found&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/mnt:/media：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;光盘默认挂载点，通常光盘挂载于/mnt/cdrom下，也不一定，可以选择任意位置进行挂载。&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/opt：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;给主机额外安装软件所摆放的目录。如：FC4使用的Fedora 社群开发软件，如果想要自行安装新的KDE 桌面软件，可以将该软件安装在该目录下。以前的 Linux 系统中，习惯放置在 /usr/local 目录下&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;此目录的数据都在内存中，如系统核心，外部设备，网络状态，由于数据都存放于内存中，所以不占用磁盘空间，比较重要的目录有/proc/cpuinfo、/proc/interrupts、/proc/dma、/proc/ioports、/proc/net/*等&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/root：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;系统管理员root的家目录，系统第一个启动的分区为/，所以最好将/root和/放置在一个分区下。&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/sbin:/usr/sbin:/usr/local/sbin：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;放置系统管理员使用的可执行命令，如fdisk、shutdown、mount等。与/bin不同的是，这几个目录是给系统管理员root使用的命令，一般用户只能&amp;quot;查看&amp;quot;而不能设置和使用。&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/tmp：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;一般用户或正在执行的程序临时存放文件的目录,任何人都可以访问,重要数据不可放置在此目录下&lt;br/&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-size: small;&quot;&gt;&lt;strong&gt;/srv：&lt;/strong&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;服务启动之后需要访问的数据目录，如www服务需要访问的网页数据存放在/srv/www内&lt;br/&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-size: small;&quot;&gt;&lt;strong&gt;/usr：&lt;/strong&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;应用程序存放目录，&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/usr/bin&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;存放应用程序，&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0); font-size: small;&quot;&gt;&lt;strong&gt;/usr/share&lt;/strong&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;存放共享数据，&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/usr/lib&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;存放不能直接运行的，却是许多程序运行所必需的一些函数库文件。/usr/local:存放软件升级包。&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/usr/share/doc:&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;系统说明文件存放目录。&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/usr/share/man:&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;程序说明文件存放目录，使用 man ls时会查询/usr/share/man/man1/ls.1.gz的内容建议单独分区，设置较大的磁盘空间&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/var：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;放置系统执行过程中经常变化的文件，如随时更改的日志文件&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0); font-size: small;&quot;&gt;&lt;strong&gt;/var/log，/var/log/message：&lt;/strong&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;所有的登录文件存放目录，&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/var/spool/mail：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;邮件存放的目录，&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0); font-size: small;&quot;&gt;&lt;strong&gt;/var/run:&lt;/strong&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;程序或服务启动&lt;br/&gt;&lt;br/&gt;后，其PID存放在该目录下。建议单独分区，设置较大的磁盘空间&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(0, 0, 255); font-size: small;&quot;&gt;/dev：&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;目录&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　dev是设备(device)的英文缩写。/dev这个目录对所有的用户都十分重要。因为在这个目录中包含了所有Linux系统中使用的外部设备。但是这里并不是放的外部设备的驱动程序，这一点和&lt;br/&gt;&lt;br/&gt;windows,dos操作系统不一样。它实际上是一个访问这些外部设备的端口。我们可以非常方便地去访问这些外部设备，和访问一个文件，一个目录没有任何区别。&lt;br/&gt;&lt;br/&gt;　　Linux沿袭Unix的风格，将所有设备认成是一个文件。&lt;br/&gt;&lt;br/&gt;　　设备文件分为两种：块设备文件(b)和字符设备文件(c)&lt;br/&gt;&lt;br/&gt;　　设备文件一般存放在/dev目录下，对常见设备文件作如下说明：&lt;br/&gt;&lt;br/&gt;　　/dev/hd[a-t]：IDE设备&lt;br/&gt;&lt;br/&gt;　　/dev/sd[a-z]：SCSI设备&lt;br/&gt;&lt;br/&gt;　　/dev/fd[0-7]：标准软驱&lt;br/&gt;&lt;br/&gt;　　/dev/md[0-31]：软raid设备&lt;br/&gt;&lt;br/&gt;　　/dev/loop[0-7]：本地回环设备&lt;br/&gt;&lt;br/&gt;　　/dev/ram[0-15]：内存&lt;br/&gt;&lt;br/&gt;　　/dev/null：无限数据接收设备,相当于黑洞&lt;br/&gt;&lt;br/&gt;　　/dev/zero：无限零资源&lt;br/&gt;&lt;br/&gt;　　/dev/tty[0-63]：虚拟终端&lt;br/&gt;&lt;br/&gt;　　/dev/ttyS[0-3]：串口&lt;br/&gt;&lt;br/&gt;　　/dev/lp[0-3]：并口&lt;br/&gt;&lt;br/&gt;　　/dev/console：控制台&lt;br/&gt;&lt;br/&gt;　　/dev/fb[0-31]：framebuffer&lt;br/&gt;&lt;br/&gt;　　/dev/cdrom =&amp;gt; /dev/hdc&lt;br/&gt;&lt;br/&gt;　　/dev/modem =&amp;gt; /dev/ttyS[0-9]&lt;br/&gt;&lt;br/&gt;　　/dev/pilot =&amp;gt; /dev/ttyS[0-9]&lt;br/&gt;&lt;br/&gt;　　/dev/random：随机数设备&lt;br/&gt;&lt;br/&gt;　　/dev/urandom：随机数设备&lt;br/&gt;&lt;br/&gt;　　(PS：随机数设备，后面我会再写篇博客总结一下)&lt;br/&gt;&lt;br/&gt;　　/dev目录下的节点是怎么创建的?&lt;br/&gt;&lt;br/&gt;　　devf或者udev会自动帮你创建得。&lt;br/&gt;&lt;br/&gt;　　kobject是sysfs文件系统的基础，udev通过监测、检测sysfs来获取新创建的设备的。&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/etc：&amp;nbsp;目录&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　包含很多文件.许多网络配置文件也在/etc 中.&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/etc/rc&amp;nbsp;&amp;nbsp; or /etc/rc.d&amp;nbsp;&amp;nbsp; or /etc/rc*.d&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;　　启动、或改变运行级时运行的scripts或scripts的目录.&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/etc/passwd&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　用户数据库，其中的域给出了用户名、真实姓名、家目录、加密的口令和用户的其他信息.&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/etc/fstab&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　启动时mount -a命令(在/etc/rc 或等效的启动文件中)自动mount的文件系统列表. Linux下，也包括用swapon -a启用的swap区的信息.&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/etc/group&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&lt;br/&gt;　　类似/etc/passwd ，但说明的不是用户而是组.&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/etc/inittab&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　init 的配置文件.&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/etc/issue&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　getty 在登录提示符前的输出信息.通常包括系统的一段短说明或欢迎信息.内容由系统管理员确定.&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/etc/motd&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　Message Of The Day，成功登录后自动输出.内容由系统管理员确定.经常用于通告信息，如计划关机时间的警告.&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/etc/mtab&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　当前安装的文件系统列表.由scripts初始化，并由mount 命令自动更新.需要一个当前安装的文件系统的列表时使用，例如df 命令.&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/etc/shadow&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　在安装了影子口令软件的系统上的影子口令文件.影子口令文件将/etc/passwd 文件中的加密口令移动到/etc/shadow 中，而后者只对root可读.这使破译口令更困难.&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/etc/login.defs&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　login 命令的配置文件.&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/etc/printcap&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　类似/etc/termcap ，但针对打印机.语法不同.&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/etc/profile , /etc/csh.login , /etc/csh.cshrc&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　登录或启动时Bourne或C shells执行的文件.这允许系统管理员为所有用户建立全局缺省环境.&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/etc/securetty&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　确认安全终端，即哪个终端允许root登录.一般只列出虚拟控制台，这样就不可能(至少很困难)通过modem或网络闯入系统并得到超级用户特权.&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/etc/shells&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&lt;br/&gt;　　列出可信任的shell.chsh 命令允许用户在本文件指定范围内改变登录shell.提供一台机器FTP服务的服务进程ftpd 检查用户shell是否列在 /etc/shells 文件中，如果不是将不允许该用户登录.&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/etc/sysconfig&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&lt;br/&gt;　　网络配置相关目录&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255); font-size: small;&quot;&gt;&lt;strong&gt;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;/strong&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; background-color: rgb(239, 239, 239);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/proc：&amp;nbsp;目录&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;档名&amp;nbsp;&amp;nbsp;&amp;nbsp; 文件内容&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc/cmdline&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp; 加载 kernel 时所下达的相关参数！查阅此文件，可了解系统是如何启动的！&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc/cpuinfo&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp; 本机的 CPU 的相关资讯，包含时脉、类型与运算功能等&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc/devices&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp; 这个文件记录了系统各个主要装置的主要装置代号，与 mknod 有关呢！&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc/filesystems&amp;nbsp;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp; 目前系统已经加载的文件系统罗！&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc/interrupts&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp; 目前系统上面的 IRQ 分配状态。&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc/ioports&amp;nbsp;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp; 目前系统上面各个装置所配置的 I/O 位址。&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc/kcore&amp;nbsp;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp; 这个就是内存的大小啦！好大对吧！但是不要读他啦！&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc/loadavg&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp; 还记得 top 以及 uptime 吧？没错！上头的三个平均数值就是记录在此！&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc/meminfo&amp;nbsp;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp; 使用 free 列出的内存资讯，嘿嘿！在这里也能够查阅到！&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc/modules&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp; 目前我们的 Linux 已经加载的模块列表，也可以想成是驱动程序啦！&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc/mounts&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 系统已经挂载的数据，就是用 mount 这个命令呼叫出来的数据啦！&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc/swaps&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 到底系统挂加载的内存在哪里？呵呵！使用掉的 partition 就记录在此啦！&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc/partitions&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp; 使用 fdisk -l 会出现目前所有的 partition 吧？在这个文件当中也有纪录喔！&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc/pci&amp;nbsp;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp; 在 PCI 汇流排上面，每个装置的详细情况！可用 lspci 来查阅！&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc/uptime&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 就是用 uptime 的时候，会出现的资讯啦！&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc/version&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp; 核心的版本，就是用 uname -a 显示的内容啦！&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/proc/bus/*&amp;nbsp;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp; 一些汇流排的装置，还有 U盘 的装置也记录在此喔！&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 255); font-size: small;&quot;&gt;&lt;strong&gt;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;/strong&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/usr：&amp;nbsp;目录&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　/usr 文件系统经常很大，因为所有程序安装在这里. /usr 里的所有文件一般来自Linux distribution；本地安装的程序和其他东西在/usr/local 下.这样可能在升级新版系统或新distribution时无须重新安装全部程序.&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/usr/etc&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 存放设置文件&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/usr/games&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 存放游戏和教学文件&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/usr/include&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 存放C开发工具的头文件&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/usr/share&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 存放结构独立的数据&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/usr/bin&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　几乎所有用户命令.有些命令在/bin 或/usr/local/bin 中.&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/usr/sbin&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　根文件系统不必要的系统管理命令，例如多数服务程序.&amp;nbsp;&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/usr/share/man , /usr/share/info , /usr/share/doc&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&lt;br/&gt;　　手册页、GNU信息文档和各种其他文档文件.&amp;nbsp;&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/usr/include&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　C编程语言的头文件.为了一致性这实际上应该在/usr/lib 下，但传统上支持这个名字.&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/usr/lib&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　程序或子系统的不变的数据文件，包括一些site-wide配置文件.名字lib来源于库(library); 编程的原始库存在/usr/lib 里.&amp;nbsp;&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/usr/local&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　本地安装的软件和其他文件放在这里.&amp;nbsp;&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/usr/src&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 存放程序的源代码&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;strong&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;/var：&amp;nbsp;目录&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　/var 包括系统一般运行时要改变的数据.每个系统是特定的，即不通过网络与其他计算机共享.&amp;nbsp;&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/var/catman&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　当要求格式化时的man页的cache.man页的源文件一般存在/usr/man/man* 中；有些man页可能有预格式化的版本，存在/usr/man/cat* 中.而其他的man页在第一次看时需要格式化，格式化完的版本存在/var/man 中，这样其他人再看相同的页时就无须等待格式化了. (/var/catman 经常被清除，就象清除临时目录一样.)&amp;nbsp;&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/var/lib&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　系统正常运行时要改变的文件.&amp;nbsp;&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/var/local&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　/usr/local 中安装的程序的可变数据(即系统管理员安装的程序).注意，如果必要，即使本地安装的程序也会使用其他/var 目录，例如/var/lock .&amp;nbsp;&amp;nbsp;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/var/lock&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　锁定文件.许多程序遵循在/var/lock 中产生一个锁定文件的约定，以支持他们正在使用某个特定的设备或文件.其他程序注意到这个锁定文件，将不试图使用这个设备或文件.&amp;nbsp;&amp;nbsp;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;br/&gt;/var/log&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　各种程序的Log文件，特别是login&amp;nbsp; (/var/log/wtmp log所有到系统的登录和注销) 和syslog (/var/log/messages 里存储所有核心和系统程序信息. /var/log 里的文件经常不确定地增长，应该定期清除.&amp;nbsp;&amp;nbsp;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;br/&gt;/var/run&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　保存到下次引导前有效的关于系统的信息文件.例如， /var/run/utmp 包含当前登录的用户的信息.&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;/var/spool&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　mail, news, 打印队列和其他队列工作的目录.每个不同的spool在/var/spool 下有自己的子目录，例如，用户的邮箱在/var/spool/mail 中.&amp;nbsp;&amp;nbsp;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;br/&gt;/var/tmp&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;　　比/tmp 允许的大或需要存在较长时间的临时文件. (虽然系统管理员可能不允许/var/tmp 有很旧的文件.)&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;strong&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&lt;strong&gt;&amp;nbsp;比较重要的目录&lt;/strong&gt;&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在 Linux 系统中，有几个目录是特别需要注意的，以下提供几个需要注意的目录，以及预设相关的用途：　&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;/etc：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;这个目录相当重要，如前所述，你的开机与系统数据文件均在这个目录之下，因此当这个目录被破坏，那你的系统大概也就差不多该死掉了！而在往后的文件中，你会发现我们常常使用这个目录下的 /etc/rc.d/init.d 这个子目录，因为这个 init.d 子目录是开启一些 Linux 系统服务的 scripts （可以想成是批次檔 ）的地方。而在 /etc/rc.d/rc.local 这个文件是开机的执行档。　&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp; /bin, /sbin, /usr/bin, /usr/sbin：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;这是系统预设的执行文件的放置目录，例如 root 常常使用的 userconf, netconf, perl, gcc, c++ 等等的数据都放在这几个目录中，所以如果你在提示字符下找不到某个执行档时，可以在这四个目录中查一查！其中， /bin, /usr/bin 是给系统使用者使用的指令，而 /sbin, /usr/sbin 则是给系统管理员使用的指令！&amp;nbsp; 　&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;/usr/local：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;这是系统预设的让你安装你后来升级的套件的目录。例如，当你发现有更新的 Web 套件（如 Apache ）可以安装，而你又不想以 rpm 的方式升级你的套件，则你可以将 apache 这个套件安装在 /usr/local 底下。安装在这里有个好处，因为目前大家的系统都是差不多的，所以如果你的系统要让别人接管的话，也比较容易上手呀！也比较容易找的到数据喔！因此，如果你有需要的话，通常我都会将 /usr/local/bin 这个路径加到我的 path 中。　&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;/home：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;这个是系统将有账号的人口的家目录设置的地方。&amp;nbsp;&amp;nbsp;&amp;nbsp; 　&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;/var：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;这个路径就重要了！不论是登入、各类服务的问题发生时的记录、以及常态性的服务记录等等的记录目录，所以当你的系统有问题时，就需要来这个目录记录的文件数据中察看问题的所在啰！而 mail 的预设放置也是在这里，所以他是很重要的&amp;nbsp;&amp;nbsp;&amp;nbsp; 　&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp; /usr/share/man, /usr/local/man：&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;这两个目录为放置各类套件说明档的地方，例如你如果执行 man man，则系统会自动去找这两个目录下的所有说明文件&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;文件种类：&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;谈完了文件格式之后，再来谈谈所谓的文件种类吧！我们在刚刚的属性介绍中提到了最前面的标志 ( d 或 - ) 可以代表目录或文件，那就是不同的文件种类啦！Linux 的文件种类主要有底下&lt;br/&gt;&lt;br/&gt;这几种：&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 正规文件( regular file )：就是一般类型的文件，在由 ls –al 所显示出来的属性方面，第一个属性为 [ - ]。另外，依照文件的内容，又大略可以分为两种文件种类：&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 纯文字文件(ascii) ：这是 Unix 系统中最多的一种啰，几乎只要我们可以用来做为设定的文件都属于这一种；&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 二进制文件(binary) ：通常执行档除了 scripts （文字型批次文件）之外，就是这一种文件格式；&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 目录 (directory)：就是目录！第一个属性为 [ d ]；&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 连结档 (link)：就是类似 Windows 底下的快捷方式啦！第一个属性为 [ l ]；&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 设备档 (device)：与系统周边相关的一些文件，通常都集中在 /dev 这个目录之下！通常又分为两种：&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 区块 (block) 设备档 ：就是一些储存数据，以提供系统存取的接口设备，简单的说就是硬盘啦！例如你的一号硬盘的代码是 /dev/hda1 等等的文件啦！第一个属性为 [ b ]；&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 字符 (character) 设备档 ：亦即是一些串行端口的接口设备，例如键盘、鼠标等等！第一个属性为 [ c ]。&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&lt;strong&gt;Linux 的文件系统( inode )：&lt;/strong&gt;&amp;nbsp;&lt;/span&gt;&lt;br/&gt;　&lt;br/&gt;&lt;br/&gt;在 Linux 系统当中，每个文件不止有文件的内容数据，还包括文件的种种属性，例如：所属群组、所属使用者、能否执行、文&lt;br/&gt;&lt;br/&gt;件建立时间、文件特殊属性等等。我们将每个文件的内容分为两个部分来储存，一个是文件的属性，另一个则是文件的内容。&lt;br/&gt;　&lt;br/&gt;为了应付这两个不同的咚咚，所以 ext2 规划出 inode 与 Block 来分别储存文件的属性( 放在 inode 当中 )与文件的内容( 放置在 Block area 当中 )。当我们要将一个 partition 格式化&lt;br/&gt;&lt;br/&gt;( format )为 ext2 时，就必须要指定 inode 与 Block 的大小才行，也就是说，当 partition 被格式化为 ext2 的文件系统时，他一定会有 inode table 与 block area 这两个区域。&lt;br/&gt;　&lt;br/&gt;Block 已经在前面说过了，他是数据储存的最小单位。那么 inode 是什么？！简单的说， Block 是记录『文件内容数据』的区域，至于 inode 则是记录『该文件的相关属性，以及文件内容&lt;br/&gt;&lt;br/&gt;放置在哪一个 Block 之内』的信息。简单的说， inode 除了记录文件的属性外，同时还必须要具有指向( pointer )的功能，亦即指向文件内容放置的区块之中，好让操作系统可以正确的去&lt;br/&gt;&lt;br/&gt;取得文件的内容啊&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 该文件的拥有者与群组(owner/group)；&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 该文件的存取模式；&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 该文件的类型；&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 该文件的建立日期(ctime)、最近一次的读取时间(atime)、最近修改的时间 (mtime)；&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 该文件的容量；&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 定义文件特性的旗标(flag)，如 SetUID...；&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 该文件真正内容的指向 (pointer)；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;color: rgb(0, 0, 255); font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: small; background-color: rgb(239, 239, 239);&quot;&gt;转自：&lt;/strong&gt;&lt;font color=&quot;#0000ff&quot; face=&quot;Helvetica, Tahoma, Arial, sans-serif&quot; size=&quot;2&quot;&gt;&lt;b&gt;http://www.iteye.com/topic/1125162&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;color: rgb(0, 0, 255); font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: small; background-color: rgb(239, 239, 239);&quot;&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;', '1', '0', '1515553174', '小兔', null, '0', '1');
INSERT INTO `article` VALUES ('55', '有帮助的网站地址记录', '', '&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;博客文章：&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/u011539200/article/list/1&quot;&gt;http://blog.csdn.net/u011539200/article/list/1&lt;/a&gt;&amp;nbsp; &amp;nbsp; 大数据和机器研究学习&lt;br/&gt;&lt;/p&gt;', '1', '14', '1515653361', '小兔', null, '0', '1');
INSERT INTO `article` VALUES ('56', 'Java环境变量设置', '', '&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;首先在Oracle的网站上下载对应的JDK版本，然后安装。注意在Windows下，为了避免在使用命令行的时候出现问题，一般不要选择安装在C:Program Filesjdk目录下，可以选择文件夹名没有空格的目录来安装，比如我一般安装在C:java目录下面。&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;1. 设置JAVA_HOME，指向jdk的安装目录这一级即可。比如我的JDK安装在C:javajdk1.8.0_25，那JAVA_HOME的值就是C:javajdk1.8.0_25&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180112/1515727923225185.png&quot; title=&quot;1515727923225185.png&quot; alt=&quot;1.png&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;2. 设置Path变量&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;在Path值后面加上&lt;strong style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; font-weight: 400; color: rgb(255, 0, 0);&quot;&gt;;%JAVA_HOME%bin;%JAVA_HOME%jrebin&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180112/1515727961229574.png&quot; title=&quot;1515727961229574.png&quot; alt=&quot;2.png&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;3. 设置CLASSPATH&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;新建环境变量CLASSPATH，设置值为&lt;span style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(255, 0, 0);&quot;&gt;&lt;strong style=&quot;box-sizing: border-box;&quot;&gt;.;%JAVA_HOME%libdt.jar;%JAVA_HOME%libtools.jar&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;注意值前面的两个符号&lt;span style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; font-size: 24px; color: rgb(255, 0, 0);&quot;&gt;&lt;strong style=&quot;box-sizing: border-box;&quot;&gt;.;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180112/1515727973126509.png&quot; title=&quot;1515727973126509.png&quot; alt=&quot;3.png&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;4. 安装完成后，打开dos窗口，-&amp;gt;开始，在&amp;quot;搜索程序和文件&amp;quot;输入框里输入&amp;quot;cmd&amp;quot;，回车，就会弹出dos窗口。&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;在dos窗口输入命令&lt;strong style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; font-weight: 400; color: rgb(255, 0, 0);&quot;&gt;java -version&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;如果安装成功的话，会显示安装的JDK的版本，如下图所示&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180112/1515727981838302.png&quot; title=&quot;1515727981838302.png&quot; alt=&quot;4.png&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;输入命令&lt;span style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(255, 0, 0);&quot;&gt;&lt;strong style=&quot;box-sizing: border-box;&quot;&gt;javac&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;如安装成功会出现如下图所示提示，&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180112/1515727989104683.png&quot; title=&quot;1515727989104683.png&quot; alt=&quot;5.png&quot;/&gt;&lt;/p&gt;', '1', '2', '1515728015', '小兔', null, '0', '3');
INSERT INTO `article` VALUES ('57', 'unable to open the service tomcat7', '', '&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;运行tomcat7w.exe tomcat7.exe ,提示 指定的服务未安装 unable to open the service &amp;#39;tomcat7&amp;#39;（用的是绿色的Tomcat7）&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;解决方法：&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: 28px; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;box-sizing: border-box; margin: 0px; padding: 0px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: normal; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; line-height: normal; color: rgb(255, 0, 0);&quot;&gt;打开命令行提示符窗口&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(255, 0, 0);&quot;&gt;=&amp;gt; 进入Tomcat安装目录==&amp;gt; 进入bin目录下==&amp;gt; 输入：service.bat install 即可&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: normal; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;直接到目录点击这个&lt;span style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(255, 0, 0);&quot;&gt;service.bat&lt;/span&gt;t会不会也可以？&lt;span style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; line-height: normal; color: rgb(255, 0, 0);&quot;&gt;经过验证：不可以&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; padding: 0px; line-height: normal; word-wrap: break-word; word-break: normal; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; line-height: normal; color: rgb(255, 0, 0);&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180112/1515741351733691.jpg&quot; title=&quot;1515741351733691.jpg&quot; alt=&quot;1334922226_6404.jpg&quot;/&gt;&lt;/span&gt;&lt;/p&gt;', '1', '2', '1515741376', '小兔', null, '0', '2');
INSERT INTO `article` VALUES ('58', 'mysql 赋给用户远程权限 grant all privileges on', '', '&lt;h2 style=&quot;box-sizing: border-box; font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; line-height: 32px; color: rgb(79, 79, 79); margin: 8px 0px 16px; font-size: 24px; padding: 0px; background-color: rgb(255, 255, 255);&quot;&gt;登陆&lt;/h2&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(79, 79, 79); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; text-align: justify;&quot;&gt;在本机上使用命令行登陆,并切换到mysql库&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(253, 234, 218);&quot;&gt;mysql -uroot -p\r\nuse mysql;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(79, 79, 79); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; text-align: justify;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(246, 248, 250);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:Consolas, Inconsolata, Courier, monospace&quot;&gt;&lt;span style=&quot;font-size: 14px; white-space: pre; background-color: rgb(246, 248, 250);&quot;&gt;遇到问题：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(246, 248, 250);&quot;&gt;centos 安装msyql后需要初始化密码，mysql5.7 有初始的随机密码，所以去初始化密码的时候需要&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(246, 248, 250);&quot;&gt;登录随机密码（/var/log/mysql.log下查找随机密码）;mysql5.6初始密码 命令:mysql -uroot进入&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family:Consolas, Inconsolata, Courier, monospace&quot;&gt;&lt;span style=&quot;font-size: 14px; white-space: pre; background-color: rgb(246, 248, 250);&quot;&gt;数据库use mysql; 修改root密码 刷新权限就ok了。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style=&quot;box-sizing: border-box; font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; line-height: 32px; color: rgb(79, 79, 79); margin: 8px 0px 16px; font-size: 24px; padding: 0px; background-color: rgb(255, 255, 255);&quot;&gt;更改表&lt;/h2&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(79, 79, 79); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; text-align: justify;&quot;&gt;要查看user表中user=’root’的对应情况，根据实际需求来更改表信息&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(253, 234, 218);&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;select&lt;/span&gt; host,&lt;span class=&quot;hljs-keyword&quot; style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;user&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot; style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(253, 234, 218); color: rgb(0, 153, 0);&quot;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;;&lt;/span&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(246, 248, 250);&quot;&gt;# 如果上面查询到有信息,但host为localhost或其他值，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(246, 248, 250);&quot;&gt;就需要根据实际需求来更新表信息&lt;/span&gt;&lt;span class=&quot;hljs-operator&quot; style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(0, 0, 136);&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(0, 0, 136);&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(0, 0, 136);&quot;&gt;set&lt;/span&gt; host=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(0, 153, 0);&quot;&gt;&amp;#39;%&amp;#39;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(0, 0, 136);&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(0, 0, 136);&quot;&gt;user&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(0, 153, 0);&quot;&gt;&amp;#39;root&amp;#39;&lt;/span&gt; # 如果想任何的IP地址都&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-operator&quot; style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre;&quot;&gt;可以使用root用户来远程登陆&lt;/span&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre;&quot;&gt;（注意如果上面的查询语句，查询出来有多条，就需要做一些处理，比如多加一个&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre;&quot;&gt;条件如 &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(0, 0, 136);&quot;&gt;where&lt;/span&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(0, 0, 136);&quot;&gt;user&lt;/span&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot; style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(0, 153, 0);&quot;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(0, 0, 136);&quot;&gt;and&lt;/span&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre;&quot;&gt; host=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot; style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(0, 153, 0);&quot;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre;&quot;&gt;或先删除其他人记录只保存一条&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(0, 0, 136);&quot;&gt;user&lt;/span&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;hljs-string&quot; style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(0, 153, 0);&quot;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre;&quot;&gt;的记录）&lt;/span&gt;&lt;/p&gt;&lt;h2 style=&quot;box-sizing: border-box; font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; line-height: 32px; color: rgb(79, 79, 79); margin: 8px 0px 16px; font-size: 24px; padding: 0px; background-color: rgb(255, 255, 255);&quot;&gt;更改权限&lt;/h2&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(79, 79, 79); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; text-align: justify;&quot;&gt;使用grant all privileges on来更改用户对应某些库的远程权限&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(79, 79, 79); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;语法模板&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(79, 79, 79); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; text-align: justify;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(253, 234, 218);&quot;&gt;&lt;span class=&quot;hljs-operator&quot; style=&quot;background-color: rgb(253, 234, 218); box-sizing: border-box; margin: 0px; padding: 0px; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;grant&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;privileges&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;on&lt;/span&gt; 库名.表名 &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;hljs-string&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 153, 0);&quot;&gt;&amp;#39;用户名&amp;#39;&lt;/span&gt;@&lt;span class=&quot;hljs-string&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 153, 0);&quot;&gt;&amp;#39;IP地址&amp;#39;&lt;/span&gt; identified &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;hljs-string&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 153, 0);&quot;&gt;&amp;#39;密码&amp;#39;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;grant&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;option&lt;/span&gt;;&lt;/span&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre;&quot;&gt;flush privileges;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(79, 79, 79); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; text-align: justify;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(246, 248, 250);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;库名:要远程访问的数据库名称,所有的数据库使用“*”&amp;nbsp;&lt;br/&gt;表名:要远程访问的数据库下的表的名称，所有的表使用“*”&amp;nbsp;&lt;br/&gt;用户名:要赋给远程访问权限的用户名称&amp;nbsp;&lt;br/&gt;IP地址:可以远程访问的电脑的IP地址，所有的地址使用“%”&amp;nbsp;&lt;br/&gt;密码:要赋给远程访问权限的用户对应使用的密码&lt;/span&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(246, 248, 250);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;遇到问题：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;创建用户授权地址是%，然后登陆localhost登陆不上，原因是&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Lantinghei SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, arial, 宋体, sans-serif, tahoma; white-space: pre-wrap;&quot;&gt;%不包括 localhost&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(79, 79, 79); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;示例：&lt;/span&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(253, 234, 218);&quot;&gt;&lt;span class=&quot;hljs-operator&quot; style=&quot;background-color: rgb(253, 234, 218); box-sizing: border-box; margin: 0px; padding: 0px; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;PRIVILEGES&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;ON&lt;/span&gt; *.* &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;hljs-string&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 153, 0);&quot;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;@&lt;span class=&quot;hljs-string&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 153, 0);&quot;&gt;&amp;#39;%&amp;#39;&lt;/span&gt; IDENTIFIED &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;hljs-string&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 153, 0);&quot;&gt;&amp;#39;lxh&amp;#39;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;OPTION&lt;/span&gt;;&lt;/span&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(246, 248, 250);&quot;&gt;# 所有的地址都可以使用root用户，密码为lxh远程访问所有的数据库&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(253, 234, 218);&quot;&gt;flush privileges;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(253, 234, 218);&quot;&gt;&lt;span class=&quot;hljs-operator&quot; style=&quot;background-color: rgb(253, 234, 218); box-sizing: border-box; margin: 0px; padding: 0px; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;PRIVILEGES&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;ON&lt;/span&gt; testdb.* &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;hljs-string&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 153, 0);&quot;&gt;&amp;#39;lxh&amp;#39;&lt;/span&gt;@&lt;span class=&quot;hljs-string&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 153, 0);&quot;&gt;&amp;#39;172.16.52.225&amp;#39;&lt;/span&gt; &amp;nbsp;IDENTIFIED &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;hljs-string&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 153, 0);&quot;&gt;&amp;#39;lxh&amp;#39;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;background-color: rgb(253, 234, 218); color: rgb(0, 0, 136);&quot;&gt;OPTION&lt;/span&gt;;&lt;/span&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(246, 248, 250);&quot;&gt;# IP为172.16.52.225的电脑可以使用lxh用户，密码为lxh远程访问数据库testdb的所有表&lt;/span&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(246, 248, 250);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Consolas, Inconsolata, Courier, monospace; font-size: 14px; white-space: pre; background-color: rgb(246, 248, 250);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style=&quot;box-sizing: border-box; font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; line-height: 32px; color: rgb(79, 79, 79); margin: 8px 0px 16px; font-size: 24px; padding: 0px; background-color: rgb(255, 255, 255);&quot;&gt;注意&lt;/h2&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(79, 79, 79); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;需要注意mysql的配置文件中的&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700; color: rgb(79, 79, 79); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;bindaddress&lt;/span&gt;&lt;span style=&quot;color: rgb(79, 79, 79); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&amp;nbsp;的参数和&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700; color: rgb(79, 79, 79); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;skip-networking&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(79, 79, 79); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;配置&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 14px; line-height: 22px; color: rgb(79, 79, 79); text-align: justify; font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;bindaddress&lt;/span&gt;&amp;nbsp;: 设定哪些ip地址被配置，使得mysql服务器只回应哪些ip地址的请求),&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;最好注释掉该参数或设置成为127.0.0.1以外的值&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 14px; line-height: 22px; color: rgb(79, 79, 79); text-align: justify; font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;skip-networking&amp;nbsp;&lt;/span&gt;: 如果设置了该参数项，将导致所有TCP/IP端口没有被监听,也就是说出了本机，其他客户端都无法用网络连接到本mysql服务器，所以&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;应该注释掉该参数&lt;/span&gt;&lt;/p&gt;', '1', '12', '1516694915', '小兔', null, '0', '1');
INSERT INTO `article` VALUES ('59', 'Beyond Compare 4的试用期过了怎么办', 'Beyond Compare', '&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Microsoft Yahei&amp;quot;, 微软雅黑, arial, 宋体, sans-serif; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;Beyond Compare 4是一款非常好用的文件及文件夹比较软件，可是这个软件是收费的，那怎么样才能一直使用呢&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Microsoft Yahei&amp;quot;, 微软雅黑, arial, 宋体, sans-serif; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;在过了很久之后，打开Beyond Compare 4，发现提示你的30天评估期已经结束，很是崩溃&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Microsoft Yahei&amp;quot;, 微软雅黑, arial, 宋体, sans-serif; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Microsoft Yahei&amp;quot;, 微软雅黑, arial, 宋体, sans-serif; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;打开&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: &amp;quot;Microsoft Yahei&amp;quot;, 微软雅黑, arial, 宋体, sans-serif; text-align: justify;&quot;&gt;C:\\Users\\（自己的用户名）\\AppData\\Roaming&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: &amp;quot;Microsoft Yahei&amp;quot;, 微软雅黑, arial, 宋体, sans-serif; text-align: justify;&quot;&gt;，找到BeyondCompare文件夹&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Microsoft Yahei&amp;quot;, 微软雅黑, arial, 宋体, sans-serif; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;点开BeyondCompare文件夹，看到里面有一个&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: &amp;quot;Microsoft Yahei&amp;quot;, 微软雅黑, arial, 宋体, sans-serif; text-align: justify;&quot;&gt;BeyondCompare419.ini的文件，这个文件就是BeyondCompare的配置文件，这个文件里面记录着你第一次打开BeyondCompare的时间&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Microsoft Yahei&amp;quot;, 微软雅黑, arial, 宋体, sans-serif; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;将这个文件删除，之后再次打开BeyondCompare软件&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Microsoft Yahei&amp;quot;, 微软雅黑, arial, 宋体, sans-serif; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Microsoft Yahei&amp;quot;, 微软雅黑, arial, 宋体, sans-serif; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;发现又可以使用了，点击继续，我们熟悉的界面又回来了&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Microsoft Yahei&amp;quot;, 微软雅黑, arial, 宋体, sans-serif; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Microsoft Yahei&amp;quot;, 微软雅黑, arial, 宋体, sans-serif; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;完美解决问题，以后每次30天到期，只要重复以上步骤就可以了.&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Microsoft Yahei&amp;quot;, 微软雅黑, arial, 宋体, sans-serif; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;', '1', '14', '1519281115', '小兔', null, '0', '1');
INSERT INTO `article` VALUES ('60', '数据库三大范示', '数据库三大范示', '&lt;p&gt;&lt;span style=&quot;color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Source Han Sans SC&amp;quot;, &amp;quot;Noto Sans CJK SC&amp;quot;, &amp;quot;WenQuanYi Micro Hei&amp;quot;, sans-serif; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);&quot;&gt;1NF： 字段是最小的的单元不可再分 &lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Source Han Sans SC&amp;quot;, &amp;quot;Noto Sans CJK SC&amp;quot;, &amp;quot;WenQuanYi Micro Hei&amp;quot;, sans-serif; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);&quot;&gt;2NF：满足1NF,表中的字段必须完全依赖于全部主键而非部分主键 (一般我们都会做到)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Source Han Sans SC&amp;quot;, &amp;quot;Noto Sans CJK SC&amp;quot;, &amp;quot;WenQuanYi Micro Hei&amp;quot;, sans-serif; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);&quot;&gt;3NF：满足2NF,非主键外的所有字段必须互不依赖&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Source Han Sans SC&amp;quot;, &amp;quot;Noto Sans CJK SC&amp;quot;, &amp;quot;WenQuanYi Micro Hei&amp;quot;, sans-serif; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);&quot;&gt;4NF：满足3NF,消除表中的多值依赖&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Source Han Sans SC&amp;quot;, &amp;quot;Noto Sans CJK SC&amp;quot;, &amp;quot;WenQuanYi Micro Hei&amp;quot;, sans-serif; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Source Han Sans SC&amp;quot;, &amp;quot;Noto Sans CJK SC&amp;quot;, &amp;quot;WenQuanYi Micro Hei&amp;quot;, sans-serif; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);&quot;&gt;详细解释：&lt;/span&gt;&lt;span style=&quot;color:#1a1a1a;font-family:-apple-system, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Microsoft YaHei, Source Han Sans SC, Noto Sans CJK SC, WenQuanYi Micro Hei, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 15px; white-space: pre-wrap;&quot;&gt;&lt;a href=&quot;https://www.zhihu.com/question/24696366&quot;&gt;https://www.zhihu.com/question/24696366&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 15px; white-space: pre-wrap; color: rgb(26, 26, 26); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Source Han Sans SC&amp;quot;, &amp;quot;Noto Sans CJK SC&amp;quot;, &amp;quot;WenQuanYi Micro Hei&amp;quot;, sans-serif;&quot;&gt; &lt;/span&gt;&lt;/p&gt;', '1', '12', '1519961207', '小兔', null, '0', '1');
INSERT INTO `article` VALUES ('61', '反向代理，正想代理', '反向代理，正想代理', '&lt;p&gt;&lt;span style=&quot;color: rgb(79, 79, 79); font-family: &amp;quot;Comic Sans MS&amp;quot;; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;正向代理，架设在客户机与目标主机之间，只用于代理内部网络对Internet的连接请求，客户机必须指定代理服务器,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(79, 79, 79); font-family: &amp;quot;Comic Sans MS&amp;quot;; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;并将本来要直接发送到Web服务器上的http请求发送到代理服务器中。&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-family: &amp;quot;Comic Sans MS&amp;quot;; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(79, 79, 79); font-family: &amp;quot;Comic Sans MS&amp;quot;; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180302/1519970475908874.png&quot; title=&quot;1519970475908874.png&quot; alt=&quot;20160531205420201.png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-family: &amp;quot;Comic Sans MS&amp;quot;; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(79, 79, 79); font-family: &amp;quot;Comic Sans MS&amp;quot;; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;反向代理服务器架设在服务器端，通过缓冲经常被请求的页面来缓解服务器的工作量，将客户机请求转发给内部网络上的目标服务器；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(79, 79, 79); font-family: &amp;quot;Comic Sans MS&amp;quot;; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;并将从服务器上得到的结果返回给Internet上请求连接的客户端，此时代理服务器与目标主机一起对外表现为一个服务器。&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-family: &amp;quot;Comic Sans MS&amp;quot;; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-family: &amp;quot;Comic Sans MS&amp;quot;; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180302/1519970481413922.png&quot; title=&quot;1519970481413922.png&quot; alt=&quot;20160531205433342.png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-family: &amp;quot;Comic Sans MS&amp;quot;; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;反向代理有哪些主要应用？&lt;/span&gt;&lt;span style=&quot;color: rgb(79, 79, 79); font-family: &amp;quot;Comic Sans MS&amp;quot;; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(79, 79, 79); font-family: &amp;quot;Comic Sans MS&amp;quot;; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;现在许多大型web网站都用到反向代理。除了可以防止外网对内网服务器的恶性攻击、&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(79, 79, 79); font-family: &amp;quot;Comic Sans MS&amp;quot;; text-align: justify; background-color: rgb(255, 255, 255);&quot;&gt;缓存以减少服务器的压力和访问安全控制之外，还可以进行负载均衡，将用户请求分配给多个服务器&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;', '1', '0', '1519970512', '小兔', null, '0', '0');
INSERT INTO `article` VALUES ('62', 'CGI、FastCGI和PHP-FPM关系图解', '', '&lt;p style=&quot;margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: STXihei, 华文细黑, &amp;quot;Microsoft YaHei&amp;quot;, 微软雅黑; font-size: 14px; background-color: rgb(255, 251, 232);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: &amp;quot;微软雅黑 Light&amp;quot;; font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180302/1519984322815452.png&quot; title=&quot;1519984322815452.png&quot; alt=&quot;806469-20160927081043813-1021846367.png&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: STXihei, 华文细黑, &amp;quot;Microsoft YaHei&amp;quot;, 微软雅黑; font-size: 14px; background-color: rgb(255, 251, 232);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: &amp;quot;微软雅黑 Light&amp;quot;; font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180302/1519984348590826.png&quot; title=&quot;1519984348590826.png&quot; alt=&quot;806469-20160927081047438-329876066.png&quot;/&gt;webapp即是php解析器等&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: STXihei, 华文细黑, &amp;quot;Microsoft YaHei&amp;quot;, 微软雅黑; font-size: 14px; background-color: rgb(255, 251, 232);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: &amp;quot;微软雅黑 Light&amp;quot;; font-size: 12pt;&quot;&gt;当Web Server收到 index.php 这个请求后，会启动对应的 CGI 程序，这里就是PHP的解析器。接下来PHP解析器会解析php.ini文件，初始化执行环境，&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: STXihei, 华文细黑, &amp;quot;Microsoft YaHei&amp;quot;, 微软雅黑; font-size: 14px; background-color: rgb(255, 251, 232);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: &amp;quot;微软雅黑 Light&amp;quot;; font-size: 12pt;&quot;&gt;然后处理请求，再以规定CGI规定的格式返回处理后的结果，退出进程，Web server再把结果返回给浏览器。这就是一个完整的动态PHP Web访问流程，&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: STXihei, 华文细黑, &amp;quot;Microsoft YaHei&amp;quot;, 微软雅黑; font-size: 14px; background-color: rgb(255, 251, 232);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: &amp;quot;微软雅黑 Light&amp;quot;; font-size: 12pt;&quot;&gt;接下来再引出这些概念，就好理解多了，&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;margin: 0px 0px 0px 30px; padding: 0px; color: rgb(51, 51, 51); font-family: STXihei, 华文细黑, &amp;quot;Microsoft YaHei&amp;quot;, 微软雅黑; font-size: 14px; background-color: rgb(255, 251, 232);&quot; class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: &amp;quot;微软雅黑 Light&amp;quot;; font-size: 12pt;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; color: red;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;CGI：&lt;/strong&gt;&lt;/span&gt;是 Web Server 与 Web Application 之间数据交换的一种协议。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: &amp;quot;微软雅黑 Light&amp;quot;; font-size: 12pt;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; color: red;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;FastCGI：&lt;/strong&gt;&lt;/span&gt;同 CGI，是一种通信协议，但比 CGI 在效率上做了一些优化。同样，SCGI 协议与 FastCGI 类似。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: &amp;quot;微软雅黑 Light&amp;quot;; font-size: 12pt;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; color: red;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;PHP-CGI：&lt;/strong&gt;&lt;/span&gt;是 PHP （Web Application）对 Web Server 提供的 CGI&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: &amp;quot;微软雅黑 Light&amp;quot;; font-size: 12pt;&quot;&gt;协议的接口程序。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: &amp;quot;微软雅黑 Light&amp;quot;; font-size: 12pt;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; color: red;&quot;&gt;&lt;strong style=&quot;margin: 0px; padding: 0px;&quot;&gt;PHP-FPM：&lt;/strong&gt;&lt;/span&gt;是 PHP（Web Application）对 Web Server 提供的 FastCGI 协议的接口程序，额外还提供了相对智能一些任务管理。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: STXihei, 华文细黑, &amp;quot;Microsoft YaHei&amp;quot;, 微软雅黑; font-size: 14px; background-color: rgb(255, 251, 232);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: &amp;quot;微软雅黑 Light&amp;quot;; font-size: 12pt;&quot;&gt;WEB 中，&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;margin: 0px 0px 0px 30px; padding: 0px; color: rgb(51, 51, 51); font-family: STXihei, 华文细黑, &amp;quot;Microsoft YaHei&amp;quot;, 微软雅黑; font-size: 14px; background-color: rgb(255, 251, 232);&quot; class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: &amp;quot;微软雅黑 Light&amp;quot;; font-size: 12pt;&quot;&gt;Web Server 一般指Apache、Nginx、IIS、Lighttpd、Tomcat等服务器，&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: &amp;quot;微软雅黑 Light&amp;quot;; font-size: 12pt;&quot;&gt;Web Application 一般指PHP、Java、Asp.net等应用程序。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: &amp;quot;微软雅黑 Light&amp;quot;; font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180302/1519984443135683.png&quot; title=&quot;1519984443135683.png&quot; alt=&quot;806469-20160927081051563-2122907811.png&quot;/&gt;&lt;/p&gt;&lt;ol style=&quot;margin: 0px; padding: 0px 0px 0px 40px; color: rgb(51, 51, 51); font-family: STXihei, 华文细黑, &amp;quot;Microsoft YaHei&amp;quot;, 微软雅黑; font-size: 14px; background-color: rgb(255, 251, 232);&quot; class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: 宋体; font-size: 12pt;&quot;&gt;Web Server启动时载入FastCGI进程管理器（Apache Module或IIS ISAPI等)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: 宋体; font-size: 12pt;&quot;&gt;FastCGI进程管理器自身初始化，启动多个CGI解释器进程(可建多个php-cgi)，并等待来自Web Server的连接。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: 宋体; font-size: 12pt;&quot;&gt;当客户端请求到达Web Server时，FastCGI进程管理器选择并连接到一个CGI解释器。Web server将CGI环境变量和标准输入发送到FastCGI子进程php-cgi。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: 宋体; font-size: 12pt;&quot;&gt;FastCGI子进程完成处理后，将标准输出和错误信息从同一连接返回Web Server。当FastCGI子进程关闭连接时，请求便告处理完成。FastCGI子进程接着等待，&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: 宋体; font-size: 12pt;&quot;&gt;并处理来自FastCGI进程管理器(运行在Web Server中)的下一个连接。 在CGI模式中，php-cgi在此便退出了。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p style=&quot;margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: STXihei, 华文细黑, &amp;quot;Microsoft YaHei&amp;quot;, 微软雅黑; font-size: 14px; background-color: rgb(255, 251, 232);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: 宋体; font-size: 12pt;&quot;&gt;FastCGI与CGI特点：&lt;/span&gt;&lt;/p&gt;&lt;ol style=&quot;margin: 0px; padding: 0px 0px 0px 40px; color: rgb(51, 51, 51); font-family: STXihei, 华文细黑, &amp;quot;Microsoft YaHei&amp;quot;, 微软雅黑; font-size: 14px; background-color: rgb(255, 251, 232);&quot; class=&quot; list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: 宋体; font-size: 12pt;&quot;&gt;对于CGI来说，每一个Web请求PHP都必须重新解析php.ini、重新载入全部扩展，并重初始化全部数据结构。而使用FastCGI，所有这些都只在进程启动时发生一次。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: 宋体; font-size: 12pt;&quot;&gt;一个额外的好处是，持续数据库连接(Persistent database connection)可以工作。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: 宋体; font-size: 12pt;&quot;&gt;由于FastCGI是多进程，所以比CGI多线程消耗更多的服务器内存，php-cgi解释器每进程消耗7至25兆内存，将这个数字乘以50或100就是很大的内存数。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p style=&quot;margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: STXihei, 华文细黑, &amp;quot;Microsoft YaHei&amp;quot;, 微软雅黑; font-size: 14px; background-color: rgb(255, 251, 232);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: 宋体;&quot;&gt;升级&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: &amp;quot;微软雅黑 Light&amp;quot;;&quot;&gt;:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: STXihei, 华文细黑, &amp;quot;Microsoft YaHei&amp;quot;, 微软雅黑; font-size: 14px; background-color: rgb(255, 251, 232);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; line-height: 1.8; font-family: &amp;quot;微软雅黑 Light&amp;quot;;&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180302/1519984467120940.png&quot; title=&quot;1519984467120940.png&quot; alt=&quot;806469-20160927081052328-1825068850.png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 10px auto; padding: 0px; background-color: rgb(255, 251, 232);&quot;&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-size: 14px; font-family: &amp;quot;微软雅黑 Light&amp;quot;;&quot;&gt;转自：&lt;/span&gt;&lt;font color=&quot;#333333&quot; face=&quot;微软雅黑 Light&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;a href=&quot;https://www.cnblogs.com/iiiiher/p/5911419.html&quot;&gt;https://www.cnblogs.com/iiiiher/p/5911419.html&lt;/a&gt; &lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 10px auto; padding: 0px; background-color: rgb(255, 251, 232);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;微软雅黑 Light&quot;&gt;https://www.awaimai.com/371.html&lt;br/&gt;&lt;/font&gt;&lt;/p&gt;', '1', '0', '1519984604', '小兔', null, '0', '1');
INSERT INTO `article` VALUES ('63', '面试相关', '', '&lt;p&gt;https://github.com/todayqq/PHPerInterviewGuide&lt;/p&gt;&lt;p&gt;http://coffeephp.com/articles/4&lt;/p&gt;&lt;p&gt;https://github.com/ycrao/mynotes&lt;/p&gt;&lt;p&gt;http://www.cnblogs.com/zyf-zhaoyafei/p/4828358.html&lt;/p&gt;', '1', '14', '1520324681', '小兔', null, '0', '1');
INSERT INTO `article` VALUES ('64', 'Http、TCP/IP协议与Socket之间的区别', '', '&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); line-height: 26px;&quot;&gt;&lt;span style=&quot;box-sizing: border-box;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1 style=&quot;margin: 10px 0px; font-size: 14.7px; color: rgb(102, 102, 102); box-sizing: border-box; font-family: Verdana, Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/dengyibing/p/5563082.html&quot; target=&quot;_self&quot;&gt;网络协议概述：物理层、连接层、网络层、传输层、应用层详解&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; box-sizing: border-box; background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;HTTP协议&lt;/span&gt;：简单对象访问协议，对应于应用层 ，HTTP协议是基于TCP连接的&lt;br/&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;tcp协议&lt;/span&gt;： &amp;nbsp; &amp;nbsp;对应于传输层&lt;br/&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;ip协议&lt;/span&gt;： &amp;nbsp; &amp;nbsp; 对应于网络层&amp;nbsp;&lt;br/&gt;TCP/IP是传输层协议，主要解决数据如何在网络中传输；而HTTP是应用层协议，主要解决如何包装数据。&lt;br/&gt;Socket是对TCP/IP协议的封装，Socket本身并不是协议，而是一个调用接口（API），通过Socket，我们才能使用TCP/IP协议。&lt;br/&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;http连接&lt;/span&gt;：http连接就是所谓的短连接，即客户端向服务器端发送一次请求，服务器端响应后连接即会断掉；&lt;br/&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; min-height: 26px; text-align: justify; font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;socket连接&lt;/span&gt;：socket连接就是所谓的长连接，理论上客户端和服务器端一旦建立起连接将不会主动断掉；但是由于各种环境因素可能会是连接断开，比如说：服务器端或客户端主机down了，网络故障，或者两者之间长时间没有数据传输，网络防火墙可能会断开该连接以释放网络资源。所以当一个socket连接中没有数据的传输，那么为了维持连接需要发送心跳消息~~具体心跳消息格式是开发者自己定义的&lt;span style=&quot;margin: 0px; padding: 0px; box-sizing: border-box; line-height: 26px;&quot;&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; min-height: 26px; text-align: justify; font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; box-sizing: border-box; line-height: 26px;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;ISO制定的OSI参考模型&lt;/span&gt;过于庞大、复杂招致了许多批评。与此对照，由技术人员自己开发的TCP/IP协议栈获得了更为广泛的应用。如图所示，是TCP/IP参考模型和OSI参考模型的对比示意图。&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; min-height: 26px; text-align: justify; font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180307/1520416476.jpg&quot; title=&quot;1520416476.jpg&quot; alt=&quot;20160328114437318.jpg&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; min-height: 26px; text-align: justify; font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; box-sizing: border-box; line-height: 26px;&quot;&gt;TCP/IP协议栈是美国国防部高级研究计划局计算机网（Advanced Research Projects Agency Network，ARPANET）和其后继因特网使用的参考模型。ARPANET是由美国国防部（U.S．Department of Defense，DoD）赞助的研究网络。最初，它只连接了美国境内的四所大学。随后的几年中，它通过租用的电话线连接了数百所大学和政府部门。最终ARPANET发展成为全球规模最大的互连网络-因特网。最初的ARPANET于1990年永久性地关闭。　　&lt;br/&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;TCP/IP参考模型&lt;/span&gt;分为四个层次：应用层、传输层、网络互连层和主机到网络层。如图所示。&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; min-height: 26px; text-align: justify; font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180307/1520416481.jpg&quot; title=&quot;1520416481.jpg&quot; alt=&quot;20160328114519513.jpg&quot;/&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; min-height: 26px; text-align: justify; font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;1、TCP/IP连接&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; min-height: 26px; text-align: justify; font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px;&quot;&gt;手机能够使用联网功能是因为手机底层实现了TCP/IP协议，可以使手机终端通过无线网络建立TCP连接。TCP协议可以对上层网络提供接口，使上层网络数据的传输建立在“无差别”的网络之上。&lt;br/&gt;建立起一个TCP连接需要经过“三次握手”：&lt;br/&gt;第一次握手：客户端发送syn包(syn=j)到服务器，并进入SYN_SEND状态，等待服务器确认;&lt;br/&gt;第二次握手：服务器收到syn包，必须确认客户的SYN(ack=j+1)，同时自己也发送一个SYN包(syn=k)，即SYN+ACK包，此时服务器进入SYN_RECV状态;&lt;br/&gt;第三次握手：客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=k+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。&lt;br/&gt;握手过程中传送的包里不包含数据，三次握手完毕后，客户端与服务器才正式开始传送数据。理想状态下，TCP连接一旦建立，在通信双方中的任何一方主动关闭连接之前，TCP 连接都将被一直保持下去。断开连接时服务器和客户端均可以主动发起断开TCP连接的请求，断开过程需要经过“四次握手”(过程就不细写了，就是服务器和客户端交互，最终确定断开).&lt;br/&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;2、HTTP连接&lt;/span&gt;&lt;br/&gt;HTTP协议即超文本传送协议(Hypertext Transfer Protocol )，是Web联网的基础，也是手机联网常用的协议之一，HTTP协议是建立在TCP协议之上的一种应用。&lt;br/&gt;HTTP连接最显著的特点是客户端发送的每次请求都需要服务器回送响应，在请求结束后，会主动释放连接。从建立连接到关闭连接的过程称为“一次连接”。&lt;br/&gt;1)在HTTP 1.0中，客户端的每次请求都要求建立一次单独的连接，在处理完本次请求后，就自动释放连接。&lt;br/&gt;2)在HTTP 1.1中则可以在一次连接中处理多个请求，并且多个请求可以重叠进行，不需要等待一个请求结束后再发送下一个请求。&lt;br/&gt;由于HTTP在每次请求结束后都会主动释放连接，因此HTTP连接是一种“短连接”，要保持客户端程序的在线状态，需要不断地向服务器发起连接请求。通常的做法是即时不需要获得任何数据，客户端也保持每隔一段固定的时间向服务器发送一次“保持连接”的请求，服务器在收到该请求后对客户端进行回复，表明知道客户端“在线”。若服务器长时间无法收到客户端的请求，则认为客户端“下线”，若客户端长时间无法收到服务器的回复，则认为网络已经断开。&lt;br/&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;3、SOCKET原理&lt;br/&gt;3.1套接字(socket)概念&lt;/span&gt;&lt;br/&gt;套接字(socket)是通信的基石，是支持TCP/IP协议的网络通信的基本操作单元。它是网络通信过程中端点的抽象表示，包含进行网络通信必须的五种信息：连接使用的协议，本地主机的IP地址，本地进程的协议端口，远地主机的IP地址，远地进程的协议端口。&lt;br/&gt;应用层通过传输层进行数据通信时，TCP会遇到同时为多个应用程序进程提供并发服务的问题。多个TCP连接或多个应用程序进程可能需要通过同一个 TCP协议端口传输数据。为了区别不同的应用程序进程和连接，许多计算机操作系统为应用程序与TCP/IP协议交互提供了套接字(Socket)接口。应用层可以和传输层通过Socket接口，区分来自不同应用程序进程或网络连接的通信，实现数据传输的并发服务。&lt;br/&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;3.2 建立socket连接&lt;/span&gt;&lt;br/&gt;建立Socket连接至少需要一对套接字，其中一个运行于客户端，称为ClientSocket ，另一个运行于服务器端，称为ServerSocket 。&lt;br/&gt;套接字之间的连接过程分为三个步骤：服务器监听，客户端请求，连接确认。&lt;br/&gt;服务器监听：服务器端套接字并不定位具体的客户端套接字，而是处于等待连接的状态，实时监控网络状态，等待客户端的连接请求。&lt;br/&gt;客户端请求：指客户端的套接字提出连接请求，要连接的目标是服务器端的套接字。为此，客户端的套接字必须首先描述它要连接的服务器的套接字，指出服务器端套接字的地址和端口号，然后就向服务器端套接字提出连接请求。&lt;br/&gt;连接确认：当服务器端套接字监听到或者说接收到客户端套接字的连接请求时，就响应客户端套接字的请求，建立一个新的线程，把服务器端套接字的描述发给客户端，一旦客户端确认了此描述，双方就正式建立连接。而服务器端套接字继续处于监听状态，继续接收其他客户端套接字的连接请求。&lt;br/&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;4、SOCKET连接与TCP/IP连接&lt;/span&gt;&lt;br/&gt;创建Socket连接时，可以指定使用的传输层协议，Socket可以支持不同的传输层协议(TCP或UDP)，当使用TCP协议进行连接时，该Socket连接就是一个TCP连接。&lt;br/&gt;socket则是对TCP/IP协议的封装和应用(程序员层面上)。也可以说，TPC/IP协议是传输层协议，主要解决数据 如何在网络中传输，而HTTP是应用层协议，主要解决如何包装数据。关于TCP/IP和HTTP协议的关系，网络有一段比较容易理解的介绍：&lt;br/&gt;“我们在传输数据时，可以只使用(传输层)TCP/IP协议，但是那样的话，如 果没有应用层，便无法识别数据内容，如果想要使传输的数据有意义，则必须使用到应用层协议，应用层协议有很多，比如HTTP、FTP、TELNET等，也 可以自己定义应用层协议。WEB使用HTTP协议作应用层协议，以封装HTTP文本信息，然后使用TCP/IP做传输层协议将它发到网络上。”&lt;br/&gt;我们平时说的最多的socket是什么呢，实际上socket是对TCP/IP协议的封装，Socket本身并不是协议，而是一个调用接口(API)，通过Socket，我们才能使用TCP/IP协议。 实际上，Socket跟TCP/IP协议没有必然的联系。Socket编程接口在设计的时候，就希望也能适应其他的网络协议。所以说，Socket的出现 只是使得程序员更方便地使用TCP/IP协议栈而已，是对TCP/IP协议的抽象，从而形成了我们知道的一些最基本的函数接口，比如create、 listen、connect、accept、send、read和write等等。网络有一段关于socket和TCP/IP协议关系的说法比较容易理解：&lt;br/&gt;“TCP/IP只是一个协议栈，就像操作系统的运行机制一样，必须要具体实现，同时还要提供对外的操作接口。这个就像操作系统会提供标准的编程接口，比如win32编程接口一样，TCP/IP也要提供可供程序员做网络开发所用的接口，这就是Socket编程接口。”&lt;br/&gt;实际上，传输层的TCP是基于网络层的IP协议的，而应用层的HTTP协议又是基于传输层的TCP协议的，而Socket本身不算是协议，就像上面所说，它只是提供了一个针对TCP或者UDP编程的接口。socket是对端口通信开发的工具,它要更底层一些.&lt;br/&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;5、Socket连接与HTTP连接&lt;/span&gt;&lt;br/&gt;由于通常情况下Socket连接就是TCP连接，因此Socket连接一旦建立，通信双方即可开始相互发送数据内容，直到双方连接断开。但在实际网络应用中，客户端到服务器之间的通信往往需要穿越多个中间节点，例如路由器、网关、防火墙等，大部分防火墙默认会关闭长时间处于非活跃状态的连接而导致 Socket 连接断连，因此需要通过轮询告诉网络，该连接处于活跃状态。&lt;br/&gt;而HTTP连接使用的是“请求—响应”的方式，不仅在请求时需要先建立连接，而且需要客户端向服务器发出请求后，服务器端才能回复数据。&lt;br/&gt;很多情况下，需要服务器端主动向客户端推送数据，保持客户端与服务器数据的实时与同步。此时若双方建立的是Socket连接，服务器就可以直接将数据传送给客户端;若双方建立的是HTTP连接，则服务器需要等到客户端发送一次请求后才能将数据传回给客户端，因此，客户端定时向服务器端发送连接请求，不仅可以保持在线，同时也是在“询问”服务器是否有新的数据，如果有就将数据传给客户端。&lt;br/&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;http协议是应用层的协议&lt;/span&gt;&lt;br/&gt;两个计算机之间的交流无非是两个端口之间的数据通信,具体的数据会以什么样的形式展现`是以不同的应用层协议来定义的`如HTTP`FTP`...&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; min-height: 26px; text-align: justify; font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; box-sizing: border-box; line-height: 26px;&quot;&gt;有个比较形象的描述：HTTP是轿车，提供了封装或者显示数据的具体形式;Socket是发动机，提供了网络通信的能力。&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; min-height: 26px; text-align: justify; font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 0px; box-sizing: border-box; font-size: 13px; color: rgb(51, 51, 51); line-height: 26px; min-height: 26px; text-align: justify; background-color: rgb(255, 255, 255); font-family: Arial;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;&amp;lt;1&amp;gt;Socket是一个针对TCP和UDP编程的接口，你可以借助它建立TCP连接等等。而TCP和UDP协议属于传输层&amp;nbsp;。&lt;br/&gt;&amp;nbsp; 而http是个应用层的协议，它实际上也建立在TCP协议之上(HTTP是轿车，提供了封装或者显示数据的具体形式；Socket是发动机，提供了网络通信的能力)。&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; padding: 0px; box-sizing: border-box; font-size: 13px; color: rgb(51, 51, 51); line-height: 26px; min-height: 26px; text-align: justify; background-color: rgb(255, 255, 255); font-family: Arial;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; box-sizing: border-box; color: rgb(255, 0, 0);&quot;&gt;&amp;lt;2&amp;gt;Socket是对TCP/IP协议的封装，Socket本身并不是协议，而是一个调用接口（API），通过Socket，我们才能使用TCP/IP协议。Socket的出现只是使得程序员更方便地使用TCP/IP协议栈而已，是对TCP/IP协议的抽象，从而形成了我们知道的一些最基本的函数接口。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;短连接&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;连接-&amp;gt;传输数据-&amp;gt;关闭连接&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;HTTP是无状态的，浏览器和服务器每进行一次HTTP操作，就建立一次连接，但任务结束就中断连接。&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;也可以这样说：短连接是指SOCKET连接后发送后接收完数据后马上断开连接。&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;长连接&lt;/span&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;连接-&amp;gt;传输数据-&amp;gt;保持连接 -&amp;gt; 传输数据-&amp;gt; 。。。 -&amp;gt;关闭连接。&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;长连接指建立SOCKET连接后不管是否使用都保持连接，但安全性较差。&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;http的长连接&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;HTTP也可以建立长连接的，使用Connection:keep-alive，HTTP 1.1默认进行持久连接。HTTP1.1和HTTP1.0相比较而言，最大的区别就是增加了持久连接支持(貌似最新的 http1.0 可以显示的指定 keep-alive),但还是无状态的，或者说是不可以信任的。&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;什么时候用长连接，短连接？&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&amp;nbsp;长连接多用于操作频繁，点对点的通讯，而且连接数不能太多情况，。每个TCP连接都需要三步握手，这需要时间，如果每个操作都是先连接，再操作的话那么处理速度会降低很多，所以每个操作完后都不断开，次处理时直接发送数据包就OK了，不用建立TCP连接。例如：数据库的连接用长连接， 如果用短连接频繁的通信会造成socket错误，而且频繁的socket 创建也是对资源的浪费。&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;而像WEB网站的http服务一般都用短链接，因为长连接对于服务端来说会耗费一定的资源，而像WEB网站这么频繁的成千上万甚至上亿客户端的连接用短连接会更省一些资源，如果用长连接，而且同时有成千上万的用户，如果每个用户都占用一个连接的话，那可想而知吧。所以并发量大，但每个用户无需频繁操作情况下需用短连好。&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;&amp;nbsp;总之，长连接和短连接的选择要视情况而定。&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 700; color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;发送接收方式&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;1、异步&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;报文发送和接收是分开的，相互独立的，互不影响。这种方式又分两种情况：&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;(1)异步双工：接收和发送在同一个程序中，由两个不同的子进程分别负责发送和接收&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;(2)异步单工：接收和发送是用两个不同的程序来完成。&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;2、同步&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;报文发送和接收是同步进行，既报文发送后等待接收返回报文。 同步方式一般需要考虑超时问题，即报文发出去后不能无限等待，需要设定超时时间，超过该时间发送方不再等待读返回报文，直接通知超时返回。&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: rgb(69, 69, 69); font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);&quot;&gt;在长连接中一般是没有条件能够判断读写什么时候结束，所以必须要加长度报文头。读函数先是读取报文头的长度，再根据这个长度去读相应长度的报文。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color:#454545;font-family:PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;来自：&lt;/span&gt;http://blog.csdn.net/done58/article/details/50996680&lt;/span&gt;&lt;/p&gt;', '1', '14', '1520476038', '小兔', null, '0', '2');
INSERT INTO `article` VALUES ('65', '目前需要学习的东西记录', '目前需要学习的东西记录', '&lt;p&gt;需要学习的东西太多了，一步一步来&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p&gt;laravel框架&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;outh2.0权限&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;restful风格的api&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;linux服务器&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;go语言&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;c语言&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;yii框架&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;java语言&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;用一个比我小很多岁编程者（18岁）的简历图来励志自己&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/ueditor/php/upload/image/20180309/1520583867.png&quot; title=&quot;1520583867.png&quot; alt=&quot;女装大佬，千里冰封的简历.png&quot;/&gt;&lt;/p&gt;', '1', '0', '1520583919', '小兔', null, '0', '0');

-- ----------------------------
-- Table structure for `city`
-- ----------------------------
DROP TABLE IF EXISTS `city`;
CREATE TABLE `city` (
  `id` varchar(10) NOT NULL DEFAULT '',
  `name` varchar(20) DEFAULT NULL,
  `pro_id` varchar(10) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `pro_id` (`pro_id`),
  CONSTRAINT `city_ibfk_1` FOREIGN KEY (`pro_id`) REFERENCES `province` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of city
-- ----------------------------
INSERT INTO `city` VALUES ('0101', '北京', '01');
INSERT INTO `city` VALUES ('0201', '上海', '02');
INSERT INTO `city` VALUES ('0301', '天津', '03');
INSERT INTO `city` VALUES ('0401', '重庆', '04');
INSERT INTO `city` VALUES ('0501', '哈尔滨', '05');
INSERT INTO `city` VALUES ('0502', '齐齐哈尔', '05');
INSERT INTO `city` VALUES ('0503', '牡丹江', '05');
INSERT INTO `city` VALUES ('0504', '佳木斯', '05');
INSERT INTO `city` VALUES ('0505', '绥化', '05');
INSERT INTO `city` VALUES ('0506', '黑河', '05');
INSERT INTO `city` VALUES ('0507', '大兴安岭', '05');
INSERT INTO `city` VALUES ('0508', '伊春', '05');
INSERT INTO `city` VALUES ('0509', '大庆', '05');
INSERT INTO `city` VALUES ('0510', '七台河', '05');
INSERT INTO `city` VALUES ('0511', '鸡西', '05');
INSERT INTO `city` VALUES ('0512', '鹤岗', '05');
INSERT INTO `city` VALUES ('0513', '双鸭山', '05');
INSERT INTO `city` VALUES ('0601', '长春', '06');
INSERT INTO `city` VALUES ('0602', '吉林', '06');
INSERT INTO `city` VALUES ('0603', '延边', '06');
INSERT INTO `city` VALUES ('0604', '四平', '06');
INSERT INTO `city` VALUES ('0605', '通化', '06');
INSERT INTO `city` VALUES ('0606', '白城', '06');
INSERT INTO `city` VALUES ('0607', '辽源', '06');
INSERT INTO `city` VALUES ('0608', '松原', '06');
INSERT INTO `city` VALUES ('0609', '白山', '06');
INSERT INTO `city` VALUES ('0701', '沈阳', '07');
INSERT INTO `city` VALUES ('0702', '大连', '07');
INSERT INTO `city` VALUES ('0703', '鞍山', '07');
INSERT INTO `city` VALUES ('0704', '抚顺', '07');
INSERT INTO `city` VALUES ('0705', '本溪', '07');
INSERT INTO `city` VALUES ('0706', '丹东', '07');
INSERT INTO `city` VALUES ('0707', '锦州', '07');
INSERT INTO `city` VALUES ('0708', '营口', '07');
INSERT INTO `city` VALUES ('0709', '阜新', '07');
INSERT INTO `city` VALUES ('0710', '辽阳', '07');
INSERT INTO `city` VALUES ('0711', '铁岭', '07');
INSERT INTO `city` VALUES ('0712', '朝阳', '07');
INSERT INTO `city` VALUES ('0713', '盘锦', '07');
INSERT INTO `city` VALUES ('0714', '葫芦岛', '07');
INSERT INTO `city` VALUES ('0801', '呼和浩特', '08');
INSERT INTO `city` VALUES ('0802', '包头', '08');
INSERT INTO `city` VALUES ('0803', '乌海', '08');
INSERT INTO `city` VALUES ('0804', '乌兰察布', '08');
INSERT INTO `city` VALUES ('0805', '通辽', '08');
INSERT INTO `city` VALUES ('0806', '赤峰', '08');
INSERT INTO `city` VALUES ('0807', '鄂尔多斯', '08');
INSERT INTO `city` VALUES ('0808', '巴彦淖尔', '08');
INSERT INTO `city` VALUES ('0809', '锡林郭勒', '08');
INSERT INTO `city` VALUES ('0810', '呼伦贝尔', '08');
INSERT INTO `city` VALUES ('0811', '兴安盟', '08');
INSERT INTO `city` VALUES ('0812', '阿拉善盟', '08');
INSERT INTO `city` VALUES ('0901', '石家庄', '09');
INSERT INTO `city` VALUES ('0902', '保定', '09');
INSERT INTO `city` VALUES ('0903', '张家口', '09');
INSERT INTO `city` VALUES ('0904', '承德', '09');
INSERT INTO `city` VALUES ('0905', '唐山', '09');
INSERT INTO `city` VALUES ('0906', '廊坊', '09');
INSERT INTO `city` VALUES ('0907', '沧州', '09');
INSERT INTO `city` VALUES ('0908', '衡水', '09');
INSERT INTO `city` VALUES ('0909', '邢台', '09');
INSERT INTO `city` VALUES ('0910', '邯郸', '09');
INSERT INTO `city` VALUES ('0911', '秦皇岛', '09');
INSERT INTO `city` VALUES ('1001', '太原', '10');
INSERT INTO `city` VALUES ('1002', '大同', '10');
INSERT INTO `city` VALUES ('1003', '阳泉', '10');
INSERT INTO `city` VALUES ('1004', '晋中', '10');
INSERT INTO `city` VALUES ('1005', '长治', '10');
INSERT INTO `city` VALUES ('1006', '晋城', '10');
INSERT INTO `city` VALUES ('1007', '临汾', '10');
INSERT INTO `city` VALUES ('1008', '运城', '10');
INSERT INTO `city` VALUES ('1009', '朔州', '10');
INSERT INTO `city` VALUES ('1010', '忻州', '10');
INSERT INTO `city` VALUES ('1011', '吕梁', '10');
INSERT INTO `city` VALUES ('1101', '西安', '11');
INSERT INTO `city` VALUES ('1102', '咸阳', '11');
INSERT INTO `city` VALUES ('1103', '延安', '11');
INSERT INTO `city` VALUES ('1104', '榆林', '11');
INSERT INTO `city` VALUES ('1105', '渭南', '11');
INSERT INTO `city` VALUES ('1106', '商洛', '11');
INSERT INTO `city` VALUES ('1107', '安康', '11');
INSERT INTO `city` VALUES ('1108', '汉中', '11');
INSERT INTO `city` VALUES ('1109', '宝鸡', '11');
INSERT INTO `city` VALUES ('1110', '铜川', '11');
INSERT INTO `city` VALUES ('1111', '杨凌', '11');
INSERT INTO `city` VALUES ('1201', '济南', '12');
INSERT INTO `city` VALUES ('1202', '青岛', '12');
INSERT INTO `city` VALUES ('1203', '淄博', '12');
INSERT INTO `city` VALUES ('1204', '德州', '12');
INSERT INTO `city` VALUES ('1205', '烟台', '12');
INSERT INTO `city` VALUES ('1206', '潍坊', '12');
INSERT INTO `city` VALUES ('1207', '济宁', '12');
INSERT INTO `city` VALUES ('1208', '泰安', '12');
INSERT INTO `city` VALUES ('1209', '临沂', '12');
INSERT INTO `city` VALUES ('1210', '菏泽', '12');
INSERT INTO `city` VALUES ('1211', '滨州', '12');
INSERT INTO `city` VALUES ('1212', '东营', '12');
INSERT INTO `city` VALUES ('1213', '威海', '12');
INSERT INTO `city` VALUES ('1214', '枣庄', '12');
INSERT INTO `city` VALUES ('1215', '日照', '12');
INSERT INTO `city` VALUES ('1216', '莱芜', '12');
INSERT INTO `city` VALUES ('1217', '聊城', '12');
INSERT INTO `city` VALUES ('1301', '乌鲁木齐', '13');
INSERT INTO `city` VALUES ('1302', '克拉玛依', '13');
INSERT INTO `city` VALUES ('1303', '石河子', '13');
INSERT INTO `city` VALUES ('1304', '昌吉', '13');
INSERT INTO `city` VALUES ('1305', '吐鲁番', '13');
INSERT INTO `city` VALUES ('1306', '巴音郭楞', '13');
INSERT INTO `city` VALUES ('1307', '阿拉尔', '13');
INSERT INTO `city` VALUES ('1308', '阿克苏', '13');
INSERT INTO `city` VALUES ('1309', '喀什', '13');
INSERT INTO `city` VALUES ('1310', '伊犁', '13');
INSERT INTO `city` VALUES ('1311', '塔城', '13');
INSERT INTO `city` VALUES ('1312', '哈密', '13');
INSERT INTO `city` VALUES ('1313', '和田', '13');
INSERT INTO `city` VALUES ('1314', '阿勒泰', '13');
INSERT INTO `city` VALUES ('1315', '克州', '13');
INSERT INTO `city` VALUES ('1316', '博尔塔拉', '13');
INSERT INTO `city` VALUES ('1401', '拉萨', '14');
INSERT INTO `city` VALUES ('1402', '日喀则', '14');
INSERT INTO `city` VALUES ('1403', '山南', '14');
INSERT INTO `city` VALUES ('1404', '林芝', '14');
INSERT INTO `city` VALUES ('1405', '昌都', '14');
INSERT INTO `city` VALUES ('1406', '那曲', '14');
INSERT INTO `city` VALUES ('1407', '阿里', '14');
INSERT INTO `city` VALUES ('1501', '西宁', '15');
INSERT INTO `city` VALUES ('1502', '海东', '15');
INSERT INTO `city` VALUES ('1503', '黄南', '15');
INSERT INTO `city` VALUES ('1504', '海南', '15');
INSERT INTO `city` VALUES ('1505', '果洛', '15');
INSERT INTO `city` VALUES ('1506', '玉树', '15');
INSERT INTO `city` VALUES ('1507', '海西', '15');
INSERT INTO `city` VALUES ('1508', '海北', '15');
INSERT INTO `city` VALUES ('1509', '格尔木', '15');
INSERT INTO `city` VALUES ('1601', '兰州', '16');
INSERT INTO `city` VALUES ('1602', '定西', '16');
INSERT INTO `city` VALUES ('1603', '平凉', '16');
INSERT INTO `city` VALUES ('1604', '庆阳', '16');
INSERT INTO `city` VALUES ('1605', '武威', '16');
INSERT INTO `city` VALUES ('1606', '金昌', '16');
INSERT INTO `city` VALUES ('1607', '张掖', '16');
INSERT INTO `city` VALUES ('1608', '酒泉', '16');
INSERT INTO `city` VALUES ('1609', '天水', '16');
INSERT INTO `city` VALUES ('1610', '陇南', '16');
INSERT INTO `city` VALUES ('1611', '临夏', '16');
INSERT INTO `city` VALUES ('1612', '甘南', '16');
INSERT INTO `city` VALUES ('1613', '白银', '16');
INSERT INTO `city` VALUES ('1614', '嘉峪关', '16');
INSERT INTO `city` VALUES ('1701', '银川', '17');
INSERT INTO `city` VALUES ('1702', '石嘴山', '17');
INSERT INTO `city` VALUES ('1703', '吴忠', '17');
INSERT INTO `city` VALUES ('1704', '固原', '17');
INSERT INTO `city` VALUES ('1705', '中卫', '17');
INSERT INTO `city` VALUES ('1801', '郑州', '18');
INSERT INTO `city` VALUES ('1802', '安阳', '18');
INSERT INTO `city` VALUES ('1803', '新乡', '18');
INSERT INTO `city` VALUES ('1804', '许昌', '18');
INSERT INTO `city` VALUES ('1805', '平顶山', '18');
INSERT INTO `city` VALUES ('1806', '信阳', '18');
INSERT INTO `city` VALUES ('1807', '南阳', '18');
INSERT INTO `city` VALUES ('1808', '开封', '18');
INSERT INTO `city` VALUES ('1809', '洛阳', '18');
INSERT INTO `city` VALUES ('1810', '商丘', '18');
INSERT INTO `city` VALUES ('1811', '焦作', '18');
INSERT INTO `city` VALUES ('1812', '鹤壁', '18');
INSERT INTO `city` VALUES ('1813', '濮阳', '18');
INSERT INTO `city` VALUES ('1814', '周口', '18');
INSERT INTO `city` VALUES ('1815', '漯河', '18');
INSERT INTO `city` VALUES ('1816', '驻马店', '18');
INSERT INTO `city` VALUES ('1817', '三门峡', '18');
INSERT INTO `city` VALUES ('1818', '济源', '18');
INSERT INTO `city` VALUES ('1901', '南京', '19');
INSERT INTO `city` VALUES ('1902', '无锡', '19');
INSERT INTO `city` VALUES ('1903', '镇江', '19');
INSERT INTO `city` VALUES ('1904', '苏州', '19');
INSERT INTO `city` VALUES ('1905', '南通', '19');
INSERT INTO `city` VALUES ('1906', '扬州', '19');
INSERT INTO `city` VALUES ('1907', '盐城', '19');
INSERT INTO `city` VALUES ('1908', '徐州', '19');
INSERT INTO `city` VALUES ('1909', '淮安', '19');
INSERT INTO `city` VALUES ('1910', '连云港', '19');
INSERT INTO `city` VALUES ('1911', '常州', '19');
INSERT INTO `city` VALUES ('1912', '泰州', '19');
INSERT INTO `city` VALUES ('1913', '宿迁', '19');
INSERT INTO `city` VALUES ('2001', '武汉', '20');
INSERT INTO `city` VALUES ('2002', '襄阳', '20');
INSERT INTO `city` VALUES ('2003', '鄂州', '20');
INSERT INTO `city` VALUES ('2004', '孝感', '20');
INSERT INTO `city` VALUES ('2005', '黄冈', '20');
INSERT INTO `city` VALUES ('2006', '黄石', '20');
INSERT INTO `city` VALUES ('2007', '咸宁', '20');
INSERT INTO `city` VALUES ('2008', '荆州', '20');
INSERT INTO `city` VALUES ('2009', '宜昌', '20');
INSERT INTO `city` VALUES ('2010', '恩施', '20');
INSERT INTO `city` VALUES ('2011', '十堰', '20');
INSERT INTO `city` VALUES ('2012', '神农架', '20');
INSERT INTO `city` VALUES ('2013', '随州', '20');
INSERT INTO `city` VALUES ('2014', '荆门', '20');
INSERT INTO `city` VALUES ('2015', '天门', '20');
INSERT INTO `city` VALUES ('2016', '仙桃', '20');
INSERT INTO `city` VALUES ('2017', '潜江', '20');
INSERT INTO `city` VALUES ('2101', '杭州', '21');
INSERT INTO `city` VALUES ('2102', '湖州', '21');
INSERT INTO `city` VALUES ('2103', '嘉兴', '21');
INSERT INTO `city` VALUES ('2104', '宁波', '21');
INSERT INTO `city` VALUES ('2105', '绍兴', '21');
INSERT INTO `city` VALUES ('2106', '台州', '21');
INSERT INTO `city` VALUES ('2107', '温州', '21');
INSERT INTO `city` VALUES ('2108', '丽水', '21');
INSERT INTO `city` VALUES ('2109', '金华', '21');
INSERT INTO `city` VALUES ('2110', '衢州', '21');
INSERT INTO `city` VALUES ('2111', '舟山', '21');
INSERT INTO `city` VALUES ('2201', '合肥', '22');
INSERT INTO `city` VALUES ('2202', '蚌埠', '22');
INSERT INTO `city` VALUES ('2203', '芜湖', '22');
INSERT INTO `city` VALUES ('2204', '淮南', '22');
INSERT INTO `city` VALUES ('2205', '马鞍山', '22');
INSERT INTO `city` VALUES ('2206', '安庆', '22');
INSERT INTO `city` VALUES ('2207', '宿州', '22');
INSERT INTO `city` VALUES ('2208', '阜阳', '22');
INSERT INTO `city` VALUES ('2209', '亳州', '22');
INSERT INTO `city` VALUES ('2210', '黄山', '22');
INSERT INTO `city` VALUES ('2211', '滁州', '22');
INSERT INTO `city` VALUES ('2212', '淮北', '22');
INSERT INTO `city` VALUES ('2213', '铜陵', '22');
INSERT INTO `city` VALUES ('2214', '宣城', '22');
INSERT INTO `city` VALUES ('2215', '六安', '22');
INSERT INTO `city` VALUES ('2216', '巢湖', '22');
INSERT INTO `city` VALUES ('2217', '池州', '22');
INSERT INTO `city` VALUES ('2301', '福州', '23');
INSERT INTO `city` VALUES ('2302', '厦门', '23');
INSERT INTO `city` VALUES ('2303', '宁德', '23');
INSERT INTO `city` VALUES ('2304', '莆田', '23');
INSERT INTO `city` VALUES ('2305', '泉州', '23');
INSERT INTO `city` VALUES ('2306', '漳州', '23');
INSERT INTO `city` VALUES ('2307', '龙岩', '23');
INSERT INTO `city` VALUES ('2308', '三明', '23');
INSERT INTO `city` VALUES ('2309', '南平', '23');
INSERT INTO `city` VALUES ('2401', '南昌', '24');
INSERT INTO `city` VALUES ('2402', '九江', '24');
INSERT INTO `city` VALUES ('2403', '上饶', '24');
INSERT INTO `city` VALUES ('2404', '抚州', '24');
INSERT INTO `city` VALUES ('2405', '宜春', '24');
INSERT INTO `city` VALUES ('2406', '吉安', '24');
INSERT INTO `city` VALUES ('2407', '赣州', '24');
INSERT INTO `city` VALUES ('2408', '景德镇', '24');
INSERT INTO `city` VALUES ('2409', '萍乡', '24');
INSERT INTO `city` VALUES ('2410', '新余', '24');
INSERT INTO `city` VALUES ('2411', '鹰潭', '24');
INSERT INTO `city` VALUES ('2501', '长沙', '25');
INSERT INTO `city` VALUES ('2502', '湘潭', '25');
INSERT INTO `city` VALUES ('2503', '株洲', '25');
INSERT INTO `city` VALUES ('2504', '衡阳', '25');
INSERT INTO `city` VALUES ('2505', '郴州', '25');
INSERT INTO `city` VALUES ('2506', '常德', '25');
INSERT INTO `city` VALUES ('2507', '益阳', '25');
INSERT INTO `city` VALUES ('2508', '娄底', '25');
INSERT INTO `city` VALUES ('2509', '邵阳', '25');
INSERT INTO `city` VALUES ('2510', '岳阳', '25');
INSERT INTO `city` VALUES ('2511', '张家界', '25');
INSERT INTO `city` VALUES ('2512', '怀化', '25');
INSERT INTO `city` VALUES ('2513', '永州', '25');
INSERT INTO `city` VALUES ('2514', '湘西', '25');
INSERT INTO `city` VALUES ('2601', '贵阳', '26');
INSERT INTO `city` VALUES ('2602', '遵义', '26');
INSERT INTO `city` VALUES ('2603', '安顺', '26');
INSERT INTO `city` VALUES ('2604', '黔南', '26');
INSERT INTO `city` VALUES ('2605', '黔东南', '26');
INSERT INTO `city` VALUES ('2606', '铜仁', '26');
INSERT INTO `city` VALUES ('2607', '毕节', '26');
INSERT INTO `city` VALUES ('2608', '六盘水', '26');
INSERT INTO `city` VALUES ('2609', '黔西南', '26');
INSERT INTO `city` VALUES ('2701', '成都', '27');
INSERT INTO `city` VALUES ('2702', '攀枝花', '27');
INSERT INTO `city` VALUES ('2703', '自贡', '27');
INSERT INTO `city` VALUES ('2704', '绵阳', '27');
INSERT INTO `city` VALUES ('2705', '南充', '27');
INSERT INTO `city` VALUES ('2706', '达州', '27');
INSERT INTO `city` VALUES ('2707', '遂宁', '27');
INSERT INTO `city` VALUES ('2708', '广安', '27');
INSERT INTO `city` VALUES ('2709', '巴中', '27');
INSERT INTO `city` VALUES ('2710', '泸州', '27');
INSERT INTO `city` VALUES ('2711', '宜宾', '27');
INSERT INTO `city` VALUES ('2712', '内江', '27');
INSERT INTO `city` VALUES ('2713', '资阳', '27');
INSERT INTO `city` VALUES ('2714', '乐山', '27');
INSERT INTO `city` VALUES ('2715', '眉山', '27');
INSERT INTO `city` VALUES ('2716', '凉山', '27');
INSERT INTO `city` VALUES ('2717', '雅安', '27');
INSERT INTO `city` VALUES ('2718', '甘孜', '27');
INSERT INTO `city` VALUES ('2719', '阿坝', '27');
INSERT INTO `city` VALUES ('2720', '德阳', '27');
INSERT INTO `city` VALUES ('2721', '广元', '27');
INSERT INTO `city` VALUES ('2801', '广州', '28');
INSERT INTO `city` VALUES ('2802', '韶关', '28');
INSERT INTO `city` VALUES ('2803', '惠州', '28');
INSERT INTO `city` VALUES ('2804', '梅州', '28');
INSERT INTO `city` VALUES ('2805', '汕头', '28');
INSERT INTO `city` VALUES ('2806', '深圳', '28');
INSERT INTO `city` VALUES ('2807', '珠海', '28');
INSERT INTO `city` VALUES ('2808', '佛山', '28');
INSERT INTO `city` VALUES ('2809', '肇庆', '28');
INSERT INTO `city` VALUES ('2810', '湛江', '28');
INSERT INTO `city` VALUES ('2811', '江门', '28');
INSERT INTO `city` VALUES ('2812', '河源', '28');
INSERT INTO `city` VALUES ('2813', '清远', '28');
INSERT INTO `city` VALUES ('2814', '云浮', '28');
INSERT INTO `city` VALUES ('2815', '潮州', '28');
INSERT INTO `city` VALUES ('2816', '东莞', '28');
INSERT INTO `city` VALUES ('2817', '中山', '28');
INSERT INTO `city` VALUES ('2818', '阳江', '28');
INSERT INTO `city` VALUES ('2819', '揭阳', '28');
INSERT INTO `city` VALUES ('2820', '茂名', '28');
INSERT INTO `city` VALUES ('2821', '汕尾', '28');
INSERT INTO `city` VALUES ('2901', '昆明', '29');
INSERT INTO `city` VALUES ('2902', '大理', '29');
INSERT INTO `city` VALUES ('2903', '红河', '29');
INSERT INTO `city` VALUES ('2904', '曲靖', '29');
INSERT INTO `city` VALUES ('2905', '保山', '29');
INSERT INTO `city` VALUES ('2906', '文山', '29');
INSERT INTO `city` VALUES ('2907', '玉溪', '29');
INSERT INTO `city` VALUES ('2908', '楚雄', '29');
INSERT INTO `city` VALUES ('2909', '普洱', '29');
INSERT INTO `city` VALUES ('2910', '昭通', '29');
INSERT INTO `city` VALUES ('2911', '临沧', '29');
INSERT INTO `city` VALUES ('2912', '怒江', '29');
INSERT INTO `city` VALUES ('2913', '迪庆', '29');
INSERT INTO `city` VALUES ('2914', '丽江', '29');
INSERT INTO `city` VALUES ('2915', '德宏', '29');
INSERT INTO `city` VALUES ('2916', '西双版纳', '29');
INSERT INTO `city` VALUES ('3001', '南宁', '30');
INSERT INTO `city` VALUES ('3002', '崇左', '30');
INSERT INTO `city` VALUES ('3003', '柳州', '30');
INSERT INTO `city` VALUES ('3004', '来宾', '30');
INSERT INTO `city` VALUES ('3005', '桂林', '30');
INSERT INTO `city` VALUES ('3006', '梧州', '30');
INSERT INTO `city` VALUES ('3007', '贺州', '30');
INSERT INTO `city` VALUES ('3008', '贵港', '30');
INSERT INTO `city` VALUES ('3009', '玉林', '30');
INSERT INTO `city` VALUES ('3010', '百色', '30');
INSERT INTO `city` VALUES ('3011', '钦州', '30');
INSERT INTO `city` VALUES ('3012', '河池', '30');
INSERT INTO `city` VALUES ('3013', '北海', '30');
INSERT INTO `city` VALUES ('3014', '防城港', '30');
INSERT INTO `city` VALUES ('3101', '海口', '31');
INSERT INTO `city` VALUES ('3102', '三亚', '31');
INSERT INTO `city` VALUES ('3103', '东方', '31');
INSERT INTO `city` VALUES ('3104', '临高', '31');
INSERT INTO `city` VALUES ('3105', '澄迈', '31');
INSERT INTO `city` VALUES ('3106', '儋州', '31');
INSERT INTO `city` VALUES ('3107', '昌江', '31');
INSERT INTO `city` VALUES ('3108', '白沙', '31');
INSERT INTO `city` VALUES ('3109', '琼中', '31');
INSERT INTO `city` VALUES ('3110', '定安', '31');
INSERT INTO `city` VALUES ('3111', '屯昌', '31');
INSERT INTO `city` VALUES ('3112', '琼海', '31');
INSERT INTO `city` VALUES ('3113', '文昌', '31');
INSERT INTO `city` VALUES ('3114', '保亭', '31');
INSERT INTO `city` VALUES ('3115', '万宁', '31');
INSERT INTO `city` VALUES ('3116', '陵水', '31');
INSERT INTO `city` VALUES ('3117', '西沙', '31');
INSERT INTO `city` VALUES ('3118', '南沙', '31');
INSERT INTO `city` VALUES ('3119', '乐东', '31');
INSERT INTO `city` VALUES ('3120', '五指山', '31');
INSERT INTO `city` VALUES ('3201', '香港', '32');
INSERT INTO `city` VALUES ('3301', '澳门', '33');
INSERT INTO `city` VALUES ('3401', '台北', '34');
INSERT INTO `city` VALUES ('3402', '高雄', '34');
INSERT INTO `city` VALUES ('3403', '台中', '34');

-- ----------------------------
-- Table structure for `distract`
-- ----------------------------
DROP TABLE IF EXISTS `distract`;
CREATE TABLE `distract` (
  `id` varchar(10) NOT NULL DEFAULT '',
  `name` varchar(20) DEFAULT NULL,
  `code` varchar(15) DEFAULT NULL,
  `city_id` varchar(10) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `city_id` (`city_id`),
  CONSTRAINT `distract_ibfk_1` FOREIGN KEY (`city_id`) REFERENCES `city` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of distract
-- ----------------------------
INSERT INTO `distract` VALUES ('010101', '北京', '101010100', '0101');
INSERT INTO `distract` VALUES ('010102', '海淀', '101010200', '0101');
INSERT INTO `distract` VALUES ('010103', '朝阳', '101010300', '0101');
INSERT INTO `distract` VALUES ('010104', '顺义', '101010400', '0101');
INSERT INTO `distract` VALUES ('010105', '怀柔', '101010500', '0101');
INSERT INTO `distract` VALUES ('010106', '通州', '101010600', '0101');
INSERT INTO `distract` VALUES ('010107', '昌平', '101010700', '0101');
INSERT INTO `distract` VALUES ('010108', '延庆', '101010800', '0101');
INSERT INTO `distract` VALUES ('010109', '丰台', '101010900', '0101');
INSERT INTO `distract` VALUES ('010110', '石景山', '101011000', '0101');
INSERT INTO `distract` VALUES ('010111', '大兴', '101011100', '0101');
INSERT INTO `distract` VALUES ('010112', '房山', '101011200', '0101');
INSERT INTO `distract` VALUES ('010113', '密云', '101011300', '0101');
INSERT INTO `distract` VALUES ('010114', '门头沟', '101011400', '0101');
INSERT INTO `distract` VALUES ('010115', '平谷', '101011500', '0101');
INSERT INTO `distract` VALUES ('020101', '上海', '101020100', '0201');
INSERT INTO `distract` VALUES ('020102', '闵行', '101020200', '0201');
INSERT INTO `distract` VALUES ('020103', '宝山', '101020300', '0201');
INSERT INTO `distract` VALUES ('020104', '嘉定', '101020500', '0201');
INSERT INTO `distract` VALUES ('020105', '浦东南汇', '101020600', '0201');
INSERT INTO `distract` VALUES ('020106', '金山', '101020700', '0201');
INSERT INTO `distract` VALUES ('020107', '青浦', '101020800', '0201');
INSERT INTO `distract` VALUES ('020108', '松江', '101020900', '0201');
INSERT INTO `distract` VALUES ('020109', '奉贤', '101021000', '0201');
INSERT INTO `distract` VALUES ('020110', '崇明', '101021100', '0201');
INSERT INTO `distract` VALUES ('020111', '徐家汇', '101021200', '0201');
INSERT INTO `distract` VALUES ('020112', '浦东', '101021300', '0201');
INSERT INTO `distract` VALUES ('030101', '天津', '101030100', '0301');
INSERT INTO `distract` VALUES ('030102', '武清', '101030200', '0301');
INSERT INTO `distract` VALUES ('030103', '宝坻', '101030300', '0301');
INSERT INTO `distract` VALUES ('030104', '东丽', '101030400', '0301');
INSERT INTO `distract` VALUES ('030105', '西青', '101030500', '0301');
INSERT INTO `distract` VALUES ('030106', '北辰', '101030600', '0301');
INSERT INTO `distract` VALUES ('030107', '宁河', '101030700', '0301');
INSERT INTO `distract` VALUES ('030108', '汉沽', '101030800', '0301');
INSERT INTO `distract` VALUES ('030109', '静海', '101030900', '0301');
INSERT INTO `distract` VALUES ('030110', '津南', '101031000', '0301');
INSERT INTO `distract` VALUES ('030111', '塘沽', '101031100', '0301');
INSERT INTO `distract` VALUES ('030112', '大港', '101031200', '0301');
INSERT INTO `distract` VALUES ('030113', '蓟县', '101031400', '0301');
INSERT INTO `distract` VALUES ('040101', '重庆', '101040100', '0401');
INSERT INTO `distract` VALUES ('040102', '永川', '101040200', '0401');
INSERT INTO `distract` VALUES ('040103', '合川', '101040300', '0401');
INSERT INTO `distract` VALUES ('040104', '南川', '101040400', '0401');
INSERT INTO `distract` VALUES ('040105', '江津', '101040500', '0401');
INSERT INTO `distract` VALUES ('040106', '万盛', '101040600', '0401');
INSERT INTO `distract` VALUES ('040107', '渝北', '101040700', '0401');
INSERT INTO `distract` VALUES ('040108', '北碚', '101040800', '0401');
INSERT INTO `distract` VALUES ('040109', '巴南', '101040900', '0401');
INSERT INTO `distract` VALUES ('040110', '长寿', '101041000', '0401');
INSERT INTO `distract` VALUES ('040111', '黔江', '101041100', '0401');
INSERT INTO `distract` VALUES ('040112', '万州', '101041300', '0401');
INSERT INTO `distract` VALUES ('040113', '涪陵', '101041400', '0401');
INSERT INTO `distract` VALUES ('040114', '开县', '101041500', '0401');
INSERT INTO `distract` VALUES ('040115', '城口', '101041600', '0401');
INSERT INTO `distract` VALUES ('040116', '云阳', '101041700', '0401');
INSERT INTO `distract` VALUES ('040117', '巫溪', '101041800', '0401');
INSERT INTO `distract` VALUES ('040118', '奉节', '101041900', '0401');
INSERT INTO `distract` VALUES ('040119', '巫山', '101042000', '0401');
INSERT INTO `distract` VALUES ('040120', '潼南', '101042100', '0401');
INSERT INTO `distract` VALUES ('040121', '垫江', '101042200', '0401');
INSERT INTO `distract` VALUES ('040122', '梁平', '101042300', '0401');
INSERT INTO `distract` VALUES ('040123', '忠县', '101042400', '0401');
INSERT INTO `distract` VALUES ('040124', '石柱', '101042500', '0401');
INSERT INTO `distract` VALUES ('040125', '大足', '101042600', '0401');
INSERT INTO `distract` VALUES ('040126', '荣昌', '101042700', '0401');
INSERT INTO `distract` VALUES ('040127', '铜梁', '101042800', '0401');
INSERT INTO `distract` VALUES ('040128', '璧山', '101042900', '0401');
INSERT INTO `distract` VALUES ('040129', '丰都', '101043000', '0401');
INSERT INTO `distract` VALUES ('040130', '武隆', '101043100', '0401');
INSERT INTO `distract` VALUES ('040131', '彭水', '101043200', '0401');
INSERT INTO `distract` VALUES ('040132', '綦江', '101043300', '0401');
INSERT INTO `distract` VALUES ('040133', '酉阳', '101043400', '0401');
INSERT INTO `distract` VALUES ('040134', '秀山', '101043600', '0401');
INSERT INTO `distract` VALUES ('050101', '哈尔滨', '101050101', '0501');
INSERT INTO `distract` VALUES ('050102', '双城', '101050102', '0501');
INSERT INTO `distract` VALUES ('050103', '呼兰', '101050103', '0501');
INSERT INTO `distract` VALUES ('050104', '阿城', '101050104', '0501');
INSERT INTO `distract` VALUES ('050105', '宾县', '101050105', '0501');
INSERT INTO `distract` VALUES ('050106', '依兰', '101050106', '0501');
INSERT INTO `distract` VALUES ('050107', '巴彦', '101050107', '0501');
INSERT INTO `distract` VALUES ('050108', '通河', '101050108', '0501');
INSERT INTO `distract` VALUES ('050109', '方正', '101050109', '0501');
INSERT INTO `distract` VALUES ('050110', '延寿', '101050110', '0501');
INSERT INTO `distract` VALUES ('050111', '尚志', '101050111', '0501');
INSERT INTO `distract` VALUES ('050112', '五常', '101050112', '0501');
INSERT INTO `distract` VALUES ('050113', '木兰', '101050113', '0501');
INSERT INTO `distract` VALUES ('050201', '齐齐哈尔', '101050201', '0502');
INSERT INTO `distract` VALUES ('050202', '讷河', '101050202', '0502');
INSERT INTO `distract` VALUES ('050203', '龙江', '101050203', '0502');
INSERT INTO `distract` VALUES ('050204', '甘南', '101050204', '0502');
INSERT INTO `distract` VALUES ('050205', '富裕', '101050205', '0502');
INSERT INTO `distract` VALUES ('050206', '依安', '101050206', '0502');
INSERT INTO `distract` VALUES ('050207', '拜泉', '101050207', '0502');
INSERT INTO `distract` VALUES ('050208', '克山', '101050208', '0502');
INSERT INTO `distract` VALUES ('050209', '克东', '101050209', '0502');
INSERT INTO `distract` VALUES ('050210', '泰来', '101050210', '0502');
INSERT INTO `distract` VALUES ('050301', '牡丹江', '101050301', '0503');
INSERT INTO `distract` VALUES ('050302', '海林', '101050302', '0503');
INSERT INTO `distract` VALUES ('050303', '穆棱', '101050303', '0503');
INSERT INTO `distract` VALUES ('050304', '林口', '101050304', '0503');
INSERT INTO `distract` VALUES ('050305', '绥芬河', '101050305', '0503');
INSERT INTO `distract` VALUES ('050306', '宁安', '101050306', '0503');
INSERT INTO `distract` VALUES ('050307', '东宁', '101050307', '0503');
INSERT INTO `distract` VALUES ('050401', '佳木斯', '101050401', '0504');
INSERT INTO `distract` VALUES ('050402', '汤原', '101050402', '0504');
INSERT INTO `distract` VALUES ('050403', '抚远', '101050403', '0504');
INSERT INTO `distract` VALUES ('050404', '桦川', '101050404', '0504');
INSERT INTO `distract` VALUES ('050405', '桦南', '101050405', '0504');
INSERT INTO `distract` VALUES ('050406', '同江', '101050406', '0504');
INSERT INTO `distract` VALUES ('050407', '富锦', '101050407', '0504');
INSERT INTO `distract` VALUES ('050501', '绥化', '101050501', '0505');
INSERT INTO `distract` VALUES ('050502', '肇东', '101050502', '0505');
INSERT INTO `distract` VALUES ('050503', '安达', '101050503', '0505');
INSERT INTO `distract` VALUES ('050504', '海伦', '101050504', '0505');
INSERT INTO `distract` VALUES ('050505', '明水', '101050505', '0505');
INSERT INTO `distract` VALUES ('050506', '望奎', '101050506', '0505');
INSERT INTO `distract` VALUES ('050507', '兰西', '101050507', '0505');
INSERT INTO `distract` VALUES ('050508', '青冈', '101050508', '0505');
INSERT INTO `distract` VALUES ('050509', '庆安', '101050509', '0505');
INSERT INTO `distract` VALUES ('050510', '绥棱', '101050510', '0505');
INSERT INTO `distract` VALUES ('050601', '黑河', '101050601', '0506');
INSERT INTO `distract` VALUES ('050602', '嫩江', '101050602', '0506');
INSERT INTO `distract` VALUES ('050603', '孙吴', '101050603', '0506');
INSERT INTO `distract` VALUES ('050604', '逊克', '101050604', '0506');
INSERT INTO `distract` VALUES ('050605', '五大连池', '101050605', '0506');
INSERT INTO `distract` VALUES ('050606', '北安', '101050606', '0506');
INSERT INTO `distract` VALUES ('050701', '大兴安岭', '101050701', '0507');
INSERT INTO `distract` VALUES ('050702', '塔河', '101050702', '0507');
INSERT INTO `distract` VALUES ('050703', '漠河', '101050703', '0507');
INSERT INTO `distract` VALUES ('050704', '呼玛', '101050704', '0507');
INSERT INTO `distract` VALUES ('050705', '呼中', '101050705', '0507');
INSERT INTO `distract` VALUES ('050706', '新林', '101050706', '0507');
INSERT INTO `distract` VALUES ('050707', '加格达奇', '101050708', '0507');
INSERT INTO `distract` VALUES ('050801', '伊春', '101050801', '0508');
INSERT INTO `distract` VALUES ('050802', '乌伊岭', '101050802', '0508');
INSERT INTO `distract` VALUES ('050803', '五营', '101050803', '0508');
INSERT INTO `distract` VALUES ('050804', '铁力', '101050804', '0508');
INSERT INTO `distract` VALUES ('050805', '嘉荫', '101050805', '0508');
INSERT INTO `distract` VALUES ('050901', '大庆', '101050901', '0509');
INSERT INTO `distract` VALUES ('050902', '林甸', '101050902', '0509');
INSERT INTO `distract` VALUES ('050903', '肇州', '101050903', '0509');
INSERT INTO `distract` VALUES ('050904', '肇源', '101050904', '0509');
INSERT INTO `distract` VALUES ('050905', '杜尔伯特', '101050905', '0509');
INSERT INTO `distract` VALUES ('051001', '七台河', '101051002', '0510');
INSERT INTO `distract` VALUES ('051002', '勃利', '101051003', '0510');
INSERT INTO `distract` VALUES ('051101', '鸡西', '101051101', '0511');
INSERT INTO `distract` VALUES ('051102', '虎林', '101051102', '0511');
INSERT INTO `distract` VALUES ('051103', '密山', '101051103', '0511');
INSERT INTO `distract` VALUES ('051104', '鸡东', '101051104', '0511');
INSERT INTO `distract` VALUES ('051201', '鹤岗', '101051201', '0512');
INSERT INTO `distract` VALUES ('051202', '绥滨', '101051202', '0512');
INSERT INTO `distract` VALUES ('051203', '萝北', '101051203', '0512');
INSERT INTO `distract` VALUES ('051301', '双鸭山', '101051301', '0513');
INSERT INTO `distract` VALUES ('051302', '集贤', '101051302', '0513');
INSERT INTO `distract` VALUES ('051303', '宝清', '101051303', '0513');
INSERT INTO `distract` VALUES ('051304', '饶河', '101051304', '0513');
INSERT INTO `distract` VALUES ('051305', '友谊', '101051305', '0513');
INSERT INTO `distract` VALUES ('060101', '长春', '101060101', '0601');
INSERT INTO `distract` VALUES ('060102', '农安', '101060102', '0601');
INSERT INTO `distract` VALUES ('060103', '德惠', '101060103', '0601');
INSERT INTO `distract` VALUES ('060104', '九台', '101060104', '0601');
INSERT INTO `distract` VALUES ('060105', '榆树', '101060105', '0601');
INSERT INTO `distract` VALUES ('060106', '双阳', '101060106', '0601');
INSERT INTO `distract` VALUES ('060201', '吉林', '101060201', '0602');
INSERT INTO `distract` VALUES ('060202', '舒兰', '101060202', '0602');
INSERT INTO `distract` VALUES ('060203', '永吉', '101060203', '0602');
INSERT INTO `distract` VALUES ('060204', '蛟河', '101060204', '0602');
INSERT INTO `distract` VALUES ('060205', '磐石', '101060205', '0602');
INSERT INTO `distract` VALUES ('060206', '桦甸', '101060206', '0602');
INSERT INTO `distract` VALUES ('060301', '延吉', '101060301', '0603');
INSERT INTO `distract` VALUES ('060302', '敦化', '101060302', '0603');
INSERT INTO `distract` VALUES ('060303', '安图', '101060303', '0603');
INSERT INTO `distract` VALUES ('060304', '汪清', '101060304', '0603');
INSERT INTO `distract` VALUES ('060305', '和龙', '101060305', '0603');
INSERT INTO `distract` VALUES ('060306', '龙井', '101060307', '0603');
INSERT INTO `distract` VALUES ('060307', '珲春', '101060308', '0603');
INSERT INTO `distract` VALUES ('060308', '图们', '101060309', '0603');
INSERT INTO `distract` VALUES ('060401', '四平', '101060401', '0604');
INSERT INTO `distract` VALUES ('060402', '双辽', '101060402', '0604');
INSERT INTO `distract` VALUES ('060403', '梨树', '101060403', '0604');
INSERT INTO `distract` VALUES ('060404', '公主岭', '101060404', '0604');
INSERT INTO `distract` VALUES ('060405', '伊通', '101060405', '0604');
INSERT INTO `distract` VALUES ('060501', '通化', '101060501', '0605');
INSERT INTO `distract` VALUES ('060502', '梅河口', '101060502', '0605');
INSERT INTO `distract` VALUES ('060503', '柳河', '101060503', '0605');
INSERT INTO `distract` VALUES ('060504', '辉南', '101060504', '0605');
INSERT INTO `distract` VALUES ('060505', '集安', '101060505', '0605');
INSERT INTO `distract` VALUES ('060506', '通化县', '101060506', '0605');
INSERT INTO `distract` VALUES ('060601', '白城', '101060601', '0606');
INSERT INTO `distract` VALUES ('060602', '洮南', '101060602', '0606');
INSERT INTO `distract` VALUES ('060603', '大安', '101060603', '0606');
INSERT INTO `distract` VALUES ('060604', '镇赉', '101060604', '0606');
INSERT INTO `distract` VALUES ('060605', '通榆', '101060605', '0606');
INSERT INTO `distract` VALUES ('060701', '辽源', '101060701', '0607');
INSERT INTO `distract` VALUES ('060702', '东丰', '101060702', '0607');
INSERT INTO `distract` VALUES ('060703', '东辽', '101060703', '0607');
INSERT INTO `distract` VALUES ('060801', '松原', '101060801', '0608');
INSERT INTO `distract` VALUES ('060802', '乾安', '101060802', '0608');
INSERT INTO `distract` VALUES ('060803', '前郭', '101060803', '0608');
INSERT INTO `distract` VALUES ('060804', '长岭', '101060804', '0608');
INSERT INTO `distract` VALUES ('060805', '扶余', '101060805', '0608');
INSERT INTO `distract` VALUES ('060901', '白山', '101060901', '0609');
INSERT INTO `distract` VALUES ('060902', '靖宇', '101060902', '0609');
INSERT INTO `distract` VALUES ('060903', '临江', '101060903', '0609');
INSERT INTO `distract` VALUES ('060904', '东岗', '101060904', '0609');
INSERT INTO `distract` VALUES ('060905', '长白', '101060905', '0609');
INSERT INTO `distract` VALUES ('060906', '抚松', '101060906', '0609');
INSERT INTO `distract` VALUES ('060907', '江源', '101060907', '0609');
INSERT INTO `distract` VALUES ('070101', '沈阳', '101070101', '0701');
INSERT INTO `distract` VALUES ('070102', '辽中', '101070103', '0701');
INSERT INTO `distract` VALUES ('070103', '康平', '101070104', '0701');
INSERT INTO `distract` VALUES ('070104', '法库', '101070105', '0701');
INSERT INTO `distract` VALUES ('070105', '新民', '101070106', '0701');
INSERT INTO `distract` VALUES ('070201', '大连', '101070201', '0702');
INSERT INTO `distract` VALUES ('070202', '瓦房店', '101070202', '0702');
INSERT INTO `distract` VALUES ('070203', '金州', '101070203', '0702');
INSERT INTO `distract` VALUES ('070204', '普兰店', '101070204', '0702');
INSERT INTO `distract` VALUES ('070205', '旅顺', '101070205', '0702');
INSERT INTO `distract` VALUES ('070206', '长海', '101070206', '0702');
INSERT INTO `distract` VALUES ('070207', '庄河', '101070207', '0702');
INSERT INTO `distract` VALUES ('070301', '鞍山', '101070301', '0703');
INSERT INTO `distract` VALUES ('070302', '台安', '101070302', '0703');
INSERT INTO `distract` VALUES ('070303', '岫岩', '101070303', '0703');
INSERT INTO `distract` VALUES ('070304', '海城', '101070304', '0703');
INSERT INTO `distract` VALUES ('070401', '抚顺', '101070401', '0704');
INSERT INTO `distract` VALUES ('070402', '新宾', '101070402', '0704');
INSERT INTO `distract` VALUES ('070403', '清原', '101070403', '0704');
INSERT INTO `distract` VALUES ('070404', '章党', '101070404', '0704');
INSERT INTO `distract` VALUES ('070501', '本溪', '101070501', '0705');
INSERT INTO `distract` VALUES ('070502', '本溪县', '101070502', '0705');
INSERT INTO `distract` VALUES ('070503', '桓仁', '101070504', '0705');
INSERT INTO `distract` VALUES ('070601', '丹东', '101070601', '0706');
INSERT INTO `distract` VALUES ('070602', '凤城', '101070602', '0706');
INSERT INTO `distract` VALUES ('070603', '宽甸', '101070603', '0706');
INSERT INTO `distract` VALUES ('070604', '东港', '101070604', '0706');
INSERT INTO `distract` VALUES ('070701', '锦州', '101070701', '0707');
INSERT INTO `distract` VALUES ('070702', '凌海', '101070702', '0707');
INSERT INTO `distract` VALUES ('070703', '义县', '101070704', '0707');
INSERT INTO `distract` VALUES ('070704', '黑山', '101070705', '0707');
INSERT INTO `distract` VALUES ('070705', '北镇', '101070706', '0707');
INSERT INTO `distract` VALUES ('070801', '营口', '101070801', '0708');
INSERT INTO `distract` VALUES ('070802', '大石桥', '101070802', '0708');
INSERT INTO `distract` VALUES ('070803', '盖州', '101070803', '0708');
INSERT INTO `distract` VALUES ('070901', '阜新', '101070901', '0709');
INSERT INTO `distract` VALUES ('070902', '彰武', '101070902', '0709');
INSERT INTO `distract` VALUES ('071001', '辽阳', '101071001', '0710');
INSERT INTO `distract` VALUES ('071002', '辽阳县', '101071002', '0710');
INSERT INTO `distract` VALUES ('071003', '灯塔', '101071003', '0710');
INSERT INTO `distract` VALUES ('071004', '弓长岭', '101071004', '0710');
INSERT INTO `distract` VALUES ('071101', '铁岭', '101071101', '0711');
INSERT INTO `distract` VALUES ('071102', '开原', '101071102', '0711');
INSERT INTO `distract` VALUES ('071103', '昌图', '101071103', '0711');
INSERT INTO `distract` VALUES ('071104', '西丰', '101071104', '0711');
INSERT INTO `distract` VALUES ('071105', '调兵山', '101071105', '0711');
INSERT INTO `distract` VALUES ('071201', '朝阳', '101071201', '0712');
INSERT INTO `distract` VALUES ('071202', '凌源', '101071203', '0712');
INSERT INTO `distract` VALUES ('071203', '喀左', '101071204', '0712');
INSERT INTO `distract` VALUES ('071204', '北票', '101071205', '0712');
INSERT INTO `distract` VALUES ('071205', '建平县', '101071207', '0712');
INSERT INTO `distract` VALUES ('071301', '盘锦', '101071301', '0713');
INSERT INTO `distract` VALUES ('071302', '大洼', '101071302', '0713');
INSERT INTO `distract` VALUES ('071303', '盘山', '101071303', '0713');
INSERT INTO `distract` VALUES ('071401', '葫芦岛', '101071401', '0714');
INSERT INTO `distract` VALUES ('071402', '建昌', '101071402', '0714');
INSERT INTO `distract` VALUES ('071403', '绥中', '101071403', '0714');
INSERT INTO `distract` VALUES ('071404', '兴城', '101071404', '0714');
INSERT INTO `distract` VALUES ('080101', '呼和浩特', '101080101', '0801');
INSERT INTO `distract` VALUES ('080102', '土左旗', '101080102', '0801');
INSERT INTO `distract` VALUES ('080103', '托县', '101080103', '0801');
INSERT INTO `distract` VALUES ('080104', '和林', '101080104', '0801');
INSERT INTO `distract` VALUES ('080105', '清水河', '101080105', '0801');
INSERT INTO `distract` VALUES ('080106', '呼市郊区', '101080106', '0801');
INSERT INTO `distract` VALUES ('080107', '武川', '101080107', '0801');
INSERT INTO `distract` VALUES ('080201', '包头', '101080201', '0802');
INSERT INTO `distract` VALUES ('080202', '白云鄂博', '101080202', '0802');
INSERT INTO `distract` VALUES ('080203', '满都拉', '101080203', '0802');
INSERT INTO `distract` VALUES ('080204', '土右旗', '101080204', '0802');
INSERT INTO `distract` VALUES ('080205', '固阳', '101080205', '0802');
INSERT INTO `distract` VALUES ('080206', '达茂旗', '101080206', '0802');
INSERT INTO `distract` VALUES ('080207', '希拉穆仁', '101080207', '0802');
INSERT INTO `distract` VALUES ('080301', '乌海', '101080301', '0803');
INSERT INTO `distract` VALUES ('080401', '集宁', '101080401', '0804');
INSERT INTO `distract` VALUES ('080402', '卓资', '101080402', '0804');
INSERT INTO `distract` VALUES ('080403', '化德', '101080403', '0804');
INSERT INTO `distract` VALUES ('080404', '商都', '101080404', '0804');
INSERT INTO `distract` VALUES ('080405', '兴和', '101080406', '0804');
INSERT INTO `distract` VALUES ('080406', '凉城', '101080407', '0804');
INSERT INTO `distract` VALUES ('080407', '察右前旗', '101080408', '0804');
INSERT INTO `distract` VALUES ('080408', '察右中旗', '101080409', '0804');
INSERT INTO `distract` VALUES ('080409', '察右后旗', '101080410', '0804');
INSERT INTO `distract` VALUES ('080410', '四子王旗', '101080411', '0804');
INSERT INTO `distract` VALUES ('080411', '丰镇', '101080412', '0804');
INSERT INTO `distract` VALUES ('080501', '通辽', '101080501', '0805');
INSERT INTO `distract` VALUES ('080502', '舍伯吐', '101080502', '0805');
INSERT INTO `distract` VALUES ('080503', '科左中旗', '101080503', '0805');
INSERT INTO `distract` VALUES ('080504', '科左后旗', '101080504', '0805');
INSERT INTO `distract` VALUES ('080505', '青龙山', '101080505', '0805');
INSERT INTO `distract` VALUES ('080506', '开鲁', '101080506', '0805');
INSERT INTO `distract` VALUES ('080507', '库伦', '101080507', '0805');
INSERT INTO `distract` VALUES ('080508', '奈曼', '101080508', '0805');
INSERT INTO `distract` VALUES ('080509', '扎鲁特', '101080509', '0805');
INSERT INTO `distract` VALUES ('080510', '巴雅尔吐胡硕', '101080511', '0805');
INSERT INTO `distract` VALUES ('080511', '霍林郭勒', '101081108', '0805');
INSERT INTO `distract` VALUES ('080601', '赤峰', '101080601', '0806');
INSERT INTO `distract` VALUES ('080602', '阿鲁旗', '101080603', '0806');
INSERT INTO `distract` VALUES ('080603', '浩尔吐', '101080604', '0806');
INSERT INTO `distract` VALUES ('080604', '巴林左旗', '101080605', '0806');
INSERT INTO `distract` VALUES ('080605', '巴林右旗', '101080606', '0806');
INSERT INTO `distract` VALUES ('080606', '林西', '101080607', '0806');
INSERT INTO `distract` VALUES ('080607', '克什克腾', '101080608', '0806');
INSERT INTO `distract` VALUES ('080608', '翁牛特', '101080609', '0806');
INSERT INTO `distract` VALUES ('080609', '岗子', '101080610', '0806');
INSERT INTO `distract` VALUES ('080610', '喀喇沁', '101080611', '0806');
INSERT INTO `distract` VALUES ('080611', '八里罕', '101080612', '0806');
INSERT INTO `distract` VALUES ('080612', '宁城', '101080613', '0806');
INSERT INTO `distract` VALUES ('080613', '敖汉', '101080614', '0806');
INSERT INTO `distract` VALUES ('080614', '宝国吐', '101080615', '0806');
INSERT INTO `distract` VALUES ('080701', '鄂尔多斯', '101080701', '0807');
INSERT INTO `distract` VALUES ('080702', '达拉特', '101080703', '0807');
INSERT INTO `distract` VALUES ('080703', '准格尔', '101080704', '0807');
INSERT INTO `distract` VALUES ('080704', '鄂前旗', '101080705', '0807');
INSERT INTO `distract` VALUES ('080705', '河南', '101080706', '0807');
INSERT INTO `distract` VALUES ('080706', '伊克乌素', '101080707', '0807');
INSERT INTO `distract` VALUES ('080707', '鄂托克', '101080708', '0807');
INSERT INTO `distract` VALUES ('080708', '杭锦旗', '101080709', '0807');
INSERT INTO `distract` VALUES ('080709', '乌审旗', '101080710', '0807');
INSERT INTO `distract` VALUES ('080710', '伊金霍洛', '101080711', '0807');
INSERT INTO `distract` VALUES ('080711', '乌审召', '101080712', '0807');
INSERT INTO `distract` VALUES ('080712', '东胜', '101080713', '0807');
INSERT INTO `distract` VALUES ('080801', '临河', '101080801', '0808');
INSERT INTO `distract` VALUES ('080802', '五原', '101080802', '0808');
INSERT INTO `distract` VALUES ('080803', '磴口', '101080803', '0808');
INSERT INTO `distract` VALUES ('080804', '乌前旗', '101080804', '0808');
INSERT INTO `distract` VALUES ('080805', '大佘太', '101080805', '0808');
INSERT INTO `distract` VALUES ('080806', '乌中旗', '101080806', '0808');
INSERT INTO `distract` VALUES ('080807', '乌后旗', '101080807', '0808');
INSERT INTO `distract` VALUES ('080808', '海力素', '101080808', '0808');
INSERT INTO `distract` VALUES ('080809', '那仁宝力格', '101080809', '0808');
INSERT INTO `distract` VALUES ('080810', '杭锦后旗', '101080810', '0808');
INSERT INTO `distract` VALUES ('080901', '锡林浩特', '101080901', '0809');
INSERT INTO `distract` VALUES ('080902', '二连浩特', '101080903', '0809');
INSERT INTO `distract` VALUES ('080903', '阿巴嘎', '101080904', '0809');
INSERT INTO `distract` VALUES ('080904', '苏左旗', '101080906', '0809');
INSERT INTO `distract` VALUES ('080905', '苏右旗', '101080907', '0809');
INSERT INTO `distract` VALUES ('080906', '朱日和', '101080908', '0809');
INSERT INTO `distract` VALUES ('080907', '东乌旗', '101080909', '0809');
INSERT INTO `distract` VALUES ('080908', '西乌旗', '101080910', '0809');
INSERT INTO `distract` VALUES ('080909', '太仆寺', '101080911', '0809');
INSERT INTO `distract` VALUES ('080910', '镶黄旗', '101080912', '0809');
INSERT INTO `distract` VALUES ('080911', '正镶白旗', '101080913', '0809');
INSERT INTO `distract` VALUES ('080912', '正蓝旗', '101080914', '0809');
INSERT INTO `distract` VALUES ('080913', '多伦', '101080915', '0809');
INSERT INTO `distract` VALUES ('080914', '博克图', '101080916', '0809');
INSERT INTO `distract` VALUES ('080915', '乌拉盖', '101080917', '0809');
INSERT INTO `distract` VALUES ('081001', '海拉尔', '101081001', '0810');
INSERT INTO `distract` VALUES ('081002', '小二沟', '101081002', '0810');
INSERT INTO `distract` VALUES ('081003', '阿荣旗', '101081003', '0810');
INSERT INTO `distract` VALUES ('081004', '莫力达瓦', '101081004', '0810');
INSERT INTO `distract` VALUES ('081005', '鄂伦春旗', '101081005', '0810');
INSERT INTO `distract` VALUES ('081006', '鄂温克旗', '101081006', '0810');
INSERT INTO `distract` VALUES ('081007', '陈旗', '101081007', '0810');
INSERT INTO `distract` VALUES ('081008', '新左旗', '101081008', '0810');
INSERT INTO `distract` VALUES ('081009', '新右旗', '101081009', '0810');
INSERT INTO `distract` VALUES ('081010', '满洲里', '101081010', '0810');
INSERT INTO `distract` VALUES ('081011', '牙克石', '101081011', '0810');
INSERT INTO `distract` VALUES ('081012', '扎兰屯', '101081012', '0810');
INSERT INTO `distract` VALUES ('081013', '额尔古纳', '101081014', '0810');
INSERT INTO `distract` VALUES ('081014', '根河', '101081015', '0810');
INSERT INTO `distract` VALUES ('081015', '图里河', '101081016', '0810');
INSERT INTO `distract` VALUES ('081101', '高力板', '101080510', '0811');
INSERT INTO `distract` VALUES ('081102', '乌兰浩特', '101081101', '0811');
INSERT INTO `distract` VALUES ('081103', '阿尔山', '101081102', '0811');
INSERT INTO `distract` VALUES ('081104', '科右中旗', '101081103', '0811');
INSERT INTO `distract` VALUES ('081105', '胡尔勒', '101081104', '0811');
INSERT INTO `distract` VALUES ('081106', '扎赉特', '101081105', '0811');
INSERT INTO `distract` VALUES ('081107', '索伦', '101081106', '0811');
INSERT INTO `distract` VALUES ('081108', '突泉', '101081107', '0811');
INSERT INTO `distract` VALUES ('081109', '科右前旗', '101081109', '0811');
INSERT INTO `distract` VALUES ('081201', '阿左旗', '101081201', '0812');
INSERT INTO `distract` VALUES ('081202', '阿右旗', '101081202', '0812');
INSERT INTO `distract` VALUES ('081203', '额济纳', '101081203', '0812');
INSERT INTO `distract` VALUES ('081204', '拐子湖', '101081204', '0812');
INSERT INTO `distract` VALUES ('081205', '吉兰太', '101081205', '0812');
INSERT INTO `distract` VALUES ('081206', '锡林高勒', '101081206', '0812');
INSERT INTO `distract` VALUES ('081207', '头道湖', '101081207', '0812');
INSERT INTO `distract` VALUES ('081208', '中泉子', '101081208', '0812');
INSERT INTO `distract` VALUES ('081209', '诺尔公', '101081209', '0812');
INSERT INTO `distract` VALUES ('081210', '雅布赖', '101081210', '0812');
INSERT INTO `distract` VALUES ('081211', '乌斯泰', '101081211', '0812');
INSERT INTO `distract` VALUES ('081212', '孪井滩', '101081212', '0812');
INSERT INTO `distract` VALUES ('090101', '石家庄', '101090101', '0901');
INSERT INTO `distract` VALUES ('090102', '井陉', '101090102', '0901');
INSERT INTO `distract` VALUES ('090103', '正定', '101090103', '0901');
INSERT INTO `distract` VALUES ('090104', '栾城', '101090104', '0901');
INSERT INTO `distract` VALUES ('090105', '行唐', '101090105', '0901');
INSERT INTO `distract` VALUES ('090106', '灵寿', '101090106', '0901');
INSERT INTO `distract` VALUES ('090107', '高邑', '101090107', '0901');
INSERT INTO `distract` VALUES ('090108', '深泽', '101090108', '0901');
INSERT INTO `distract` VALUES ('090109', '赞皇', '101090109', '0901');
INSERT INTO `distract` VALUES ('090110', '无极', '101090110', '0901');
INSERT INTO `distract` VALUES ('090111', '平山', '101090111', '0901');
INSERT INTO `distract` VALUES ('090112', '元氏', '101090112', '0901');
INSERT INTO `distract` VALUES ('090113', '赵县', '101090113', '0901');
INSERT INTO `distract` VALUES ('090114', '辛集', '101090114', '0901');
INSERT INTO `distract` VALUES ('090115', '藁城', '101090115', '0901');
INSERT INTO `distract` VALUES ('090116', '晋州', '101090116', '0901');
INSERT INTO `distract` VALUES ('090117', '新乐', '101090117', '0901');
INSERT INTO `distract` VALUES ('090118', '鹿泉', '101090118', '0901');
INSERT INTO `distract` VALUES ('090201', '保定', '101090201', '0902');
INSERT INTO `distract` VALUES ('090202', '满城', '101090202', '0902');
INSERT INTO `distract` VALUES ('090203', '阜平', '101090203', '0902');
INSERT INTO `distract` VALUES ('090204', '徐水', '101090204', '0902');
INSERT INTO `distract` VALUES ('090205', '唐县', '101090205', '0902');
INSERT INTO `distract` VALUES ('090206', '高阳', '101090206', '0902');
INSERT INTO `distract` VALUES ('090207', '容城', '101090207', '0902');
INSERT INTO `distract` VALUES ('090208', '涞源', '101090209', '0902');
INSERT INTO `distract` VALUES ('090209', '望都', '101090210', '0902');
INSERT INTO `distract` VALUES ('090210', '安新', '101090211', '0902');
INSERT INTO `distract` VALUES ('090211', '易县', '101090212', '0902');
INSERT INTO `distract` VALUES ('090212', '曲阳', '101090214', '0902');
INSERT INTO `distract` VALUES ('090213', '蠡县', '101090215', '0902');
INSERT INTO `distract` VALUES ('090214', '顺平', '101090216', '0902');
INSERT INTO `distract` VALUES ('090215', '雄县', '101090217', '0902');
INSERT INTO `distract` VALUES ('090216', '涿州', '101090218', '0902');
INSERT INTO `distract` VALUES ('090217', '定州', '101090219', '0902');
INSERT INTO `distract` VALUES ('090218', '安国', '101090220', '0902');
INSERT INTO `distract` VALUES ('090219', '高碑店', '101090221', '0902');
INSERT INTO `distract` VALUES ('090220', '涞水', '101090222', '0902');
INSERT INTO `distract` VALUES ('090221', '定兴', '101090223', '0902');
INSERT INTO `distract` VALUES ('090222', '清苑', '101090224', '0902');
INSERT INTO `distract` VALUES ('090223', '博野', '101090225', '0902');
INSERT INTO `distract` VALUES ('090301', '张家口', '101090301', '0903');
INSERT INTO `distract` VALUES ('090302', '宣化', '101090302', '0903');
INSERT INTO `distract` VALUES ('090303', '张北', '101090303', '0903');
INSERT INTO `distract` VALUES ('090304', '康保', '101090304', '0903');
INSERT INTO `distract` VALUES ('090305', '沽源', '101090305', '0903');
INSERT INTO `distract` VALUES ('090306', '尚义', '101090306', '0903');
INSERT INTO `distract` VALUES ('090307', '蔚县', '101090307', '0903');
INSERT INTO `distract` VALUES ('090308', '阳原', '101090308', '0903');
INSERT INTO `distract` VALUES ('090309', '怀安', '101090309', '0903');
INSERT INTO `distract` VALUES ('090310', '万全', '101090310', '0903');
INSERT INTO `distract` VALUES ('090311', '怀来', '101090311', '0903');
INSERT INTO `distract` VALUES ('090312', '涿鹿', '101090312', '0903');
INSERT INTO `distract` VALUES ('090313', '赤城', '101090313', '0903');
INSERT INTO `distract` VALUES ('090314', '崇礼', '101090314', '0903');
INSERT INTO `distract` VALUES ('090401', '承德', '101090402', '0904');
INSERT INTO `distract` VALUES ('090402', '承德县', '101090403', '0904');
INSERT INTO `distract` VALUES ('090403', '兴隆', '101090404', '0904');
INSERT INTO `distract` VALUES ('090404', '平泉', '101090405', '0904');
INSERT INTO `distract` VALUES ('090405', '滦平', '101090406', '0904');
INSERT INTO `distract` VALUES ('090406', '隆化', '101090407', '0904');
INSERT INTO `distract` VALUES ('090407', '丰宁', '101090408', '0904');
INSERT INTO `distract` VALUES ('090408', '宽城', '101090409', '0904');
INSERT INTO `distract` VALUES ('090409', '围场', '101090410', '0904');
INSERT INTO `distract` VALUES ('090501', '唐山', '101090501', '0905');
INSERT INTO `distract` VALUES ('090502', '丰南', '101090502', '0905');
INSERT INTO `distract` VALUES ('090503', '丰润', '101090503', '0905');
INSERT INTO `distract` VALUES ('090504', '滦县', '101090504', '0905');
INSERT INTO `distract` VALUES ('090505', '滦南', '101090505', '0905');
INSERT INTO `distract` VALUES ('090506', '乐亭', '101090506', '0905');
INSERT INTO `distract` VALUES ('090507', '迁西', '101090507', '0905');
INSERT INTO `distract` VALUES ('090508', '玉田', '101090508', '0905');
INSERT INTO `distract` VALUES ('090509', '唐海', '101090509', '0905');
INSERT INTO `distract` VALUES ('090510', '遵化', '101090510', '0905');
INSERT INTO `distract` VALUES ('090511', '迁安', '101090511', '0905');
INSERT INTO `distract` VALUES ('090512', '曹妃甸', '101090512', '0905');
INSERT INTO `distract` VALUES ('090601', '廊坊', '101090601', '0906');
INSERT INTO `distract` VALUES ('090602', '固安', '101090602', '0906');
INSERT INTO `distract` VALUES ('090603', '永清', '101090603', '0906');
INSERT INTO `distract` VALUES ('090604', '香河', '101090604', '0906');
INSERT INTO `distract` VALUES ('090605', '大城', '101090605', '0906');
INSERT INTO `distract` VALUES ('090606', '文安', '101090606', '0906');
INSERT INTO `distract` VALUES ('090607', '大厂', '101090607', '0906');
INSERT INTO `distract` VALUES ('090608', '霸州', '101090608', '0906');
INSERT INTO `distract` VALUES ('090609', '三河', '101090609', '0906');
INSERT INTO `distract` VALUES ('090701', '沧州', '101090701', '0907');
INSERT INTO `distract` VALUES ('090702', '青县', '101090702', '0907');
INSERT INTO `distract` VALUES ('090703', '东光', '101090703', '0907');
INSERT INTO `distract` VALUES ('090704', '海兴', '101090704', '0907');
INSERT INTO `distract` VALUES ('090705', '盐山', '101090705', '0907');
INSERT INTO `distract` VALUES ('090706', '肃宁', '101090706', '0907');
INSERT INTO `distract` VALUES ('090707', '南皮', '101090707', '0907');
INSERT INTO `distract` VALUES ('090708', '吴桥', '101090708', '0907');
INSERT INTO `distract` VALUES ('090709', '献县', '101090709', '0907');
INSERT INTO `distract` VALUES ('090710', '孟村', '101090710', '0907');
INSERT INTO `distract` VALUES ('090711', '泊头', '101090711', '0907');
INSERT INTO `distract` VALUES ('090712', '任丘', '101090712', '0907');
INSERT INTO `distract` VALUES ('090713', '黄骅', '101090713', '0907');
INSERT INTO `distract` VALUES ('090714', '河间', '101090714', '0907');
INSERT INTO `distract` VALUES ('090715', '沧县', '101090716', '0907');
INSERT INTO `distract` VALUES ('090801', '衡水', '101090801', '0908');
INSERT INTO `distract` VALUES ('090802', '枣强', '101090802', '0908');
INSERT INTO `distract` VALUES ('090803', '武邑', '101090803', '0908');
INSERT INTO `distract` VALUES ('090804', '武强', '101090804', '0908');
INSERT INTO `distract` VALUES ('090805', '饶阳', '101090805', '0908');
INSERT INTO `distract` VALUES ('090806', '安平', '101090806', '0908');
INSERT INTO `distract` VALUES ('090807', '故城', '101090807', '0908');
INSERT INTO `distract` VALUES ('090808', '景县', '101090808', '0908');
INSERT INTO `distract` VALUES ('090809', '阜城', '101090809', '0908');
INSERT INTO `distract` VALUES ('090810', '冀州', '101090810', '0908');
INSERT INTO `distract` VALUES ('090811', '深州', '101090811', '0908');
INSERT INTO `distract` VALUES ('090901', '邢台', '101090901', '0909');
INSERT INTO `distract` VALUES ('090902', '临城', '101090902', '0909');
INSERT INTO `distract` VALUES ('090903', '内丘', '101090904', '0909');
INSERT INTO `distract` VALUES ('090904', '柏乡', '101090905', '0909');
INSERT INTO `distract` VALUES ('090905', '隆尧', '101090906', '0909');
INSERT INTO `distract` VALUES ('090906', '南和', '101090907', '0909');
INSERT INTO `distract` VALUES ('090907', '宁晋', '101090908', '0909');
INSERT INTO `distract` VALUES ('090908', '巨鹿', '101090909', '0909');
INSERT INTO `distract` VALUES ('090909', '新河', '101090910', '0909');
INSERT INTO `distract` VALUES ('090910', '广宗', '101090911', '0909');
INSERT INTO `distract` VALUES ('090911', '平乡', '101090912', '0909');
INSERT INTO `distract` VALUES ('090912', '威县', '101090913', '0909');
INSERT INTO `distract` VALUES ('090913', '清河', '101090914', '0909');
INSERT INTO `distract` VALUES ('090914', '临西', '101090915', '0909');
INSERT INTO `distract` VALUES ('090915', '南宫', '101090916', '0909');
INSERT INTO `distract` VALUES ('090916', '沙河', '101090917', '0909');
INSERT INTO `distract` VALUES ('090917', '任县', '101090918', '0909');
INSERT INTO `distract` VALUES ('091001', '邯郸', '101091001', '0910');
INSERT INTO `distract` VALUES ('091002', '峰峰', '101091002', '0910');
INSERT INTO `distract` VALUES ('091003', '临漳', '101091003', '0910');
INSERT INTO `distract` VALUES ('091004', '成安', '101091004', '0910');
INSERT INTO `distract` VALUES ('091005', '大名', '101091005', '0910');
INSERT INTO `distract` VALUES ('091006', '涉县', '101091006', '0910');
INSERT INTO `distract` VALUES ('091007', '磁县', '101091007', '0910');
INSERT INTO `distract` VALUES ('091008', '肥乡', '101091008', '0910');
INSERT INTO `distract` VALUES ('091009', '永年', '101091009', '0910');
INSERT INTO `distract` VALUES ('091010', '邱县', '101091010', '0910');
INSERT INTO `distract` VALUES ('091011', '鸡泽', '101091011', '0910');
INSERT INTO `distract` VALUES ('091012', '广平', '101091012', '0910');
INSERT INTO `distract` VALUES ('091013', '馆陶', '101091013', '0910');
INSERT INTO `distract` VALUES ('091014', '魏县', '101091014', '0910');
INSERT INTO `distract` VALUES ('091015', '曲周', '101091015', '0910');
INSERT INTO `distract` VALUES ('091016', '武安', '101091016', '0910');
INSERT INTO `distract` VALUES ('091101', '秦皇岛', '101091101', '0911');
INSERT INTO `distract` VALUES ('091102', '青龙', '101091102', '0911');
INSERT INTO `distract` VALUES ('091103', '昌黎', '101091103', '0911');
INSERT INTO `distract` VALUES ('091104', '抚宁', '101091104', '0911');
INSERT INTO `distract` VALUES ('091105', '卢龙', '101091105', '0911');
INSERT INTO `distract` VALUES ('091106', '北戴河', '101091106', '0911');
INSERT INTO `distract` VALUES ('100101', '太原', '101100101', '1001');
INSERT INTO `distract` VALUES ('100102', '清徐', '101100102', '1001');
INSERT INTO `distract` VALUES ('100103', '阳曲', '101100103', '1001');
INSERT INTO `distract` VALUES ('100104', '娄烦', '101100104', '1001');
INSERT INTO `distract` VALUES ('100105', '古交', '101100105', '1001');
INSERT INTO `distract` VALUES ('100106', '尖草坪区', '101100106', '1001');
INSERT INTO `distract` VALUES ('100107', '小店区', '101100107', '1001');
INSERT INTO `distract` VALUES ('100201', '大同', '101100201', '1002');
INSERT INTO `distract` VALUES ('100202', '阳高', '101100202', '1002');
INSERT INTO `distract` VALUES ('100203', '大同县', '101100203', '1002');
INSERT INTO `distract` VALUES ('100204', '天镇', '101100204', '1002');
INSERT INTO `distract` VALUES ('100205', '广灵', '101100205', '1002');
INSERT INTO `distract` VALUES ('100206', '灵丘', '101100206', '1002');
INSERT INTO `distract` VALUES ('100207', '浑源', '101100207', '1002');
INSERT INTO `distract` VALUES ('100208', '左云', '101100208', '1002');
INSERT INTO `distract` VALUES ('100301', '阳泉', '101100301', '1003');
INSERT INTO `distract` VALUES ('100302', '盂县', '101100302', '1003');
INSERT INTO `distract` VALUES ('100303', '平定', '101100303', '1003');
INSERT INTO `distract` VALUES ('100401', '晋中', '101100401', '1004');
INSERT INTO `distract` VALUES ('100402', '榆次', '101100402', '1004');
INSERT INTO `distract` VALUES ('100403', '榆社', '101100403', '1004');
INSERT INTO `distract` VALUES ('100404', '左权', '101100404', '1004');
INSERT INTO `distract` VALUES ('100405', '和顺', '101100405', '1004');
INSERT INTO `distract` VALUES ('100406', '昔阳', '101100406', '1004');
INSERT INTO `distract` VALUES ('100407', '寿阳', '101100407', '1004');
INSERT INTO `distract` VALUES ('100408', '太谷', '101100408', '1004');
INSERT INTO `distract` VALUES ('100409', '祁县', '101100409', '1004');
INSERT INTO `distract` VALUES ('100410', '平遥', '101100410', '1004');
INSERT INTO `distract` VALUES ('100411', '灵石', '101100411', '1004');
INSERT INTO `distract` VALUES ('100412', '介休', '101100412', '1004');
INSERT INTO `distract` VALUES ('100501', '长治', '101100501', '1005');
INSERT INTO `distract` VALUES ('100502', '黎城', '101100502', '1005');
INSERT INTO `distract` VALUES ('100503', '屯留', '101100503', '1005');
INSERT INTO `distract` VALUES ('100504', '潞城', '101100504', '1005');
INSERT INTO `distract` VALUES ('100505', '襄垣', '101100505', '1005');
INSERT INTO `distract` VALUES ('100506', '平顺', '101100506', '1005');
INSERT INTO `distract` VALUES ('100507', '武乡', '101100507', '1005');
INSERT INTO `distract` VALUES ('100508', '沁县', '101100508', '1005');
INSERT INTO `distract` VALUES ('100509', '长子', '101100509', '1005');
INSERT INTO `distract` VALUES ('100510', '沁源', '101100510', '1005');
INSERT INTO `distract` VALUES ('100511', '壶关', '101100511', '1005');
INSERT INTO `distract` VALUES ('100601', '晋城', '101100601', '1006');
INSERT INTO `distract` VALUES ('100602', '沁水', '101100602', '1006');
INSERT INTO `distract` VALUES ('100603', '阳城', '101100603', '1006');
INSERT INTO `distract` VALUES ('100604', '陵川', '101100604', '1006');
INSERT INTO `distract` VALUES ('100605', '高平', '101100605', '1006');
INSERT INTO `distract` VALUES ('100606', '泽州', '101100606', '1006');
INSERT INTO `distract` VALUES ('100701', '临汾', '101100701', '1007');
INSERT INTO `distract` VALUES ('100702', '曲沃', '101100702', '1007');
INSERT INTO `distract` VALUES ('100703', '永和', '101100703', '1007');
INSERT INTO `distract` VALUES ('100704', '隰县', '101100704', '1007');
INSERT INTO `distract` VALUES ('100705', '大宁', '101100705', '1007');
INSERT INTO `distract` VALUES ('100706', '吉县', '101100706', '1007');
INSERT INTO `distract` VALUES ('100707', '襄汾', '101100707', '1007');
INSERT INTO `distract` VALUES ('100708', '蒲县', '101100708', '1007');
INSERT INTO `distract` VALUES ('100709', '汾西', '101100709', '1007');
INSERT INTO `distract` VALUES ('100710', '洪洞', '101100710', '1007');
INSERT INTO `distract` VALUES ('100711', '霍州', '101100711', '1007');
INSERT INTO `distract` VALUES ('100712', '乡宁', '101100712', '1007');
INSERT INTO `distract` VALUES ('100713', '翼城', '101100713', '1007');
INSERT INTO `distract` VALUES ('100714', '侯马', '101100714', '1007');
INSERT INTO `distract` VALUES ('100715', '浮山', '101100715', '1007');
INSERT INTO `distract` VALUES ('100716', '安泽', '101100716', '1007');
INSERT INTO `distract` VALUES ('100717', '古县', '101100717', '1007');
INSERT INTO `distract` VALUES ('100801', '运城', '101100801', '1008');
INSERT INTO `distract` VALUES ('100802', '临猗', '101100802', '1008');
INSERT INTO `distract` VALUES ('100803', '稷山', '101100803', '1008');
INSERT INTO `distract` VALUES ('100804', '万荣', '101100804', '1008');
INSERT INTO `distract` VALUES ('100805', '河津', '101100805', '1008');
INSERT INTO `distract` VALUES ('100806', '新绛', '101100806', '1008');
INSERT INTO `distract` VALUES ('100807', '绛县', '101100807', '1008');
INSERT INTO `distract` VALUES ('100808', '闻喜', '101100808', '1008');
INSERT INTO `distract` VALUES ('100809', '垣曲', '101100809', '1008');
INSERT INTO `distract` VALUES ('100810', '永济', '101100810', '1008');
INSERT INTO `distract` VALUES ('100811', '芮城', '101100811', '1008');
INSERT INTO `distract` VALUES ('100812', '夏县', '101100812', '1008');
INSERT INTO `distract` VALUES ('100813', '平陆', '101100813', '1008');
INSERT INTO `distract` VALUES ('100901', '朔州', '101100901', '1009');
INSERT INTO `distract` VALUES ('100902', '平鲁', '101100902', '1009');
INSERT INTO `distract` VALUES ('100903', '山阴', '101100903', '1009');
INSERT INTO `distract` VALUES ('100904', '右玉', '101100904', '1009');
INSERT INTO `distract` VALUES ('100905', '应县', '101100905', '1009');
INSERT INTO `distract` VALUES ('100906', '怀仁', '101100906', '1009');
INSERT INTO `distract` VALUES ('101001', '忻州', '101101001', '1010');
INSERT INTO `distract` VALUES ('101002', '定襄', '101101002', '1010');
INSERT INTO `distract` VALUES ('101003', '五台县', '101101003', '1010');
INSERT INTO `distract` VALUES ('101004', '河曲', '101101004', '1010');
INSERT INTO `distract` VALUES ('101005', '偏关', '101101005', '1010');
INSERT INTO `distract` VALUES ('101006', '神池', '101101006', '1010');
INSERT INTO `distract` VALUES ('101007', '宁武', '101101007', '1010');
INSERT INTO `distract` VALUES ('101008', '代县', '101101008', '1010');
INSERT INTO `distract` VALUES ('101009', '繁峙', '101101009', '1010');
INSERT INTO `distract` VALUES ('101010', '五台山', '101101010', '1010');
INSERT INTO `distract` VALUES ('101011', '保德', '101101011', '1010');
INSERT INTO `distract` VALUES ('101012', '静乐', '101101012', '1010');
INSERT INTO `distract` VALUES ('101013', '岢岚', '101101013', '1010');
INSERT INTO `distract` VALUES ('101014', '五寨', '101101014', '1010');
INSERT INTO `distract` VALUES ('101015', '原平', '101101015', '1010');
INSERT INTO `distract` VALUES ('101101', '吕梁', '101101100', '1011');
INSERT INTO `distract` VALUES ('101102', '离石', '101101101', '1011');
INSERT INTO `distract` VALUES ('101103', '临县', '101101102', '1011');
INSERT INTO `distract` VALUES ('101104', '兴县', '101101103', '1011');
INSERT INTO `distract` VALUES ('101105', '岚县', '101101104', '1011');
INSERT INTO `distract` VALUES ('101106', '柳林', '101101105', '1011');
INSERT INTO `distract` VALUES ('101107', '石楼', '101101106', '1011');
INSERT INTO `distract` VALUES ('101108', '方山', '101101107', '1011');
INSERT INTO `distract` VALUES ('101109', '交口', '101101108', '1011');
INSERT INTO `distract` VALUES ('101110', '中阳', '101101109', '1011');
INSERT INTO `distract` VALUES ('101111', '孝义', '101101110', '1011');
INSERT INTO `distract` VALUES ('101112', '汾阳', '101101111', '1011');
INSERT INTO `distract` VALUES ('101113', '文水', '101101112', '1011');
INSERT INTO `distract` VALUES ('101114', '交城', '101101113', '1011');
INSERT INTO `distract` VALUES ('110101', '西安', '101110101', '1101');
INSERT INTO `distract` VALUES ('110102', '长安', '101110102', '1101');
INSERT INTO `distract` VALUES ('110103', '临潼', '101110103', '1101');
INSERT INTO `distract` VALUES ('110104', '蓝田', '101110104', '1101');
INSERT INTO `distract` VALUES ('110105', '周至', '101110105', '1101');
INSERT INTO `distract` VALUES ('110106', '户县', '101110106', '1101');
INSERT INTO `distract` VALUES ('110107', '高陵', '101110107', '1101');
INSERT INTO `distract` VALUES ('110201', '咸阳', '101110200', '1102');
INSERT INTO `distract` VALUES ('110202', '三原', '101110201', '1102');
INSERT INTO `distract` VALUES ('110203', '礼泉', '101110202', '1102');
INSERT INTO `distract` VALUES ('110204', '永寿', '101110203', '1102');
INSERT INTO `distract` VALUES ('110205', '淳化', '101110204', '1102');
INSERT INTO `distract` VALUES ('110206', '泾阳', '101110205', '1102');
INSERT INTO `distract` VALUES ('110207', '武功', '101110206', '1102');
INSERT INTO `distract` VALUES ('110208', '乾县', '101110207', '1102');
INSERT INTO `distract` VALUES ('110209', '彬县', '101110208', '1102');
INSERT INTO `distract` VALUES ('110210', '长武', '101110209', '1102');
INSERT INTO `distract` VALUES ('110211', '旬邑', '101110210', '1102');
INSERT INTO `distract` VALUES ('110212', '兴平', '101110211', '1102');
INSERT INTO `distract` VALUES ('110301', '延安', '101110300', '1103');
INSERT INTO `distract` VALUES ('110302', '延长', '101110301', '1103');
INSERT INTO `distract` VALUES ('110303', '延川', '101110302', '1103');
INSERT INTO `distract` VALUES ('110304', '子长', '101110303', '1103');
INSERT INTO `distract` VALUES ('110305', '宜川', '101110304', '1103');
INSERT INTO `distract` VALUES ('110306', '富县', '101110305', '1103');
INSERT INTO `distract` VALUES ('110307', '志丹', '101110306', '1103');
INSERT INTO `distract` VALUES ('110308', '安塞', '101110307', '1103');
INSERT INTO `distract` VALUES ('110309', '甘泉', '101110308', '1103');
INSERT INTO `distract` VALUES ('110310', '洛川', '101110309', '1103');
INSERT INTO `distract` VALUES ('110311', '黄陵', '101110310', '1103');
INSERT INTO `distract` VALUES ('110312', '黄龙', '101110311', '1103');
INSERT INTO `distract` VALUES ('110313', '吴起', '101110312', '1103');
INSERT INTO `distract` VALUES ('110401', '榆林', '101110401', '1104');
INSERT INTO `distract` VALUES ('110402', '府谷', '101110402', '1104');
INSERT INTO `distract` VALUES ('110403', '神木', '101110403', '1104');
INSERT INTO `distract` VALUES ('110404', '佳县', '101110404', '1104');
INSERT INTO `distract` VALUES ('110405', '定边', '101110405', '1104');
INSERT INTO `distract` VALUES ('110406', '靖边', '101110406', '1104');
INSERT INTO `distract` VALUES ('110407', '横山', '101110407', '1104');
INSERT INTO `distract` VALUES ('110408', '米脂', '101110408', '1104');
INSERT INTO `distract` VALUES ('110409', '子洲', '101110409', '1104');
INSERT INTO `distract` VALUES ('110410', '绥德', '101110410', '1104');
INSERT INTO `distract` VALUES ('110411', '吴堡', '101110411', '1104');
INSERT INTO `distract` VALUES ('110412', '清涧', '101110412', '1104');
INSERT INTO `distract` VALUES ('110413', '榆阳', '101110413', '1104');
INSERT INTO `distract` VALUES ('110501', '渭南', '101110501', '1105');
INSERT INTO `distract` VALUES ('110502', '华县', '101110502', '1105');
INSERT INTO `distract` VALUES ('110503', '潼关', '101110503', '1105');
INSERT INTO `distract` VALUES ('110504', '大荔', '101110504', '1105');
INSERT INTO `distract` VALUES ('110505', '白水', '101110505', '1105');
INSERT INTO `distract` VALUES ('110506', '富平', '101110506', '1105');
INSERT INTO `distract` VALUES ('110507', '蒲城', '101110507', '1105');
INSERT INTO `distract` VALUES ('110508', '澄城', '101110508', '1105');
INSERT INTO `distract` VALUES ('110509', '合阳', '101110509', '1105');
INSERT INTO `distract` VALUES ('110510', '韩城', '101110510', '1105');
INSERT INTO `distract` VALUES ('110511', '华阴', '101110511', '1105');
INSERT INTO `distract` VALUES ('110601', '商洛', '101110601', '1106');
INSERT INTO `distract` VALUES ('110602', '洛南', '101110602', '1106');
INSERT INTO `distract` VALUES ('110603', '柞水', '101110603', '1106');
INSERT INTO `distract` VALUES ('110604', '商州', '101110604', '1106');
INSERT INTO `distract` VALUES ('110605', '镇安', '101110605', '1106');
INSERT INTO `distract` VALUES ('110606', '丹凤', '101110606', '1106');
INSERT INTO `distract` VALUES ('110607', '商南', '101110607', '1106');
INSERT INTO `distract` VALUES ('110608', '山阳', '101110608', '1106');
INSERT INTO `distract` VALUES ('110701', '安康', '101110701', '1107');
INSERT INTO `distract` VALUES ('110702', '紫阳', '101110702', '1107');
INSERT INTO `distract` VALUES ('110703', '石泉', '101110703', '1107');
INSERT INTO `distract` VALUES ('110704', '汉阴', '101110704', '1107');
INSERT INTO `distract` VALUES ('110705', '旬阳', '101110705', '1107');
INSERT INTO `distract` VALUES ('110706', '岚皋', '101110706', '1107');
INSERT INTO `distract` VALUES ('110707', '平利', '101110707', '1107');
INSERT INTO `distract` VALUES ('110708', '白河', '101110708', '1107');
INSERT INTO `distract` VALUES ('110709', '镇坪', '101110709', '1107');
INSERT INTO `distract` VALUES ('110710', '宁陕', '101110710', '1107');
INSERT INTO `distract` VALUES ('110801', '汉中', '101110801', '1108');
INSERT INTO `distract` VALUES ('110802', '略阳', '101110802', '1108');
INSERT INTO `distract` VALUES ('110803', '勉县', '101110803', '1108');
INSERT INTO `distract` VALUES ('110804', '留坝', '101110804', '1108');
INSERT INTO `distract` VALUES ('110805', '洋县', '101110805', '1108');
INSERT INTO `distract` VALUES ('110806', '城固', '101110806', '1108');
INSERT INTO `distract` VALUES ('110807', '西乡', '101110807', '1108');
INSERT INTO `distract` VALUES ('110808', '佛坪', '101110808', '1108');
INSERT INTO `distract` VALUES ('110809', '宁强', '101110809', '1108');
INSERT INTO `distract` VALUES ('110810', '南郑', '101110810', '1108');
INSERT INTO `distract` VALUES ('110811', '镇巴', '101110811', '1108');
INSERT INTO `distract` VALUES ('110901', '宝鸡', '101110901', '1109');
INSERT INTO `distract` VALUES ('110902', '千阳', '101110903', '1109');
INSERT INTO `distract` VALUES ('110903', '麟游', '101110904', '1109');
INSERT INTO `distract` VALUES ('110904', '岐山', '101110905', '1109');
INSERT INTO `distract` VALUES ('110905', '凤翔', '101110906', '1109');
INSERT INTO `distract` VALUES ('110906', '扶风', '101110907', '1109');
INSERT INTO `distract` VALUES ('110907', '眉县', '101110908', '1109');
INSERT INTO `distract` VALUES ('110908', '太白', '101110909', '1109');
INSERT INTO `distract` VALUES ('110909', '凤县', '101110910', '1109');
INSERT INTO `distract` VALUES ('110910', '陇县', '101110911', '1109');
INSERT INTO `distract` VALUES ('110911', '陈仓', '101110912', '1109');
INSERT INTO `distract` VALUES ('111001', '铜川', '101111001', '1110');
INSERT INTO `distract` VALUES ('111002', '耀县', '101111002', '1110');
INSERT INTO `distract` VALUES ('111003', '宜君', '101111003', '1110');
INSERT INTO `distract` VALUES ('111004', '耀州', '101111004', '1110');
INSERT INTO `distract` VALUES ('111101', '杨凌', '101111101', '1111');
INSERT INTO `distract` VALUES ('120101', '济南', '101120101', '1201');
INSERT INTO `distract` VALUES ('120102', '长清', '101120102', '1201');
INSERT INTO `distract` VALUES ('120103', '商河', '101120103', '1201');
INSERT INTO `distract` VALUES ('120104', '章丘', '101120104', '1201');
INSERT INTO `distract` VALUES ('120105', '平阴', '101120105', '1201');
INSERT INTO `distract` VALUES ('120106', '济阳', '101120106', '1201');
INSERT INTO `distract` VALUES ('120201', '青岛', '101120201', '1202');
INSERT INTO `distract` VALUES ('120202', '崂山', '101120202', '1202');
INSERT INTO `distract` VALUES ('120203', '即墨', '101120204', '1202');
INSERT INTO `distract` VALUES ('120204', '胶州', '101120205', '1202');
INSERT INTO `distract` VALUES ('120205', '胶南', '101120206', '1202');
INSERT INTO `distract` VALUES ('120206', '莱西', '101120207', '1202');
INSERT INTO `distract` VALUES ('120207', '平度', '101120208', '1202');
INSERT INTO `distract` VALUES ('120301', '淄博', '101120301', '1203');
INSERT INTO `distract` VALUES ('120302', '淄川', '101120302', '1203');
INSERT INTO `distract` VALUES ('120303', '博山', '101120303', '1203');
INSERT INTO `distract` VALUES ('120304', '高青', '101120304', '1203');
INSERT INTO `distract` VALUES ('120305', '周村', '101120305', '1203');
INSERT INTO `distract` VALUES ('120306', '沂源', '101120306', '1203');
INSERT INTO `distract` VALUES ('120307', '桓台', '101120307', '1203');
INSERT INTO `distract` VALUES ('120308', '临淄', '101120308', '1203');
INSERT INTO `distract` VALUES ('120401', '德州', '101120401', '1204');
INSERT INTO `distract` VALUES ('120402', '武城', '101120402', '1204');
INSERT INTO `distract` VALUES ('120403', '临邑', '101120403', '1204');
INSERT INTO `distract` VALUES ('120404', '陵县', '101120404', '1204');
INSERT INTO `distract` VALUES ('120405', '齐河', '101120405', '1204');
INSERT INTO `distract` VALUES ('120406', '乐陵', '101120406', '1204');
INSERT INTO `distract` VALUES ('120407', '庆云', '101120407', '1204');
INSERT INTO `distract` VALUES ('120408', '平原', '101120408', '1204');
INSERT INTO `distract` VALUES ('120409', '宁津', '101120409', '1204');
INSERT INTO `distract` VALUES ('120410', '夏津', '101120410', '1204');
INSERT INTO `distract` VALUES ('120411', '禹城', '101120411', '1204');
INSERT INTO `distract` VALUES ('120501', '烟台', '101120501', '1205');
INSERT INTO `distract` VALUES ('120502', '莱州', '101120502', '1205');
INSERT INTO `distract` VALUES ('120503', '长岛', '101120503', '1205');
INSERT INTO `distract` VALUES ('120504', '蓬莱', '101120504', '1205');
INSERT INTO `distract` VALUES ('120505', '龙口', '101120505', '1205');
INSERT INTO `distract` VALUES ('120506', '招远', '101120506', '1205');
INSERT INTO `distract` VALUES ('120507', '栖霞', '101120507', '1205');
INSERT INTO `distract` VALUES ('120508', '福山', '101120508', '1205');
INSERT INTO `distract` VALUES ('120509', '牟平', '101120509', '1205');
INSERT INTO `distract` VALUES ('120510', '莱阳', '101120510', '1205');
INSERT INTO `distract` VALUES ('120511', '海阳', '101120511', '1205');
INSERT INTO `distract` VALUES ('120601', '潍坊', '101120601', '1206');
INSERT INTO `distract` VALUES ('120602', '青州', '101120602', '1206');
INSERT INTO `distract` VALUES ('120603', '寿光', '101120603', '1206');
INSERT INTO `distract` VALUES ('120604', '临朐', '101120604', '1206');
INSERT INTO `distract` VALUES ('120605', '昌乐', '101120605', '1206');
INSERT INTO `distract` VALUES ('120606', '昌邑', '101120606', '1206');
INSERT INTO `distract` VALUES ('120607', '安丘', '101120607', '1206');
INSERT INTO `distract` VALUES ('120608', '高密', '101120608', '1206');
INSERT INTO `distract` VALUES ('120609', '诸城', '101120609', '1206');
INSERT INTO `distract` VALUES ('120701', '济宁', '101120701', '1207');
INSERT INTO `distract` VALUES ('120702', '嘉祥', '101120702', '1207');
INSERT INTO `distract` VALUES ('120703', '微山', '101120703', '1207');
INSERT INTO `distract` VALUES ('120704', '鱼台', '101120704', '1207');
INSERT INTO `distract` VALUES ('120705', '兖州', '101120705', '1207');
INSERT INTO `distract` VALUES ('120706', '金乡', '101120706', '1207');
INSERT INTO `distract` VALUES ('120707', '汶上', '101120707', '1207');
INSERT INTO `distract` VALUES ('120708', '泗水', '101120708', '1207');
INSERT INTO `distract` VALUES ('120709', '梁山', '101120709', '1207');
INSERT INTO `distract` VALUES ('120710', '曲阜', '101120710', '1207');
INSERT INTO `distract` VALUES ('120711', '邹城', '101120711', '1207');
INSERT INTO `distract` VALUES ('120801', '泰安', '101120801', '1208');
INSERT INTO `distract` VALUES ('120802', '新泰', '101120802', '1208');
INSERT INTO `distract` VALUES ('120803', '肥城', '101120804', '1208');
INSERT INTO `distract` VALUES ('120804', '东平', '101120805', '1208');
INSERT INTO `distract` VALUES ('120805', '宁阳', '101120806', '1208');
INSERT INTO `distract` VALUES ('120901', '临沂', '101120901', '1209');
INSERT INTO `distract` VALUES ('120902', '莒南', '101120902', '1209');
INSERT INTO `distract` VALUES ('120903', '沂南', '101120903', '1209');
INSERT INTO `distract` VALUES ('120904', '苍山', '101120904', '1209');
INSERT INTO `distract` VALUES ('120905', '临沭', '101120905', '1209');
INSERT INTO `distract` VALUES ('120906', '郯城', '101120906', '1209');
INSERT INTO `distract` VALUES ('120907', '蒙阴', '101120907', '1209');
INSERT INTO `distract` VALUES ('120908', '平邑', '101120908', '1209');
INSERT INTO `distract` VALUES ('120909', '费县', '101120909', '1209');
INSERT INTO `distract` VALUES ('120910', '沂水', '101120910', '1209');
INSERT INTO `distract` VALUES ('121001', '菏泽', '101121001', '1210');
INSERT INTO `distract` VALUES ('121002', '鄄城', '101121002', '1210');
INSERT INTO `distract` VALUES ('121003', '郓城', '101121003', '1210');
INSERT INTO `distract` VALUES ('121004', '东明', '101121004', '1210');
INSERT INTO `distract` VALUES ('121005', '定陶', '101121005', '1210');
INSERT INTO `distract` VALUES ('121006', '巨野', '101121006', '1210');
INSERT INTO `distract` VALUES ('121007', '曹县', '101121007', '1210');
INSERT INTO `distract` VALUES ('121008', '成武', '101121008', '1210');
INSERT INTO `distract` VALUES ('121009', '单县', '101121009', '1210');
INSERT INTO `distract` VALUES ('121101', '滨州', '101121101', '1211');
INSERT INTO `distract` VALUES ('121102', '博兴', '101121102', '1211');
INSERT INTO `distract` VALUES ('121103', '无棣', '101121103', '1211');
INSERT INTO `distract` VALUES ('121104', '阳信', '101121104', '1211');
INSERT INTO `distract` VALUES ('121105', '惠民', '101121105', '1211');
INSERT INTO `distract` VALUES ('121106', '沾化', '101121106', '1211');
INSERT INTO `distract` VALUES ('121107', '邹平', '101121107', '1211');
INSERT INTO `distract` VALUES ('121201', '东营', '101121201', '1212');
INSERT INTO `distract` VALUES ('121202', '河口', '101121202', '1212');
INSERT INTO `distract` VALUES ('121203', '垦利', '101121203', '1212');
INSERT INTO `distract` VALUES ('121204', '利津', '101121204', '1212');
INSERT INTO `distract` VALUES ('121205', '广饶', '101121205', '1212');
INSERT INTO `distract` VALUES ('121301', '威海', '101121301', '1213');
INSERT INTO `distract` VALUES ('121302', '文登', '101121302', '1213');
INSERT INTO `distract` VALUES ('121303', '荣成', '101121303', '1213');
INSERT INTO `distract` VALUES ('121304', '乳山', '101121304', '1213');
INSERT INTO `distract` VALUES ('121305', '成山头', '101121305', '1213');
INSERT INTO `distract` VALUES ('121306', '石岛', '101121306', '1213');
INSERT INTO `distract` VALUES ('121401', '枣庄', '101121401', '1214');
INSERT INTO `distract` VALUES ('121402', '薛城', '101121402', '1214');
INSERT INTO `distract` VALUES ('121403', '峄城', '101121403', '1214');
INSERT INTO `distract` VALUES ('121404', '台儿庄', '101121404', '1214');
INSERT INTO `distract` VALUES ('121405', '滕州', '101121405', '1214');
INSERT INTO `distract` VALUES ('121501', '日照', '101121501', '1215');
INSERT INTO `distract` VALUES ('121502', '五莲', '101121502', '1215');
INSERT INTO `distract` VALUES ('121503', '莒县', '101121503', '1215');
INSERT INTO `distract` VALUES ('121601', '莱芜', '101121601', '1216');
INSERT INTO `distract` VALUES ('121701', '聊城', '101121701', '1217');
INSERT INTO `distract` VALUES ('121702', '冠县', '101121702', '1217');
INSERT INTO `distract` VALUES ('121703', '阳谷', '101121703', '1217');
INSERT INTO `distract` VALUES ('121704', '高唐', '101121704', '1217');
INSERT INTO `distract` VALUES ('121705', '茌平', '101121705', '1217');
INSERT INTO `distract` VALUES ('121706', '东阿', '101121706', '1217');
INSERT INTO `distract` VALUES ('121707', '临清', '101121707', '1217');
INSERT INTO `distract` VALUES ('121708', '莘县', '101121709', '1217');
INSERT INTO `distract` VALUES ('130101', '乌鲁木齐', '101130101', '1301');
INSERT INTO `distract` VALUES ('130102', '小渠子', '101130103', '1301');
INSERT INTO `distract` VALUES ('130103', '达坂城', '101130105', '1301');
INSERT INTO `distract` VALUES ('130104', '乌鲁木齐牧试站', '101130108', '1301');
INSERT INTO `distract` VALUES ('130105', '天池', '101130109', '1301');
INSERT INTO `distract` VALUES ('130106', '白杨沟', '101130110', '1301');
INSERT INTO `distract` VALUES ('130201', '克拉玛依', '101130201', '1302');
INSERT INTO `distract` VALUES ('130202', '乌尔禾', '101130202', '1302');
INSERT INTO `distract` VALUES ('130203', '白碱滩', '101130203', '1302');
INSERT INTO `distract` VALUES ('130301', '石河子', '101130301', '1303');
INSERT INTO `distract` VALUES ('130302', '炮台', '101130302', '1303');
INSERT INTO `distract` VALUES ('130303', '莫索湾', '101130303', '1303');
INSERT INTO `distract` VALUES ('130401', '昌吉', '101130401', '1304');
INSERT INTO `distract` VALUES ('130402', '呼图壁', '101130402', '1304');
INSERT INTO `distract` VALUES ('130403', '米泉', '101130403', '1304');
INSERT INTO `distract` VALUES ('130404', '阜康', '101130404', '1304');
INSERT INTO `distract` VALUES ('130405', '吉木萨尔', '101130405', '1304');
INSERT INTO `distract` VALUES ('130406', '奇台', '101130406', '1304');
INSERT INTO `distract` VALUES ('130407', '玛纳斯', '101130407', '1304');
INSERT INTO `distract` VALUES ('130408', '木垒', '101130408', '1304');
INSERT INTO `distract` VALUES ('130409', '蔡家湖', '101130409', '1304');
INSERT INTO `distract` VALUES ('130501', '吐鲁番', '101130501', '1305');
INSERT INTO `distract` VALUES ('130502', '托克逊', '101130502', '1305');
INSERT INTO `distract` VALUES ('130503', '鄯善', '101130504', '1305');
INSERT INTO `distract` VALUES ('130601', '库尔勒', '101130601', '1306');
INSERT INTO `distract` VALUES ('130602', '轮台', '101130602', '1306');
INSERT INTO `distract` VALUES ('130603', '尉犁', '101130603', '1306');
INSERT INTO `distract` VALUES ('130604', '若羌', '101130604', '1306');
INSERT INTO `distract` VALUES ('130605', '且末', '101130605', '1306');
INSERT INTO `distract` VALUES ('130606', '和静', '101130606', '1306');
INSERT INTO `distract` VALUES ('130607', '焉耆', '101130607', '1306');
INSERT INTO `distract` VALUES ('130608', '和硕', '101130608', '1306');
INSERT INTO `distract` VALUES ('130609', '巴音布鲁克', '101130610', '1306');
INSERT INTO `distract` VALUES ('130610', '铁干里克', '101130611', '1306');
INSERT INTO `distract` VALUES ('130611', '博湖', '101130612', '1306');
INSERT INTO `distract` VALUES ('130612', '塔中', '101130613', '1306');
INSERT INTO `distract` VALUES ('130613', '巴仑台', '101130614', '1306');
INSERT INTO `distract` VALUES ('130701', '阿拉尔', '101130701', '1307');
INSERT INTO `distract` VALUES ('130801', '阿克苏', '101130801', '1308');
INSERT INTO `distract` VALUES ('130802', '乌什', '101130802', '1308');
INSERT INTO `distract` VALUES ('130803', '温宿', '101130803', '1308');
INSERT INTO `distract` VALUES ('130804', '拜城', '101130804', '1308');
INSERT INTO `distract` VALUES ('130805', '新和', '101130805', '1308');
INSERT INTO `distract` VALUES ('130806', '沙雅', '101130806', '1308');
INSERT INTO `distract` VALUES ('130807', '库车', '101130807', '1308');
INSERT INTO `distract` VALUES ('130808', '柯坪', '101130808', '1308');
INSERT INTO `distract` VALUES ('130809', '阿瓦提', '101130809', '1308');
INSERT INTO `distract` VALUES ('130901', '喀什', '101130901', '1309');
INSERT INTO `distract` VALUES ('130902', '英吉沙', '101130902', '1309');
INSERT INTO `distract` VALUES ('130903', '塔什库尔干', '101130903', '1309');
INSERT INTO `distract` VALUES ('130904', '麦盖提', '101130904', '1309');
INSERT INTO `distract` VALUES ('130905', '莎车', '101130905', '1309');
INSERT INTO `distract` VALUES ('130906', '叶城', '101130906', '1309');
INSERT INTO `distract` VALUES ('130907', '泽普', '101130907', '1309');
INSERT INTO `distract` VALUES ('130908', '巴楚', '101130908', '1309');
INSERT INTO `distract` VALUES ('130909', '岳普湖', '101130909', '1309');
INSERT INTO `distract` VALUES ('130910', '伽师', '101130910', '1309');
INSERT INTO `distract` VALUES ('130911', '疏附', '101130911', '1309');
INSERT INTO `distract` VALUES ('130912', '疏勒', '101130912', '1309');
INSERT INTO `distract` VALUES ('131001', '伊宁', '101131001', '1310');
INSERT INTO `distract` VALUES ('131002', '察布查尔', '101131002', '1310');
INSERT INTO `distract` VALUES ('131003', '尼勒克', '101131003', '1310');
INSERT INTO `distract` VALUES ('131004', '伊宁县', '101131004', '1310');
INSERT INTO `distract` VALUES ('131005', '巩留', '101131005', '1310');
INSERT INTO `distract` VALUES ('131006', '新源', '101131006', '1310');
INSERT INTO `distract` VALUES ('131007', '昭苏', '101131007', '1310');
INSERT INTO `distract` VALUES ('131008', '特克斯', '101131008', '1310');
INSERT INTO `distract` VALUES ('131009', '霍城', '101131009', '1310');
INSERT INTO `distract` VALUES ('131010', '霍尔果斯', '101131010', '1310');
INSERT INTO `distract` VALUES ('131011', '奎屯', '101131011', '1310');
INSERT INTO `distract` VALUES ('131101', '塔城', '101131101', '1311');
INSERT INTO `distract` VALUES ('131102', '裕民', '101131102', '1311');
INSERT INTO `distract` VALUES ('131103', '额敏', '101131103', '1311');
INSERT INTO `distract` VALUES ('131104', '和布克赛尔', '101131104', '1311');
INSERT INTO `distract` VALUES ('131105', '托里', '101131105', '1311');
INSERT INTO `distract` VALUES ('131106', '乌苏', '101131106', '1311');
INSERT INTO `distract` VALUES ('131107', '沙湾', '101131107', '1311');
INSERT INTO `distract` VALUES ('131201', '哈密', '101131201', '1312');
INSERT INTO `distract` VALUES ('131202', '巴里坤', '101131203', '1312');
INSERT INTO `distract` VALUES ('131203', '伊吾', '101131204', '1312');
INSERT INTO `distract` VALUES ('131301', '和田', '101131301', '1313');
INSERT INTO `distract` VALUES ('131302', '皮山', '101131302', '1313');
INSERT INTO `distract` VALUES ('131303', '策勒', '101131303', '1313');
INSERT INTO `distract` VALUES ('131304', '墨玉', '101131304', '1313');
INSERT INTO `distract` VALUES ('131305', '洛浦', '101131305', '1313');
INSERT INTO `distract` VALUES ('131306', '民丰', '101131306', '1313');
INSERT INTO `distract` VALUES ('131307', '于田', '101131307', '1313');
INSERT INTO `distract` VALUES ('131401', '阿勒泰', '101131401', '1314');
INSERT INTO `distract` VALUES ('131402', '哈巴河', '101131402', '1314');
INSERT INTO `distract` VALUES ('131403', '吉木乃', '101131405', '1314');
INSERT INTO `distract` VALUES ('131404', '布尔津', '101131406', '1314');
INSERT INTO `distract` VALUES ('131405', '福海', '101131407', '1314');
INSERT INTO `distract` VALUES ('131406', '富蕴', '101131408', '1314');
INSERT INTO `distract` VALUES ('131407', '青河', '101131409', '1314');
INSERT INTO `distract` VALUES ('131501', '阿图什', '101131501', '1315');
INSERT INTO `distract` VALUES ('131502', '乌恰', '101131502', '1315');
INSERT INTO `distract` VALUES ('131503', '阿克陶', '101131503', '1315');
INSERT INTO `distract` VALUES ('131504', '阿合奇', '101131504', '1315');
INSERT INTO `distract` VALUES ('131601', '博乐', '101131601', '1316');
INSERT INTO `distract` VALUES ('131602', '温泉', '101131602', '1316');
INSERT INTO `distract` VALUES ('131603', '精河', '101131603', '1316');
INSERT INTO `distract` VALUES ('131604', '阿拉山口', '101131606', '1316');
INSERT INTO `distract` VALUES ('140101', '拉萨', '101140101', '1401');
INSERT INTO `distract` VALUES ('140102', '当雄', '101140102', '1401');
INSERT INTO `distract` VALUES ('140103', '尼木', '101140103', '1401');
INSERT INTO `distract` VALUES ('140104', '林周', '101140104', '1401');
INSERT INTO `distract` VALUES ('140105', '堆龙德庆', '101140105', '1401');
INSERT INTO `distract` VALUES ('140106', '曲水', '101140106', '1401');
INSERT INTO `distract` VALUES ('140107', '达孜', '101140107', '1401');
INSERT INTO `distract` VALUES ('140108', '墨竹工卡', '101140108', '1401');
INSERT INTO `distract` VALUES ('140201', '日喀则', '101140201', '1402');
INSERT INTO `distract` VALUES ('140202', '拉孜', '101140202', '1402');
INSERT INTO `distract` VALUES ('140203', '南木林', '101140203', '1402');
INSERT INTO `distract` VALUES ('140204', '聂拉木', '101140204', '1402');
INSERT INTO `distract` VALUES ('140205', '定日', '101140205', '1402');
INSERT INTO `distract` VALUES ('140206', '江孜', '101140206', '1402');
INSERT INTO `distract` VALUES ('140207', '帕里', '101140207', '1402');
INSERT INTO `distract` VALUES ('140208', '仲巴', '101140208', '1402');
INSERT INTO `distract` VALUES ('140209', '萨嘎', '101140209', '1402');
INSERT INTO `distract` VALUES ('140210', '吉隆', '101140210', '1402');
INSERT INTO `distract` VALUES ('140211', '昂仁', '101140211', '1402');
INSERT INTO `distract` VALUES ('140212', '定结', '101140212', '1402');
INSERT INTO `distract` VALUES ('140213', '萨迦', '101140213', '1402');
INSERT INTO `distract` VALUES ('140214', '谢通门', '101140214', '1402');
INSERT INTO `distract` VALUES ('140215', '岗巴', '101140216', '1402');
INSERT INTO `distract` VALUES ('140216', '白朗', '101140217', '1402');
INSERT INTO `distract` VALUES ('140217', '亚东', '101140218', '1402');
INSERT INTO `distract` VALUES ('140218', '康马', '101140219', '1402');
INSERT INTO `distract` VALUES ('140219', '仁布', '101140220', '1402');
INSERT INTO `distract` VALUES ('140301', '山南', '101140301', '1403');
INSERT INTO `distract` VALUES ('140302', '贡嘎', '101140302', '1403');
INSERT INTO `distract` VALUES ('140303', '扎囊', '101140303', '1403');
INSERT INTO `distract` VALUES ('140304', '加查', '101140304', '1403');
INSERT INTO `distract` VALUES ('140305', '浪卡子', '101140305', '1403');
INSERT INTO `distract` VALUES ('140306', '错那', '101140306', '1403');
INSERT INTO `distract` VALUES ('140307', '隆子', '101140307', '1403');
INSERT INTO `distract` VALUES ('140308', '泽当', '101140308', '1403');
INSERT INTO `distract` VALUES ('140309', '乃东', '101140309', '1403');
INSERT INTO `distract` VALUES ('140310', '桑日', '101140310', '1403');
INSERT INTO `distract` VALUES ('140311', '洛扎', '101140311', '1403');
INSERT INTO `distract` VALUES ('140312', '措美', '101140312', '1403');
INSERT INTO `distract` VALUES ('140313', '琼结', '101140313', '1403');
INSERT INTO `distract` VALUES ('140314', '曲松', '101140314', '1403');
INSERT INTO `distract` VALUES ('140401', '林芝', '101140401', '1404');
INSERT INTO `distract` VALUES ('140402', '波密', '101140402', '1404');
INSERT INTO `distract` VALUES ('140403', '米林', '101140403', '1404');
INSERT INTO `distract` VALUES ('140404', '察隅', '101140404', '1404');
INSERT INTO `distract` VALUES ('140405', '工布江达', '101140405', '1404');
INSERT INTO `distract` VALUES ('140406', '朗县', '101140406', '1404');
INSERT INTO `distract` VALUES ('140407', '墨脱', '101140407', '1404');
INSERT INTO `distract` VALUES ('140501', '昌都', '101140501', '1405');
INSERT INTO `distract` VALUES ('140502', '丁青', '101140502', '1405');
INSERT INTO `distract` VALUES ('140503', '边坝', '101140503', '1405');
INSERT INTO `distract` VALUES ('140504', '洛隆', '101140504', '1405');
INSERT INTO `distract` VALUES ('140505', '左贡', '101140505', '1405');
INSERT INTO `distract` VALUES ('140506', '芒康', '101140506', '1405');
INSERT INTO `distract` VALUES ('140507', '类乌齐', '101140507', '1405');
INSERT INTO `distract` VALUES ('140508', '八宿', '101140508', '1405');
INSERT INTO `distract` VALUES ('140509', '江达', '101140509', '1405');
INSERT INTO `distract` VALUES ('140510', '察雅', '101140510', '1405');
INSERT INTO `distract` VALUES ('140511', '贡觉', '101140511', '1405');
INSERT INTO `distract` VALUES ('140601', '那曲', '101140601', '1406');
INSERT INTO `distract` VALUES ('140602', '尼玛', '101140602', '1406');
INSERT INTO `distract` VALUES ('140603', '嘉黎', '101140603', '1406');
INSERT INTO `distract` VALUES ('140604', '班戈', '101140604', '1406');
INSERT INTO `distract` VALUES ('140605', '安多', '101140605', '1406');
INSERT INTO `distract` VALUES ('140606', '索县', '101140606', '1406');
INSERT INTO `distract` VALUES ('140607', '聂荣', '101140607', '1406');
INSERT INTO `distract` VALUES ('140608', '巴青', '101140608', '1406');
INSERT INTO `distract` VALUES ('140609', '比如', '101140609', '1406');
INSERT INTO `distract` VALUES ('140610', '双湖', '101140610', '1406');
INSERT INTO `distract` VALUES ('140701', '阿里', '101140701', '1407');
INSERT INTO `distract` VALUES ('140702', '改则', '101140702', '1407');
INSERT INTO `distract` VALUES ('140703', '申扎', '101140703', '1407');
INSERT INTO `distract` VALUES ('140704', '狮泉河', '101140704', '1407');
INSERT INTO `distract` VALUES ('140705', '普兰', '101140705', '1407');
INSERT INTO `distract` VALUES ('140706', '札达', '101140706', '1407');
INSERT INTO `distract` VALUES ('140707', '噶尔', '101140707', '1407');
INSERT INTO `distract` VALUES ('140708', '日土', '101140708', '1407');
INSERT INTO `distract` VALUES ('140709', '革吉', '101140709', '1407');
INSERT INTO `distract` VALUES ('140710', '措勤', '101140710', '1407');
INSERT INTO `distract` VALUES ('150101', '西宁', '101150101', '1501');
INSERT INTO `distract` VALUES ('150102', '大通', '101150102', '1501');
INSERT INTO `distract` VALUES ('150103', '湟源', '101150103', '1501');
INSERT INTO `distract` VALUES ('150104', '湟中', '101150104', '1501');
INSERT INTO `distract` VALUES ('150201', '海东', '101150201', '1502');
INSERT INTO `distract` VALUES ('150202', '乐都', '101150202', '1502');
INSERT INTO `distract` VALUES ('150203', '民和', '101150203', '1502');
INSERT INTO `distract` VALUES ('150204', '互助', '101150204', '1502');
INSERT INTO `distract` VALUES ('150205', '化隆', '101150205', '1502');
INSERT INTO `distract` VALUES ('150206', '循化', '101150206', '1502');
INSERT INTO `distract` VALUES ('150207', '冷湖', '101150207', '1502');
INSERT INTO `distract` VALUES ('150208', '平安', '101150208', '1502');
INSERT INTO `distract` VALUES ('150301', '黄南', '101150301', '1503');
INSERT INTO `distract` VALUES ('150302', '尖扎', '101150302', '1503');
INSERT INTO `distract` VALUES ('150303', '泽库', '101150303', '1503');
INSERT INTO `distract` VALUES ('150304', '河南', '101150304', '1503');
INSERT INTO `distract` VALUES ('150305', '同仁', '101150305', '1503');
INSERT INTO `distract` VALUES ('150401', '海南', '101150401', '1504');
INSERT INTO `distract` VALUES ('150402', '贵德', '101150404', '1504');
INSERT INTO `distract` VALUES ('150403', '兴海', '101150406', '1504');
INSERT INTO `distract` VALUES ('150404', '贵南', '101150407', '1504');
INSERT INTO `distract` VALUES ('150405', '同德', '101150408', '1504');
INSERT INTO `distract` VALUES ('150406', '共和', '101150409', '1504');
INSERT INTO `distract` VALUES ('150501', '果洛', '101150501', '1505');
INSERT INTO `distract` VALUES ('150502', '班玛', '101150502', '1505');
INSERT INTO `distract` VALUES ('150503', '甘德', '101150503', '1505');
INSERT INTO `distract` VALUES ('150504', '达日', '101150504', '1505');
INSERT INTO `distract` VALUES ('150505', '久治', '101150505', '1505');
INSERT INTO `distract` VALUES ('150506', '玛多', '101150506', '1505');
INSERT INTO `distract` VALUES ('150507', '多县', '101150507', '1505');
INSERT INTO `distract` VALUES ('150508', '玛沁', '101150508', '1505');
INSERT INTO `distract` VALUES ('150601', '玉树', '101150601', '1506');
INSERT INTO `distract` VALUES ('150602', '称多', '101150602', '1506');
INSERT INTO `distract` VALUES ('150603', '治多', '101150603', '1506');
INSERT INTO `distract` VALUES ('150604', '杂多', '101150604', '1506');
INSERT INTO `distract` VALUES ('150605', '囊谦', '101150605', '1506');
INSERT INTO `distract` VALUES ('150606', '曲麻莱', '101150606', '1506');
INSERT INTO `distract` VALUES ('150701', '海西', '101150701', '1507');
INSERT INTO `distract` VALUES ('150702', '天峻', '101150708', '1507');
INSERT INTO `distract` VALUES ('150703', '乌兰', '101150709', '1507');
INSERT INTO `distract` VALUES ('150704', '茫崖', '101150712', '1507');
INSERT INTO `distract` VALUES ('150705', '大柴旦', '101150713', '1507');
INSERT INTO `distract` VALUES ('150706', '德令哈', '101150716', '1507');
INSERT INTO `distract` VALUES ('150801', '海北', '101150801', '1508');
INSERT INTO `distract` VALUES ('150802', '门源', '101150802', '1508');
INSERT INTO `distract` VALUES ('150803', '祁连', '101150803', '1508');
INSERT INTO `distract` VALUES ('150804', '海晏', '101150804', '1508');
INSERT INTO `distract` VALUES ('150805', '刚察', '101150806', '1508');
INSERT INTO `distract` VALUES ('150901', '格尔木', '101150901', '1509');
INSERT INTO `distract` VALUES ('150902', '都兰', '101150902', '1509');
INSERT INTO `distract` VALUES ('160101', '兰州', '101160101', '1601');
INSERT INTO `distract` VALUES ('160102', '皋兰', '101160102', '1601');
INSERT INTO `distract` VALUES ('160103', '永登', '101160103', '1601');
INSERT INTO `distract` VALUES ('160104', '榆中', '101160104', '1601');
INSERT INTO `distract` VALUES ('160201', '定西', '101160201', '1602');
INSERT INTO `distract` VALUES ('160202', '通渭', '101160202', '1602');
INSERT INTO `distract` VALUES ('160203', '陇西', '101160203', '1602');
INSERT INTO `distract` VALUES ('160204', '渭源', '101160204', '1602');
INSERT INTO `distract` VALUES ('160205', '临洮', '101160205', '1602');
INSERT INTO `distract` VALUES ('160206', '漳县', '101160206', '1602');
INSERT INTO `distract` VALUES ('160207', '岷县', '101160207', '1602');
INSERT INTO `distract` VALUES ('160208', '安定', '101160208', '1602');
INSERT INTO `distract` VALUES ('160301', '平凉', '101160301', '1603');
INSERT INTO `distract` VALUES ('160302', '泾川', '101160302', '1603');
INSERT INTO `distract` VALUES ('160303', '灵台', '101160303', '1603');
INSERT INTO `distract` VALUES ('160304', '崇信', '101160304', '1603');
INSERT INTO `distract` VALUES ('160305', '华亭', '101160305', '1603');
INSERT INTO `distract` VALUES ('160306', '庄浪', '101160306', '1603');
INSERT INTO `distract` VALUES ('160307', '静宁', '101160307', '1603');
INSERT INTO `distract` VALUES ('160308', '崆峒', '101160308', '1603');
INSERT INTO `distract` VALUES ('160401', '西峰', '101160401', '1604');
INSERT INTO `distract` VALUES ('160402', '环县', '101160403', '1604');
INSERT INTO `distract` VALUES ('160403', '华池', '101160404', '1604');
INSERT INTO `distract` VALUES ('160404', '合水', '101160405', '1604');
INSERT INTO `distract` VALUES ('160405', '正宁', '101160406', '1604');
INSERT INTO `distract` VALUES ('160406', '宁县', '101160407', '1604');
INSERT INTO `distract` VALUES ('160407', '镇原', '101160408', '1604');
INSERT INTO `distract` VALUES ('160408', '庆城', '101160409', '1604');
INSERT INTO `distract` VALUES ('160501', '武威', '101160501', '1605');
INSERT INTO `distract` VALUES ('160502', '民勤', '101160502', '1605');
INSERT INTO `distract` VALUES ('160503', '古浪', '101160503', '1605');
INSERT INTO `distract` VALUES ('160504', '天祝', '101160505', '1605');
INSERT INTO `distract` VALUES ('160601', '金昌', '101160601', '1606');
INSERT INTO `distract` VALUES ('160602', '永昌', '101160602', '1606');
INSERT INTO `distract` VALUES ('160701', '张掖', '101160701', '1607');
INSERT INTO `distract` VALUES ('160702', '肃南', '101160702', '1607');
INSERT INTO `distract` VALUES ('160703', '民乐', '101160703', '1607');
INSERT INTO `distract` VALUES ('160704', '临泽', '101160704', '1607');
INSERT INTO `distract` VALUES ('160705', '高台', '101160705', '1607');
INSERT INTO `distract` VALUES ('160706', '山丹', '101160706', '1607');
INSERT INTO `distract` VALUES ('160801', '酒泉', '101160801', '1608');
INSERT INTO `distract` VALUES ('160802', '金塔', '101160803', '1608');
INSERT INTO `distract` VALUES ('160803', '阿克塞', '101160804', '1608');
INSERT INTO `distract` VALUES ('160804', '瓜州', '101160805', '1608');
INSERT INTO `distract` VALUES ('160805', '肃北', '101160806', '1608');
INSERT INTO `distract` VALUES ('160806', '玉门', '101160807', '1608');
INSERT INTO `distract` VALUES ('160807', '敦煌', '101160808', '1608');
INSERT INTO `distract` VALUES ('160901', '天水', '101160901', '1609');
INSERT INTO `distract` VALUES ('160902', '清水', '101160903', '1609');
INSERT INTO `distract` VALUES ('160903', '秦安', '101160904', '1609');
INSERT INTO `distract` VALUES ('160904', '甘谷', '101160905', '1609');
INSERT INTO `distract` VALUES ('160905', '武山', '101160906', '1609');
INSERT INTO `distract` VALUES ('160906', '张家川', '101160907', '1609');
INSERT INTO `distract` VALUES ('160907', '麦积', '101160908', '1609');
INSERT INTO `distract` VALUES ('161001', '武都', '101161001', '1610');
INSERT INTO `distract` VALUES ('161002', '成县', '101161002', '1610');
INSERT INTO `distract` VALUES ('161003', '文县', '101161003', '1610');
INSERT INTO `distract` VALUES ('161004', '宕昌', '101161004', '1610');
INSERT INTO `distract` VALUES ('161005', '康县', '101161005', '1610');
INSERT INTO `distract` VALUES ('161006', '西和', '101161006', '1610');
INSERT INTO `distract` VALUES ('161007', '礼县', '101161007', '1610');
INSERT INTO `distract` VALUES ('161008', '徽县', '101161008', '1610');
INSERT INTO `distract` VALUES ('161009', '两当', '101161009', '1610');
INSERT INTO `distract` VALUES ('161101', '临夏', '101161101', '1611');
INSERT INTO `distract` VALUES ('161102', '康乐', '101161102', '1611');
INSERT INTO `distract` VALUES ('161103', '永靖', '101161103', '1611');
INSERT INTO `distract` VALUES ('161104', '广河', '101161104', '1611');
INSERT INTO `distract` VALUES ('161105', '和政', '101161105', '1611');
INSERT INTO `distract` VALUES ('161106', '东乡', '101161106', '1611');
INSERT INTO `distract` VALUES ('161107', '积石山', '101161107', '1611');
INSERT INTO `distract` VALUES ('161201', '合作', '101161201', '1612');
INSERT INTO `distract` VALUES ('161202', '临潭', '101161202', '1612');
INSERT INTO `distract` VALUES ('161203', '卓尼', '101161203', '1612');
INSERT INTO `distract` VALUES ('161204', '舟曲', '101161204', '1612');
INSERT INTO `distract` VALUES ('161205', '迭部', '101161205', '1612');
INSERT INTO `distract` VALUES ('161206', '玛曲', '101161206', '1612');
INSERT INTO `distract` VALUES ('161207', '碌曲', '101161207', '1612');
INSERT INTO `distract` VALUES ('161208', '夏河', '101161208', '1612');
INSERT INTO `distract` VALUES ('161301', '白银', '101161301', '1613');
INSERT INTO `distract` VALUES ('161302', '靖远', '101161302', '1613');
INSERT INTO `distract` VALUES ('161303', '会宁', '101161303', '1613');
INSERT INTO `distract` VALUES ('161304', '平川', '101161304', '1613');
INSERT INTO `distract` VALUES ('161305', '景泰', '101161305', '1613');
INSERT INTO `distract` VALUES ('161401', '嘉峪关', '101161401', '1614');
INSERT INTO `distract` VALUES ('170101', '银川', '101170101', '1701');
INSERT INTO `distract` VALUES ('170102', '永宁', '101170102', '1701');
INSERT INTO `distract` VALUES ('170103', '灵武', '101170103', '1701');
INSERT INTO `distract` VALUES ('170104', '贺兰', '101170104', '1701');
INSERT INTO `distract` VALUES ('170201', '石嘴山', '101170201', '1702');
INSERT INTO `distract` VALUES ('170202', '惠农', '101170202', '1702');
INSERT INTO `distract` VALUES ('170203', '平罗', '101170203', '1702');
INSERT INTO `distract` VALUES ('170204', '陶乐', '101170204', '1702');
INSERT INTO `distract` VALUES ('170301', '吴忠', '101170301', '1703');
INSERT INTO `distract` VALUES ('170302', '同心', '101170302', '1703');
INSERT INTO `distract` VALUES ('170303', '盐池', '101170303', '1703');
INSERT INTO `distract` VALUES ('170304', '青铜峡', '101170306', '1703');
INSERT INTO `distract` VALUES ('170401', '固原', '101170401', '1704');
INSERT INTO `distract` VALUES ('170402', '西吉', '101170402', '1704');
INSERT INTO `distract` VALUES ('170403', '隆德', '101170403', '1704');
INSERT INTO `distract` VALUES ('170404', '泾源', '101170404', '1704');
INSERT INTO `distract` VALUES ('170405', '彭阳', '101170406', '1704');
INSERT INTO `distract` VALUES ('170501', '中卫', '101170501', '1705');
INSERT INTO `distract` VALUES ('170502', '中宁', '101170502', '1705');
INSERT INTO `distract` VALUES ('170503', '海原', '101170504', '1705');
INSERT INTO `distract` VALUES ('180101', '郑州', '101180101', '1801');
INSERT INTO `distract` VALUES ('180102', '巩义', '101180102', '1801');
INSERT INTO `distract` VALUES ('180103', '荥阳', '101180103', '1801');
INSERT INTO `distract` VALUES ('180104', '登封', '101180104', '1801');
INSERT INTO `distract` VALUES ('180105', '新密', '101180105', '1801');
INSERT INTO `distract` VALUES ('180106', '新郑', '101180106', '1801');
INSERT INTO `distract` VALUES ('180107', '中牟', '101180107', '1801');
INSERT INTO `distract` VALUES ('180108', '上街', '101180108', '1801');
INSERT INTO `distract` VALUES ('180201', '安阳', '101180201', '1802');
INSERT INTO `distract` VALUES ('180202', '汤阴', '101180202', '1802');
INSERT INTO `distract` VALUES ('180203', '滑县', '101180203', '1802');
INSERT INTO `distract` VALUES ('180204', '内黄', '101180204', '1802');
INSERT INTO `distract` VALUES ('180205', '林州', '101180205', '1802');
INSERT INTO `distract` VALUES ('180301', '新乡', '101180301', '1803');
INSERT INTO `distract` VALUES ('180302', '获嘉', '101180302', '1803');
INSERT INTO `distract` VALUES ('180303', '原阳', '101180303', '1803');
INSERT INTO `distract` VALUES ('180304', '辉县', '101180304', '1803');
INSERT INTO `distract` VALUES ('180305', '卫辉', '101180305', '1803');
INSERT INTO `distract` VALUES ('180306', '延津', '101180306', '1803');
INSERT INTO `distract` VALUES ('180307', '封丘', '101180307', '1803');
INSERT INTO `distract` VALUES ('180308', '长垣', '101180308', '1803');
INSERT INTO `distract` VALUES ('180401', '许昌', '101180401', '1804');
INSERT INTO `distract` VALUES ('180402', '鄢陵', '101180402', '1804');
INSERT INTO `distract` VALUES ('180403', '襄城', '101180403', '1804');
INSERT INTO `distract` VALUES ('180404', '长葛', '101180404', '1804');
INSERT INTO `distract` VALUES ('180405', '禹州', '101180405', '1804');
INSERT INTO `distract` VALUES ('180501', '平顶山', '101180501', '1805');
INSERT INTO `distract` VALUES ('180502', '郏县', '101180502', '1805');
INSERT INTO `distract` VALUES ('180503', '宝丰', '101180503', '1805');
INSERT INTO `distract` VALUES ('180504', '汝州', '101180504', '1805');
INSERT INTO `distract` VALUES ('180505', '叶县', '101180505', '1805');
INSERT INTO `distract` VALUES ('180506', '舞钢', '101180506', '1805');
INSERT INTO `distract` VALUES ('180507', '鲁山', '101180507', '1805');
INSERT INTO `distract` VALUES ('180508', '石龙', '101180508', '1805');
INSERT INTO `distract` VALUES ('180601', '信阳', '101180601', '1806');
INSERT INTO `distract` VALUES ('180602', '息县', '101180602', '1806');
INSERT INTO `distract` VALUES ('180603', '罗山', '101180603', '1806');
INSERT INTO `distract` VALUES ('180604', '光山', '101180604', '1806');
INSERT INTO `distract` VALUES ('180605', '新县', '101180605', '1806');
INSERT INTO `distract` VALUES ('180606', '淮滨', '101180606', '1806');
INSERT INTO `distract` VALUES ('180607', '潢川', '101180607', '1806');
INSERT INTO `distract` VALUES ('180608', '固始', '101180608', '1806');
INSERT INTO `distract` VALUES ('180609', '商城', '101180609', '1806');
INSERT INTO `distract` VALUES ('180701', '南阳', '101180701', '1807');
INSERT INTO `distract` VALUES ('180702', '南召', '101180702', '1807');
INSERT INTO `distract` VALUES ('180703', '方城', '101180703', '1807');
INSERT INTO `distract` VALUES ('180704', '社旗', '101180704', '1807');
INSERT INTO `distract` VALUES ('180705', '西峡', '101180705', '1807');
INSERT INTO `distract` VALUES ('180706', '内乡', '101180706', '1807');
INSERT INTO `distract` VALUES ('180707', '镇平', '101180707', '1807');
INSERT INTO `distract` VALUES ('180708', '淅川', '101180708', '1807');
INSERT INTO `distract` VALUES ('180709', '新野', '101180709', '1807');
INSERT INTO `distract` VALUES ('180710', '唐河', '101180710', '1807');
INSERT INTO `distract` VALUES ('180711', '邓州', '101180711', '1807');
INSERT INTO `distract` VALUES ('180712', '桐柏', '101180712', '1807');
INSERT INTO `distract` VALUES ('180801', '开封', '101180801', '1808');
INSERT INTO `distract` VALUES ('180802', '杞县', '101180802', '1808');
INSERT INTO `distract` VALUES ('180803', '尉氏', '101180803', '1808');
INSERT INTO `distract` VALUES ('180804', '通许', '101180804', '1808');
INSERT INTO `distract` VALUES ('180805', '兰考', '101180805', '1808');
INSERT INTO `distract` VALUES ('180901', '洛阳', '101180901', '1809');
INSERT INTO `distract` VALUES ('180902', '新安', '101180902', '1809');
INSERT INTO `distract` VALUES ('180903', '孟津', '101180903', '1809');
INSERT INTO `distract` VALUES ('180904', '宜阳', '101180904', '1809');
INSERT INTO `distract` VALUES ('180905', '洛宁', '101180905', '1809');
INSERT INTO `distract` VALUES ('180906', '伊川', '101180906', '1809');
INSERT INTO `distract` VALUES ('180907', '嵩县', '101180907', '1809');
INSERT INTO `distract` VALUES ('180908', '偃师', '101180908', '1809');
INSERT INTO `distract` VALUES ('180909', '栾川', '101180909', '1809');
INSERT INTO `distract` VALUES ('180910', '汝阳', '101180910', '1809');
INSERT INTO `distract` VALUES ('180911', '吉利', '101180911', '1809');
INSERT INTO `distract` VALUES ('181001', '商丘', '101181001', '1810');
INSERT INTO `distract` VALUES ('181002', '睢县', '101181003', '1810');
INSERT INTO `distract` VALUES ('181003', '民权', '101181004', '1810');
INSERT INTO `distract` VALUES ('181004', '虞城', '101181005', '1810');
INSERT INTO `distract` VALUES ('181005', '柘城', '101181006', '1810');
INSERT INTO `distract` VALUES ('181006', '宁陵', '101181007', '1810');
INSERT INTO `distract` VALUES ('181007', '夏邑', '101181008', '1810');
INSERT INTO `distract` VALUES ('181008', '永城', '101181009', '1810');
INSERT INTO `distract` VALUES ('181101', '焦作', '101181101', '1811');
INSERT INTO `distract` VALUES ('181102', '修武', '101181102', '1811');
INSERT INTO `distract` VALUES ('181103', '武陟', '101181103', '1811');
INSERT INTO `distract` VALUES ('181104', '沁阳', '101181104', '1811');
INSERT INTO `distract` VALUES ('181105', '博爱', '101181106', '1811');
INSERT INTO `distract` VALUES ('181106', '温县', '101181107', '1811');
INSERT INTO `distract` VALUES ('181107', '孟州', '101181108', '1811');
INSERT INTO `distract` VALUES ('181201', '鹤壁', '101181201', '1812');
INSERT INTO `distract` VALUES ('181202', '浚县', '101181202', '1812');
INSERT INTO `distract` VALUES ('181203', '淇县', '101181203', '1812');
INSERT INTO `distract` VALUES ('181301', '濮阳', '101181301', '1813');
INSERT INTO `distract` VALUES ('181302', '台前', '101181302', '1813');
INSERT INTO `distract` VALUES ('181303', '南乐', '101181303', '1813');
INSERT INTO `distract` VALUES ('181304', '清丰', '101181304', '1813');
INSERT INTO `distract` VALUES ('181305', '范县', '101181305', '1813');
INSERT INTO `distract` VALUES ('181401', '周口', '101181401', '1814');
INSERT INTO `distract` VALUES ('181402', '扶沟', '101181402', '1814');
INSERT INTO `distract` VALUES ('181403', '太康', '101181403', '1814');
INSERT INTO `distract` VALUES ('181404', '淮阳', '101181404', '1814');
INSERT INTO `distract` VALUES ('181405', '西华', '101181405', '1814');
INSERT INTO `distract` VALUES ('181406', '商水', '101181406', '1814');
INSERT INTO `distract` VALUES ('181407', '项城', '101181407', '1814');
INSERT INTO `distract` VALUES ('181408', '郸城', '101181408', '1814');
INSERT INTO `distract` VALUES ('181409', '鹿邑', '101181409', '1814');
INSERT INTO `distract` VALUES ('181410', '沈丘', '101181410', '1814');
INSERT INTO `distract` VALUES ('181501', '漯河', '101181501', '1815');
INSERT INTO `distract` VALUES ('181502', '临颍', '101181502', '1815');
INSERT INTO `distract` VALUES ('181503', '舞阳', '101181503', '1815');
INSERT INTO `distract` VALUES ('181601', '驻马店', '101181601', '1816');
INSERT INTO `distract` VALUES ('181602', '西平', '101181602', '1816');
INSERT INTO `distract` VALUES ('181603', '遂平', '101181603', '1816');
INSERT INTO `distract` VALUES ('181604', '上蔡', '101181604', '1816');
INSERT INTO `distract` VALUES ('181605', '汝南', '101181605', '1816');
INSERT INTO `distract` VALUES ('181606', '泌阳', '101181606', '1816');
INSERT INTO `distract` VALUES ('181607', '平舆', '101181607', '1816');
INSERT INTO `distract` VALUES ('181608', '新蔡', '101181608', '1816');
INSERT INTO `distract` VALUES ('181609', '确山', '101181609', '1816');
INSERT INTO `distract` VALUES ('181610', '正阳', '101181610', '1816');
INSERT INTO `distract` VALUES ('181701', '三门峡', '101181701', '1817');
INSERT INTO `distract` VALUES ('181702', '灵宝', '101181702', '1817');
INSERT INTO `distract` VALUES ('181703', '渑池', '101181703', '1817');
INSERT INTO `distract` VALUES ('181704', '卢氏', '101181704', '1817');
INSERT INTO `distract` VALUES ('181705', '义马', '101181705', '1817');
INSERT INTO `distract` VALUES ('181706', '陕县', '101181706', '1817');
INSERT INTO `distract` VALUES ('181801', '济源', '101181801', '1818');
INSERT INTO `distract` VALUES ('190101', '南京', '101190101', '1901');
INSERT INTO `distract` VALUES ('190102', '溧水', '101190102', '1901');
INSERT INTO `distract` VALUES ('190103', '高淳', '101190103', '1901');
INSERT INTO `distract` VALUES ('190104', '江宁', '101190104', '1901');
INSERT INTO `distract` VALUES ('190105', '六合', '101190105', '1901');
INSERT INTO `distract` VALUES ('190106', '江浦', '101190106', '1901');
INSERT INTO `distract` VALUES ('190107', '浦口', '101190107', '1901');
INSERT INTO `distract` VALUES ('190201', '无锡', '101190201', '1902');
INSERT INTO `distract` VALUES ('190202', '江阴', '101190202', '1902');
INSERT INTO `distract` VALUES ('190203', '宜兴', '101190203', '1902');
INSERT INTO `distract` VALUES ('190204', '锡山', '101190204', '1902');
INSERT INTO `distract` VALUES ('190301', '镇江', '101190301', '1903');
INSERT INTO `distract` VALUES ('190302', '丹阳', '101190302', '1903');
INSERT INTO `distract` VALUES ('190303', '扬中', '101190303', '1903');
INSERT INTO `distract` VALUES ('190304', '句容', '101190304', '1903');
INSERT INTO `distract` VALUES ('190305', '丹徒', '101190305', '1903');
INSERT INTO `distract` VALUES ('190401', '苏州', '101190401', '1904');
INSERT INTO `distract` VALUES ('190402', '常熟', '101190402', '1904');
INSERT INTO `distract` VALUES ('190403', '张家港', '101190403', '1904');
INSERT INTO `distract` VALUES ('190404', '昆山', '101190404', '1904');
INSERT INTO `distract` VALUES ('190405', '吴中', '101190405', '1904');
INSERT INTO `distract` VALUES ('190406', '吴江', '101190407', '1904');
INSERT INTO `distract` VALUES ('190407', '太仓', '101190408', '1904');
INSERT INTO `distract` VALUES ('190501', '南通', '101190501', '1905');
INSERT INTO `distract` VALUES ('190502', '海安', '101190502', '1905');
INSERT INTO `distract` VALUES ('190503', '如皋', '101190503', '1905');
INSERT INTO `distract` VALUES ('190504', '如东', '101190504', '1905');
INSERT INTO `distract` VALUES ('190505', '启东', '101190507', '1905');
INSERT INTO `distract` VALUES ('190506', '海门', '101190508', '1905');
INSERT INTO `distract` VALUES ('190507', '通州', '101190509', '1905');
INSERT INTO `distract` VALUES ('190601', '扬州', '101190601', '1906');
INSERT INTO `distract` VALUES ('190602', '宝应', '101190602', '1906');
INSERT INTO `distract` VALUES ('190603', '仪征', '101190603', '1906');
INSERT INTO `distract` VALUES ('190604', '高邮', '101190604', '1906');
INSERT INTO `distract` VALUES ('190605', '江都', '101190605', '1906');
INSERT INTO `distract` VALUES ('190606', '邗江', '101190606', '1906');
INSERT INTO `distract` VALUES ('190701', '盐城', '101190701', '1907');
INSERT INTO `distract` VALUES ('190702', '响水', '101190702', '1907');
INSERT INTO `distract` VALUES ('190703', '滨海', '101190703', '1907');
INSERT INTO `distract` VALUES ('190704', '阜宁', '101190704', '1907');
INSERT INTO `distract` VALUES ('190705', '射阳', '101190705', '1907');
INSERT INTO `distract` VALUES ('190706', '建湖', '101190706', '1907');
INSERT INTO `distract` VALUES ('190707', '东台', '101190707', '1907');
INSERT INTO `distract` VALUES ('190708', '大丰', '101190708', '1907');
INSERT INTO `distract` VALUES ('190709', '盐都', '101190709', '1907');
INSERT INTO `distract` VALUES ('190801', '徐州', '101190801', '1908');
INSERT INTO `distract` VALUES ('190802', '铜山', '101190802', '1908');
INSERT INTO `distract` VALUES ('190803', '丰县', '101190803', '1908');
INSERT INTO `distract` VALUES ('190804', '沛县', '101190804', '1908');
INSERT INTO `distract` VALUES ('190805', '邳州', '101190805', '1908');
INSERT INTO `distract` VALUES ('190806', '睢宁', '101190806', '1908');
INSERT INTO `distract` VALUES ('190807', '新沂', '101190807', '1908');
INSERT INTO `distract` VALUES ('190901', '淮安', '101190901', '1909');
INSERT INTO `distract` VALUES ('190902', '金湖', '101190902', '1909');
INSERT INTO `distract` VALUES ('190903', '盱眙', '101190903', '1909');
INSERT INTO `distract` VALUES ('190904', '洪泽', '101190904', '1909');
INSERT INTO `distract` VALUES ('190905', '涟水', '101190905', '1909');
INSERT INTO `distract` VALUES ('190906', '淮阴区', '101190906', '1909');
INSERT INTO `distract` VALUES ('190907', '淮安区', '101190908', '1909');
INSERT INTO `distract` VALUES ('191001', '连云港', '101191001', '1910');
INSERT INTO `distract` VALUES ('191002', '东海', '101191002', '1910');
INSERT INTO `distract` VALUES ('191003', '赣榆', '101191003', '1910');
INSERT INTO `distract` VALUES ('191004', '灌云', '101191004', '1910');
INSERT INTO `distract` VALUES ('191005', '灌南', '101191005', '1910');
INSERT INTO `distract` VALUES ('191101', '常州', '101191101', '1911');
INSERT INTO `distract` VALUES ('191102', '溧阳', '101191102', '1911');
INSERT INTO `distract` VALUES ('191103', '金坛', '101191103', '1911');
INSERT INTO `distract` VALUES ('191104', '武进', '101191104', '1911');
INSERT INTO `distract` VALUES ('191201', '泰州', '101191201', '1912');
INSERT INTO `distract` VALUES ('191202', '兴化', '101191202', '1912');
INSERT INTO `distract` VALUES ('191203', '泰兴', '101191203', '1912');
INSERT INTO `distract` VALUES ('191204', '姜堰', '101191204', '1912');
INSERT INTO `distract` VALUES ('191205', '靖江', '101191205', '1912');
INSERT INTO `distract` VALUES ('191301', '宿迁', '101191301', '1913');
INSERT INTO `distract` VALUES ('191302', '沭阳', '101191302', '1913');
INSERT INTO `distract` VALUES ('191303', '泗阳', '101191303', '1913');
INSERT INTO `distract` VALUES ('191304', '泗洪', '101191304', '1913');
INSERT INTO `distract` VALUES ('191305', '宿豫', '101191305', '1913');
INSERT INTO `distract` VALUES ('200101', '武汉', '101200101', '2001');
INSERT INTO `distract` VALUES ('200102', '蔡甸', '101200102', '2001');
INSERT INTO `distract` VALUES ('200103', '黄陂', '101200103', '2001');
INSERT INTO `distract` VALUES ('200104', '新洲', '101200104', '2001');
INSERT INTO `distract` VALUES ('200105', '江夏', '101200105', '2001');
INSERT INTO `distract` VALUES ('200106', '东西湖', '101200106', '2001');
INSERT INTO `distract` VALUES ('200201', '襄阳', '101200201', '2002');
INSERT INTO `distract` VALUES ('200202', '襄州', '101200202', '2002');
INSERT INTO `distract` VALUES ('200203', '保康', '101200203', '2002');
INSERT INTO `distract` VALUES ('200204', '南漳', '101200204', '2002');
INSERT INTO `distract` VALUES ('200205', '宜城', '101200205', '2002');
INSERT INTO `distract` VALUES ('200206', '老河口', '101200206', '2002');
INSERT INTO `distract` VALUES ('200207', '谷城', '101200207', '2002');
INSERT INTO `distract` VALUES ('200208', '枣阳', '101200208', '2002');
INSERT INTO `distract` VALUES ('200301', '鄂州', '101200301', '2003');
INSERT INTO `distract` VALUES ('200302', '梁子湖', '101200302', '2003');
INSERT INTO `distract` VALUES ('200401', '孝感', '101200401', '2004');
INSERT INTO `distract` VALUES ('200402', '安陆', '101200402', '2004');
INSERT INTO `distract` VALUES ('200403', '云梦', '101200403', '2004');
INSERT INTO `distract` VALUES ('200404', '大悟', '101200404', '2004');
INSERT INTO `distract` VALUES ('200405', '应城', '101200405', '2004');
INSERT INTO `distract` VALUES ('200406', '汉川', '101200406', '2004');
INSERT INTO `distract` VALUES ('200407', '孝昌', '101200407', '2004');
INSERT INTO `distract` VALUES ('200501', '黄冈', '101200501', '2005');
INSERT INTO `distract` VALUES ('200502', '红安', '101200502', '2005');
INSERT INTO `distract` VALUES ('200503', '麻城', '101200503', '2005');
INSERT INTO `distract` VALUES ('200504', '罗田', '101200504', '2005');
INSERT INTO `distract` VALUES ('200505', '英山', '101200505', '2005');
INSERT INTO `distract` VALUES ('200506', '浠水', '101200506', '2005');
INSERT INTO `distract` VALUES ('200507', '蕲春', '101200507', '2005');
INSERT INTO `distract` VALUES ('200508', '黄梅', '101200508', '2005');
INSERT INTO `distract` VALUES ('200509', '武穴', '101200509', '2005');
INSERT INTO `distract` VALUES ('200510', '团风', '101200510', '2005');
INSERT INTO `distract` VALUES ('200601', '黄石', '101200601', '2006');
INSERT INTO `distract` VALUES ('200602', '大冶', '101200602', '2006');
INSERT INTO `distract` VALUES ('200603', '阳新', '101200603', '2006');
INSERT INTO `distract` VALUES ('200604', '铁山', '101200604', '2006');
INSERT INTO `distract` VALUES ('200605', '下陆', '101200605', '2006');
INSERT INTO `distract` VALUES ('200606', '西塞山', '101200606', '2006');
INSERT INTO `distract` VALUES ('200701', '咸宁', '101200701', '2007');
INSERT INTO `distract` VALUES ('200702', '赤壁', '101200702', '2007');
INSERT INTO `distract` VALUES ('200703', '嘉鱼', '101200703', '2007');
INSERT INTO `distract` VALUES ('200704', '崇阳', '101200704', '2007');
INSERT INTO `distract` VALUES ('200705', '通城', '101200705', '2007');
INSERT INTO `distract` VALUES ('200706', '通山', '101200706', '2007');
INSERT INTO `distract` VALUES ('200801', '荆州', '101200801', '2008');
INSERT INTO `distract` VALUES ('200802', '江陵', '101200802', '2008');
INSERT INTO `distract` VALUES ('200803', '公安', '101200803', '2008');
INSERT INTO `distract` VALUES ('200804', '石首', '101200804', '2008');
INSERT INTO `distract` VALUES ('200805', '监利', '101200805', '2008');
INSERT INTO `distract` VALUES ('200806', '洪湖', '101200806', '2008');
INSERT INTO `distract` VALUES ('200807', '松滋', '101200807', '2008');
INSERT INTO `distract` VALUES ('200808', '沙市', '101201406', '2008');
INSERT INTO `distract` VALUES ('200901', '宜昌', '101200901', '2009');
INSERT INTO `distract` VALUES ('200902', '远安', '101200902', '2009');
INSERT INTO `distract` VALUES ('200903', '秭归', '101200903', '2009');
INSERT INTO `distract` VALUES ('200904', '兴山', '101200904', '2009');
INSERT INTO `distract` VALUES ('200905', '五峰', '101200906', '2009');
INSERT INTO `distract` VALUES ('200906', '当阳', '101200907', '2009');
INSERT INTO `distract` VALUES ('200907', '长阳', '101200908', '2009');
INSERT INTO `distract` VALUES ('200908', '宜都', '101200909', '2009');
INSERT INTO `distract` VALUES ('200909', '枝江', '101200910', '2009');
INSERT INTO `distract` VALUES ('200910', '三峡', '101200911', '2009');
INSERT INTO `distract` VALUES ('200911', '夷陵', '101200912', '2009');
INSERT INTO `distract` VALUES ('201001', '恩施', '101201001', '2010');
INSERT INTO `distract` VALUES ('201002', '利川', '101201002', '2010');
INSERT INTO `distract` VALUES ('201003', '建始', '101201003', '2010');
INSERT INTO `distract` VALUES ('201004', '咸丰', '101201004', '2010');
INSERT INTO `distract` VALUES ('201005', '宣恩', '101201005', '2010');
INSERT INTO `distract` VALUES ('201006', '鹤峰', '101201006', '2010');
INSERT INTO `distract` VALUES ('201007', '来凤', '101201007', '2010');
INSERT INTO `distract` VALUES ('201008', '巴东', '101201008', '2010');
INSERT INTO `distract` VALUES ('201101', '十堰', '101201101', '2011');
INSERT INTO `distract` VALUES ('201102', '竹溪', '101201102', '2011');
INSERT INTO `distract` VALUES ('201103', '郧西', '101201103', '2011');
INSERT INTO `distract` VALUES ('201104', '郧县', '101201104', '2011');
INSERT INTO `distract` VALUES ('201105', '竹山', '101201105', '2011');
INSERT INTO `distract` VALUES ('201106', '房县', '101201106', '2011');
INSERT INTO `distract` VALUES ('201107', '丹江口', '101201107', '2011');
INSERT INTO `distract` VALUES ('201108', '茅箭', '101201108', '2011');
INSERT INTO `distract` VALUES ('201109', '张湾', '101201109', '2011');
INSERT INTO `distract` VALUES ('201201', '神农架', '101201201', '2012');
INSERT INTO `distract` VALUES ('201301', '随州', '101201301', '2013');
INSERT INTO `distract` VALUES ('201302', '广水', '101201302', '2013');
INSERT INTO `distract` VALUES ('201401', '荆门', '101201401', '2014');
INSERT INTO `distract` VALUES ('201402', '钟祥', '101201402', '2014');
INSERT INTO `distract` VALUES ('201403', '京山', '101201403', '2014');
INSERT INTO `distract` VALUES ('201404', '掇刀', '101201404', '2014');
INSERT INTO `distract` VALUES ('201405', '沙洋', '101201405', '2014');
INSERT INTO `distract` VALUES ('201501', '天门', '101201501', '2015');
INSERT INTO `distract` VALUES ('201601', '仙桃', '101201601', '2016');
INSERT INTO `distract` VALUES ('201701', '潜江', '101201701', '2017');
INSERT INTO `distract` VALUES ('210101', '杭州', '101210101', '2101');
INSERT INTO `distract` VALUES ('210102', '萧山', '101210102', '2101');
INSERT INTO `distract` VALUES ('210103', '桐庐', '101210103', '2101');
INSERT INTO `distract` VALUES ('210104', '淳安', '101210104', '2101');
INSERT INTO `distract` VALUES ('210105', '建德', '101210105', '2101');
INSERT INTO `distract` VALUES ('210106', '余杭', '101210106', '2101');
INSERT INTO `distract` VALUES ('210107', '临安', '101210107', '2101');
INSERT INTO `distract` VALUES ('210108', '富阳', '101210108', '2101');
INSERT INTO `distract` VALUES ('210201', '湖州', '101210201', '2102');
INSERT INTO `distract` VALUES ('210202', '长兴', '101210202', '2102');
INSERT INTO `distract` VALUES ('210203', '安吉', '101210203', '2102');
INSERT INTO `distract` VALUES ('210204', '德清', '101210204', '2102');
INSERT INTO `distract` VALUES ('210301', '嘉兴', '101210301', '2103');
INSERT INTO `distract` VALUES ('210302', '嘉善', '101210302', '2103');
INSERT INTO `distract` VALUES ('210303', '海宁', '101210303', '2103');
INSERT INTO `distract` VALUES ('210304', '桐乡', '101210304', '2103');
INSERT INTO `distract` VALUES ('210305', '平湖', '101210305', '2103');
INSERT INTO `distract` VALUES ('210306', '海盐', '101210306', '2103');
INSERT INTO `distract` VALUES ('210401', '宁波', '101210401', '2104');
INSERT INTO `distract` VALUES ('210402', '慈溪', '101210403', '2104');
INSERT INTO `distract` VALUES ('210403', '余姚', '101210404', '2104');
INSERT INTO `distract` VALUES ('210404', '奉化', '101210405', '2104');
INSERT INTO `distract` VALUES ('210405', '象山', '101210406', '2104');
INSERT INTO `distract` VALUES ('210406', '宁海', '101210408', '2104');
INSERT INTO `distract` VALUES ('210407', '北仑', '101210410', '2104');
INSERT INTO `distract` VALUES ('210408', '鄞州', '101210411', '2104');
INSERT INTO `distract` VALUES ('210409', '镇海', '101210412', '2104');
INSERT INTO `distract` VALUES ('210501', '绍兴', '101210501', '2105');
INSERT INTO `distract` VALUES ('210502', '诸暨', '101210502', '2105');
INSERT INTO `distract` VALUES ('210503', '上虞', '101210503', '2105');
INSERT INTO `distract` VALUES ('210504', '新昌', '101210504', '2105');
INSERT INTO `distract` VALUES ('210505', '嵊州', '101210505', '2105');
INSERT INTO `distract` VALUES ('210601', '台州', '101210601', '2106');
INSERT INTO `distract` VALUES ('210602', '玉环', '101210603', '2106');
INSERT INTO `distract` VALUES ('210603', '三门', '101210604', '2106');
INSERT INTO `distract` VALUES ('210604', '天台', '101210605', '2106');
INSERT INTO `distract` VALUES ('210605', '仙居', '101210606', '2106');
INSERT INTO `distract` VALUES ('210606', '温岭', '101210607', '2106');
INSERT INTO `distract` VALUES ('210607', '洪家', '101210609', '2106');
INSERT INTO `distract` VALUES ('210608', '临海', '101210610', '2106');
INSERT INTO `distract` VALUES ('210609', '椒江', '101210611', '2106');
INSERT INTO `distract` VALUES ('210610', '黄岩', '101210612', '2106');
INSERT INTO `distract` VALUES ('210611', '路桥', '101210613', '2106');
INSERT INTO `distract` VALUES ('210701', '温州', '101210701', '2107');
INSERT INTO `distract` VALUES ('210702', '泰顺', '101210702', '2107');
INSERT INTO `distract` VALUES ('210703', '文成', '101210703', '2107');
INSERT INTO `distract` VALUES ('210704', '平阳', '101210704', '2107');
INSERT INTO `distract` VALUES ('210705', '瑞安', '101210705', '2107');
INSERT INTO `distract` VALUES ('210706', '洞头', '101210706', '2107');
INSERT INTO `distract` VALUES ('210707', '乐清', '101210707', '2107');
INSERT INTO `distract` VALUES ('210708', '永嘉', '101210708', '2107');
INSERT INTO `distract` VALUES ('210709', '苍南', '101210709', '2107');
INSERT INTO `distract` VALUES ('210801', '丽水', '101210801', '2108');
INSERT INTO `distract` VALUES ('210802', '遂昌', '101210802', '2108');
INSERT INTO `distract` VALUES ('210803', '龙泉', '101210803', '2108');
INSERT INTO `distract` VALUES ('210804', '缙云', '101210804', '2108');
INSERT INTO `distract` VALUES ('210805', '青田', '101210805', '2108');
INSERT INTO `distract` VALUES ('210806', '云和', '101210806', '2108');
INSERT INTO `distract` VALUES ('210807', '庆元', '101210807', '2108');
INSERT INTO `distract` VALUES ('210808', '松阳', '101210808', '2108');
INSERT INTO `distract` VALUES ('210809', '景宁', '101210809', '2108');
INSERT INTO `distract` VALUES ('210901', '金华', '101210901', '2109');
INSERT INTO `distract` VALUES ('210902', '浦江', '101210902', '2109');
INSERT INTO `distract` VALUES ('210903', '兰溪', '101210903', '2109');
INSERT INTO `distract` VALUES ('210904', '义乌', '101210904', '2109');
INSERT INTO `distract` VALUES ('210905', '东阳', '101210905', '2109');
INSERT INTO `distract` VALUES ('210906', '武义', '101210906', '2109');
INSERT INTO `distract` VALUES ('210907', '永康', '101210907', '2109');
INSERT INTO `distract` VALUES ('210908', '磐安', '101210908', '2109');
INSERT INTO `distract` VALUES ('211001', '衢州', '101211001', '2110');
INSERT INTO `distract` VALUES ('211002', '常山', '101211002', '2110');
INSERT INTO `distract` VALUES ('211003', '开化', '101211003', '2110');
INSERT INTO `distract` VALUES ('211004', '龙游', '101211004', '2110');
INSERT INTO `distract` VALUES ('211005', '江山', '101211005', '2110');
INSERT INTO `distract` VALUES ('211006', '衢江', '101211006', '2110');
INSERT INTO `distract` VALUES ('211101', '舟山', '101211101', '2111');
INSERT INTO `distract` VALUES ('211102', '嵊泗', '101211102', '2111');
INSERT INTO `distract` VALUES ('211103', '岱山', '101211104', '2111');
INSERT INTO `distract` VALUES ('211104', '普陀', '101211105', '2111');
INSERT INTO `distract` VALUES ('211105', '定海', '101211106', '2111');
INSERT INTO `distract` VALUES ('220101', '合肥', '101220101', '2201');
INSERT INTO `distract` VALUES ('220102', '长丰', '101220102', '2201');
INSERT INTO `distract` VALUES ('220103', '肥东', '101220103', '2201');
INSERT INTO `distract` VALUES ('220104', '肥西', '101220104', '2201');
INSERT INTO `distract` VALUES ('220201', '蚌埠', '101220201', '2202');
INSERT INTO `distract` VALUES ('220202', '怀远', '101220202', '2202');
INSERT INTO `distract` VALUES ('220203', '固镇', '101220203', '2202');
INSERT INTO `distract` VALUES ('220204', '五河', '101220204', '2202');
INSERT INTO `distract` VALUES ('220301', '芜湖', '101220301', '2203');
INSERT INTO `distract` VALUES ('220302', '繁昌', '101220302', '2203');
INSERT INTO `distract` VALUES ('220303', '芜湖县', '101220303', '2203');
INSERT INTO `distract` VALUES ('220304', '南陵', '101220304', '2203');
INSERT INTO `distract` VALUES ('220401', '淮南', '101220401', '2204');
INSERT INTO `distract` VALUES ('220402', '凤台', '101220402', '2204');
INSERT INTO `distract` VALUES ('220403', '潘集', '101220403', '2204');
INSERT INTO `distract` VALUES ('220501', '马鞍山', '101220501', '2205');
INSERT INTO `distract` VALUES ('220502', '当涂', '101220502', '2205');
INSERT INTO `distract` VALUES ('220601', '安庆', '101220601', '2206');
INSERT INTO `distract` VALUES ('220602', '枞阳', '101220602', '2206');
INSERT INTO `distract` VALUES ('220603', '太湖', '101220603', '2206');
INSERT INTO `distract` VALUES ('220604', '潜山', '101220604', '2206');
INSERT INTO `distract` VALUES ('220605', '怀宁', '101220605', '2206');
INSERT INTO `distract` VALUES ('220606', '宿松', '101220606', '2206');
INSERT INTO `distract` VALUES ('220607', '望江', '101220607', '2206');
INSERT INTO `distract` VALUES ('220608', '岳西', '101220608', '2206');
INSERT INTO `distract` VALUES ('220609', '桐城', '101220609', '2206');
INSERT INTO `distract` VALUES ('220701', '宿州', '101220701', '2207');
INSERT INTO `distract` VALUES ('220702', '砀山', '101220702', '2207');
INSERT INTO `distract` VALUES ('220703', '灵璧', '101220703', '2207');
INSERT INTO `distract` VALUES ('220704', '泗县', '101220704', '2207');
INSERT INTO `distract` VALUES ('220705', '萧县', '101220705', '2207');
INSERT INTO `distract` VALUES ('220801', '阜阳', '101220801', '2208');
INSERT INTO `distract` VALUES ('220802', '阜南', '101220802', '2208');
INSERT INTO `distract` VALUES ('220803', '颍上', '101220803', '2208');
INSERT INTO `distract` VALUES ('220804', '临泉', '101220804', '2208');
INSERT INTO `distract` VALUES ('220805', '界首', '101220805', '2208');
INSERT INTO `distract` VALUES ('220806', '太和', '101220806', '2208');
INSERT INTO `distract` VALUES ('220901', '亳州', '101220901', '2209');
INSERT INTO `distract` VALUES ('220902', '涡阳', '101220902', '2209');
INSERT INTO `distract` VALUES ('220903', '利辛', '101220903', '2209');
INSERT INTO `distract` VALUES ('220904', '蒙城', '101220904', '2209');
INSERT INTO `distract` VALUES ('221001', '黄山市', '101221001', '2210');
INSERT INTO `distract` VALUES ('221002', '黄山区', '101221002', '2210');
INSERT INTO `distract` VALUES ('221003', '屯溪', '101221003', '2210');
INSERT INTO `distract` VALUES ('221004', '祁门', '101221004', '2210');
INSERT INTO `distract` VALUES ('221005', '黟县', '101221005', '2210');
INSERT INTO `distract` VALUES ('221006', '歙县', '101221006', '2210');
INSERT INTO `distract` VALUES ('221007', '休宁', '101221007', '2210');
INSERT INTO `distract` VALUES ('221008', '黄山风景区', '101221008', '2210');
INSERT INTO `distract` VALUES ('221101', '滁州', '101221101', '2211');
INSERT INTO `distract` VALUES ('221102', '凤阳', '101221102', '2211');
INSERT INTO `distract` VALUES ('221103', '明光', '101221103', '2211');
INSERT INTO `distract` VALUES ('221104', '定远', '101221104', '2211');
INSERT INTO `distract` VALUES ('221105', '全椒', '101221105', '2211');
INSERT INTO `distract` VALUES ('221106', '来安', '101221106', '2211');
INSERT INTO `distract` VALUES ('221107', '天长', '101221107', '2211');
INSERT INTO `distract` VALUES ('221201', '淮北', '101221201', '2212');
INSERT INTO `distract` VALUES ('221202', '濉溪', '101221202', '2212');
INSERT INTO `distract` VALUES ('221301', '铜陵', '101221301', '2213');
INSERT INTO `distract` VALUES ('221401', '宣城', '101221401', '2214');
INSERT INTO `distract` VALUES ('221402', '泾县', '101221402', '2214');
INSERT INTO `distract` VALUES ('221403', '旌德', '101221403', '2214');
INSERT INTO `distract` VALUES ('221404', '宁国', '101221404', '2214');
INSERT INTO `distract` VALUES ('221405', '绩溪', '101221405', '2214');
INSERT INTO `distract` VALUES ('221406', '广德', '101221406', '2214');
INSERT INTO `distract` VALUES ('221407', '郎溪', '101221407', '2214');
INSERT INTO `distract` VALUES ('221501', '六安', '101221501', '2215');
INSERT INTO `distract` VALUES ('221502', '霍邱', '101221502', '2215');
INSERT INTO `distract` VALUES ('221503', '寿县', '101221503', '2215');
INSERT INTO `distract` VALUES ('221504', '金寨', '101221505', '2215');
INSERT INTO `distract` VALUES ('221505', '霍山', '101221506', '2215');
INSERT INTO `distract` VALUES ('221506', '舒城', '101221507', '2215');
INSERT INTO `distract` VALUES ('221601', '巢湖', '101221601', '2216');
INSERT INTO `distract` VALUES ('221602', '庐江', '101221602', '2216');
INSERT INTO `distract` VALUES ('221603', '无为', '101221603', '2216');
INSERT INTO `distract` VALUES ('221604', '含山', '101221604', '2216');
INSERT INTO `distract` VALUES ('221605', '和县', '101221605', '2216');
INSERT INTO `distract` VALUES ('221701', '池州', '101221701', '2217');
INSERT INTO `distract` VALUES ('221702', '东至', '101221702', '2217');
INSERT INTO `distract` VALUES ('221703', '青阳', '101221703', '2217');
INSERT INTO `distract` VALUES ('221704', '九华山', '101221704', '2217');
INSERT INTO `distract` VALUES ('221705', '石台', '101221705', '2217');
INSERT INTO `distract` VALUES ('230101', '福州', '101230101', '2301');
INSERT INTO `distract` VALUES ('230102', '闽清', '101230102', '2301');
INSERT INTO `distract` VALUES ('230103', '闽侯', '101230103', '2301');
INSERT INTO `distract` VALUES ('230104', '罗源', '101230104', '2301');
INSERT INTO `distract` VALUES ('230105', '连江', '101230105', '2301');
INSERT INTO `distract` VALUES ('230106', '永泰', '101230107', '2301');
INSERT INTO `distract` VALUES ('230107', '平潭', '101230108', '2301');
INSERT INTO `distract` VALUES ('230108', '长乐', '101230110', '2301');
INSERT INTO `distract` VALUES ('230109', '福清', '101230111', '2301');
INSERT INTO `distract` VALUES ('230201', '厦门', '101230201', '2302');
INSERT INTO `distract` VALUES ('230202', '同安', '101230202', '2302');
INSERT INTO `distract` VALUES ('230301', '宁德', '101230301', '2303');
INSERT INTO `distract` VALUES ('230302', '古田', '101230302', '2303');
INSERT INTO `distract` VALUES ('230303', '霞浦', '101230303', '2303');
INSERT INTO `distract` VALUES ('230304', '寿宁', '101230304', '2303');
INSERT INTO `distract` VALUES ('230305', '周宁', '101230305', '2303');
INSERT INTO `distract` VALUES ('230306', '福安', '101230306', '2303');
INSERT INTO `distract` VALUES ('230307', '柘荣', '101230307', '2303');
INSERT INTO `distract` VALUES ('230308', '福鼎', '101230308', '2303');
INSERT INTO `distract` VALUES ('230309', '屏南', '101230309', '2303');
INSERT INTO `distract` VALUES ('230401', '莆田', '101230401', '2304');
INSERT INTO `distract` VALUES ('230402', '仙游', '101230402', '2304');
INSERT INTO `distract` VALUES ('230403', '秀屿港', '101230403', '2304');
INSERT INTO `distract` VALUES ('230404', '涵江', '101230404', '2304');
INSERT INTO `distract` VALUES ('230405', '秀屿', '101230405', '2304');
INSERT INTO `distract` VALUES ('230406', '荔城', '101230406', '2304');
INSERT INTO `distract` VALUES ('230407', '城厢', '101230407', '2304');
INSERT INTO `distract` VALUES ('230501', '泉州', '101230501', '2305');
INSERT INTO `distract` VALUES ('230502', '安溪', '101230502', '2305');
INSERT INTO `distract` VALUES ('230503', '永春', '101230504', '2305');
INSERT INTO `distract` VALUES ('230504', '德化', '101230505', '2305');
INSERT INTO `distract` VALUES ('230505', '南安', '101230506', '2305');
INSERT INTO `distract` VALUES ('230506', '崇武', '101230507', '2305');
INSERT INTO `distract` VALUES ('230507', '惠安', '101230508', '2305');
INSERT INTO `distract` VALUES ('230508', '晋江', '101230509', '2305');
INSERT INTO `distract` VALUES ('230509', '石狮', '101230510', '2305');
INSERT INTO `distract` VALUES ('230601', '漳州', '101230601', '2306');
INSERT INTO `distract` VALUES ('230602', '长泰', '101230602', '2306');
INSERT INTO `distract` VALUES ('230603', '南靖', '101230603', '2306');
INSERT INTO `distract` VALUES ('230604', '平和', '101230604', '2306');
INSERT INTO `distract` VALUES ('230605', '龙海', '101230605', '2306');
INSERT INTO `distract` VALUES ('230606', '漳浦', '101230606', '2306');
INSERT INTO `distract` VALUES ('230607', '诏安', '101230607', '2306');
INSERT INTO `distract` VALUES ('230608', '东山', '101230608', '2306');
INSERT INTO `distract` VALUES ('230609', '云霄', '101230609', '2306');
INSERT INTO `distract` VALUES ('230610', '华安', '101230610', '2306');
INSERT INTO `distract` VALUES ('230701', '龙岩', '101230701', '2307');
INSERT INTO `distract` VALUES ('230702', '长汀', '101230702', '2307');
INSERT INTO `distract` VALUES ('230703', '连城', '101230703', '2307');
INSERT INTO `distract` VALUES ('230704', '武平', '101230704', '2307');
INSERT INTO `distract` VALUES ('230705', '上杭', '101230705', '2307');
INSERT INTO `distract` VALUES ('230706', '永定', '101230706', '2307');
INSERT INTO `distract` VALUES ('230707', '漳平', '101230707', '2307');
INSERT INTO `distract` VALUES ('230801', '三明', '101230801', '2308');
INSERT INTO `distract` VALUES ('230802', '宁化', '101230802', '2308');
INSERT INTO `distract` VALUES ('230803', '清流', '101230803', '2308');
INSERT INTO `distract` VALUES ('230804', '泰宁', '101230804', '2308');
INSERT INTO `distract` VALUES ('230805', '将乐', '101230805', '2308');
INSERT INTO `distract` VALUES ('230806', '建宁', '101230806', '2308');
INSERT INTO `distract` VALUES ('230807', '明溪', '101230807', '2308');
INSERT INTO `distract` VALUES ('230808', '沙县', '101230808', '2308');
INSERT INTO `distract` VALUES ('230809', '尤溪', '101230809', '2308');
INSERT INTO `distract` VALUES ('230810', '永安', '101230810', '2308');
INSERT INTO `distract` VALUES ('230811', '大田', '101230811', '2308');
INSERT INTO `distract` VALUES ('230901', '南平', '101230901', '2309');
INSERT INTO `distract` VALUES ('230902', '顺昌', '101230902', '2309');
INSERT INTO `distract` VALUES ('230903', '光泽', '101230903', '2309');
INSERT INTO `distract` VALUES ('230904', '邵武', '101230904', '2309');
INSERT INTO `distract` VALUES ('230905', '武夷山', '101230905', '2309');
INSERT INTO `distract` VALUES ('230906', '浦城', '101230906', '2309');
INSERT INTO `distract` VALUES ('230907', '建阳', '101230907', '2309');
INSERT INTO `distract` VALUES ('230908', '松溪', '101230908', '2309');
INSERT INTO `distract` VALUES ('230909', '政和', '101230909', '2309');
INSERT INTO `distract` VALUES ('230910', '建瓯', '101230910', '2309');
INSERT INTO `distract` VALUES ('240101', '南昌', '101240101', '2401');
INSERT INTO `distract` VALUES ('240102', '新建', '101240102', '2401');
INSERT INTO `distract` VALUES ('240103', '南昌县', '101240103', '2401');
INSERT INTO `distract` VALUES ('240104', '安义', '101240104', '2401');
INSERT INTO `distract` VALUES ('240105', '进贤', '101240105', '2401');
INSERT INTO `distract` VALUES ('240201', '九江', '101240201', '2402');
INSERT INTO `distract` VALUES ('240202', '瑞昌', '101240202', '2402');
INSERT INTO `distract` VALUES ('240203', '庐山', '101240203', '2402');
INSERT INTO `distract` VALUES ('240204', '武宁', '101240204', '2402');
INSERT INTO `distract` VALUES ('240205', '德安', '101240205', '2402');
INSERT INTO `distract` VALUES ('240206', '永修', '101240206', '2402');
INSERT INTO `distract` VALUES ('240207', '湖口', '101240207', '2402');
INSERT INTO `distract` VALUES ('240208', '彭泽', '101240208', '2402');
INSERT INTO `distract` VALUES ('240209', '星子', '101240209', '2402');
INSERT INTO `distract` VALUES ('240210', '都昌', '101240210', '2402');
INSERT INTO `distract` VALUES ('240211', '修水', '101240212', '2402');
INSERT INTO `distract` VALUES ('240301', '上饶', '101240301', '2403');
INSERT INTO `distract` VALUES ('240302', '鄱阳', '101240302', '2403');
INSERT INTO `distract` VALUES ('240303', '婺源', '101240303', '2403');
INSERT INTO `distract` VALUES ('240304', '余干', '101240305', '2403');
INSERT INTO `distract` VALUES ('240305', '万年', '101240306', '2403');
INSERT INTO `distract` VALUES ('240306', '德兴', '101240307', '2403');
INSERT INTO `distract` VALUES ('240307', '上饶县', '101240308', '2403');
INSERT INTO `distract` VALUES ('240308', '弋阳', '101240309', '2403');
INSERT INTO `distract` VALUES ('240309', '横峰', '101240310', '2403');
INSERT INTO `distract` VALUES ('240310', '铅山', '101240311', '2403');
INSERT INTO `distract` VALUES ('240311', '玉山', '101240312', '2403');
INSERT INTO `distract` VALUES ('240312', '广丰', '101240313', '2403');
INSERT INTO `distract` VALUES ('240401', '抚州', '101240401', '2404');
INSERT INTO `distract` VALUES ('240402', '广昌', '101240402', '2404');
INSERT INTO `distract` VALUES ('240403', '乐安', '101240403', '2404');
INSERT INTO `distract` VALUES ('240404', '崇仁', '101240404', '2404');
INSERT INTO `distract` VALUES ('240405', '金溪', '101240405', '2404');
INSERT INTO `distract` VALUES ('240406', '资溪', '101240406', '2404');
INSERT INTO `distract` VALUES ('240407', '宜黄', '101240407', '2404');
INSERT INTO `distract` VALUES ('240408', '南城', '101240408', '2404');
INSERT INTO `distract` VALUES ('240409', '南丰', '101240409', '2404');
INSERT INTO `distract` VALUES ('240410', '黎川', '101240410', '2404');
INSERT INTO `distract` VALUES ('240411', '东乡', '101240411', '2404');
INSERT INTO `distract` VALUES ('240501', '宜春', '101240501', '2405');
INSERT INTO `distract` VALUES ('240502', '铜鼓', '101240502', '2405');
INSERT INTO `distract` VALUES ('240503', '宜丰', '101240503', '2405');
INSERT INTO `distract` VALUES ('240504', '万载', '101240504', '2405');
INSERT INTO `distract` VALUES ('240505', '上高', '101240505', '2405');
INSERT INTO `distract` VALUES ('240506', '靖安', '101240506', '2405');
INSERT INTO `distract` VALUES ('240507', '奉新', '101240507', '2405');
INSERT INTO `distract` VALUES ('240508', '高安', '101240508', '2405');
INSERT INTO `distract` VALUES ('240509', '樟树', '101240509', '2405');
INSERT INTO `distract` VALUES ('240510', '丰城', '101240510', '2405');
INSERT INTO `distract` VALUES ('240601', '吉安', '101240601', '2406');
INSERT INTO `distract` VALUES ('240602', '吉安县', '101240602', '2406');
INSERT INTO `distract` VALUES ('240603', '吉水', '101240603', '2406');
INSERT INTO `distract` VALUES ('240604', '新干', '101240604', '2406');
INSERT INTO `distract` VALUES ('240605', '峡江', '101240605', '2406');
INSERT INTO `distract` VALUES ('240606', '永丰', '101240606', '2406');
INSERT INTO `distract` VALUES ('240607', '永新', '101240607', '2406');
INSERT INTO `distract` VALUES ('240608', '井冈山', '101240608', '2406');
INSERT INTO `distract` VALUES ('240609', '万安', '101240609', '2406');
INSERT INTO `distract` VALUES ('240610', '遂川', '101240610', '2406');
INSERT INTO `distract` VALUES ('240611', '泰和', '101240611', '2406');
INSERT INTO `distract` VALUES ('240612', '安福', '101240612', '2406');
INSERT INTO `distract` VALUES ('240613', '宁冈', '101240613', '2406');
INSERT INTO `distract` VALUES ('240701', '赣州', '101240701', '2407');
INSERT INTO `distract` VALUES ('240702', '崇义', '101240702', '2407');
INSERT INTO `distract` VALUES ('240703', '上犹', '101240703', '2407');
INSERT INTO `distract` VALUES ('240704', '南康', '101240704', '2407');
INSERT INTO `distract` VALUES ('240705', '大余', '101240705', '2407');
INSERT INTO `distract` VALUES ('240706', '信丰', '101240706', '2407');
INSERT INTO `distract` VALUES ('240707', '宁都', '101240707', '2407');
INSERT INTO `distract` VALUES ('240708', '石城', '101240708', '2407');
INSERT INTO `distract` VALUES ('240709', '瑞金', '101240709', '2407');
INSERT INTO `distract` VALUES ('240710', '于都', '101240710', '2407');
INSERT INTO `distract` VALUES ('240711', '会昌', '101240711', '2407');
INSERT INTO `distract` VALUES ('240712', '安远', '101240712', '2407');
INSERT INTO `distract` VALUES ('240713', '全南', '101240713', '2407');
INSERT INTO `distract` VALUES ('240714', '龙南', '101240714', '2407');
INSERT INTO `distract` VALUES ('240715', '定南', '101240715', '2407');
INSERT INTO `distract` VALUES ('240716', '寻乌', '101240716', '2407');
INSERT INTO `distract` VALUES ('240717', '兴国', '101240717', '2407');
INSERT INTO `distract` VALUES ('240718', '赣县', '101240718', '2407');
INSERT INTO `distract` VALUES ('240801', '景德镇', '101240801', '2408');
INSERT INTO `distract` VALUES ('240802', '乐平', '101240802', '2408');
INSERT INTO `distract` VALUES ('240803', '浮梁', '101240803', '2408');
INSERT INTO `distract` VALUES ('240901', '萍乡', '101240901', '2409');
INSERT INTO `distract` VALUES ('240902', '莲花', '101240902', '2409');
INSERT INTO `distract` VALUES ('240903', '上栗', '101240903', '2409');
INSERT INTO `distract` VALUES ('240904', '安源', '101240904', '2409');
INSERT INTO `distract` VALUES ('240905', '芦溪', '101240905', '2409');
INSERT INTO `distract` VALUES ('240906', '湘东', '101240906', '2409');
INSERT INTO `distract` VALUES ('241001', '新余', '101241001', '2410');
INSERT INTO `distract` VALUES ('241002', '分宜', '101241002', '2410');
INSERT INTO `distract` VALUES ('241101', '鹰潭', '101241101', '2411');
INSERT INTO `distract` VALUES ('241102', '余江', '101241102', '2411');
INSERT INTO `distract` VALUES ('241103', '贵溪', '101241103', '2411');
INSERT INTO `distract` VALUES ('250101', '长沙', '101250101', '2501');
INSERT INTO `distract` VALUES ('250102', '宁乡', '101250102', '2501');
INSERT INTO `distract` VALUES ('250103', '浏阳', '101250103', '2501');
INSERT INTO `distract` VALUES ('250104', '马坡岭', '101250104', '2501');
INSERT INTO `distract` VALUES ('250105', '望城', '101250105', '2501');
INSERT INTO `distract` VALUES ('250201', '湘潭', '101250201', '2502');
INSERT INTO `distract` VALUES ('250202', '韶山', '101250202', '2502');
INSERT INTO `distract` VALUES ('250203', '湘乡', '101250203', '2502');
INSERT INTO `distract` VALUES ('250301', '株洲', '101250301', '2503');
INSERT INTO `distract` VALUES ('250302', '攸县', '101250302', '2503');
INSERT INTO `distract` VALUES ('250303', '醴陵', '101250303', '2503');
INSERT INTO `distract` VALUES ('250304', '茶陵', '101250305', '2503');
INSERT INTO `distract` VALUES ('250305', '炎陵', '101250306', '2503');
INSERT INTO `distract` VALUES ('250401', '衡阳', '101250401', '2504');
INSERT INTO `distract` VALUES ('250402', '衡山', '101250402', '2504');
INSERT INTO `distract` VALUES ('250403', '衡东', '101250403', '2504');
INSERT INTO `distract` VALUES ('250404', '祁东', '101250404', '2504');
INSERT INTO `distract` VALUES ('250405', '衡阳县', '101250405', '2504');
INSERT INTO `distract` VALUES ('250406', '常宁', '101250406', '2504');
INSERT INTO `distract` VALUES ('250407', '衡南', '101250407', '2504');
INSERT INTO `distract` VALUES ('250408', '耒阳', '101250408', '2504');
INSERT INTO `distract` VALUES ('250409', '南岳', '101250409', '2504');
INSERT INTO `distract` VALUES ('250501', '郴州', '101250501', '2505');
INSERT INTO `distract` VALUES ('250502', '桂阳', '101250502', '2505');
INSERT INTO `distract` VALUES ('250503', '嘉禾', '101250503', '2505');
INSERT INTO `distract` VALUES ('250504', '宜章', '101250504', '2505');
INSERT INTO `distract` VALUES ('250505', '临武', '101250505', '2505');
INSERT INTO `distract` VALUES ('250506', '资兴', '101250507', '2505');
INSERT INTO `distract` VALUES ('250507', '汝城', '101250508', '2505');
INSERT INTO `distract` VALUES ('250508', '安仁', '101250509', '2505');
INSERT INTO `distract` VALUES ('250509', '永兴', '101250510', '2505');
INSERT INTO `distract` VALUES ('250510', '桂东', '101250511', '2505');
INSERT INTO `distract` VALUES ('250511', '苏仙', '101250512', '2505');
INSERT INTO `distract` VALUES ('250601', '常德', '101250601', '2506');
INSERT INTO `distract` VALUES ('250602', '安乡', '101250602', '2506');
INSERT INTO `distract` VALUES ('250603', '桃源', '101250603', '2506');
INSERT INTO `distract` VALUES ('250604', '汉寿', '101250604', '2506');
INSERT INTO `distract` VALUES ('250605', '澧县', '101250605', '2506');
INSERT INTO `distract` VALUES ('250606', '临澧', '101250606', '2506');
INSERT INTO `distract` VALUES ('250607', '石门', '101250607', '2506');
INSERT INTO `distract` VALUES ('250608', '津市', '101250608', '2506');
INSERT INTO `distract` VALUES ('250701', '益阳', '101250700', '2507');
INSERT INTO `distract` VALUES ('250702', '赫山区', '101250701', '2507');
INSERT INTO `distract` VALUES ('250703', '南县', '101250702', '2507');
INSERT INTO `distract` VALUES ('250704', '桃江', '101250703', '2507');
INSERT INTO `distract` VALUES ('250705', '安化', '101250704', '2507');
INSERT INTO `distract` VALUES ('250706', '沅江', '101250705', '2507');
INSERT INTO `distract` VALUES ('250801', '娄底', '101250801', '2508');
INSERT INTO `distract` VALUES ('250802', '双峰', '101250802', '2508');
INSERT INTO `distract` VALUES ('250803', '冷水江', '101250803', '2508');
INSERT INTO `distract` VALUES ('250804', '新化', '101250805', '2508');
INSERT INTO `distract` VALUES ('250805', '涟源', '101250806', '2508');
INSERT INTO `distract` VALUES ('250901', '邵阳', '101250901', '2509');
INSERT INTO `distract` VALUES ('250902', '隆回', '101250902', '2509');
INSERT INTO `distract` VALUES ('250903', '洞口', '101250903', '2509');
INSERT INTO `distract` VALUES ('250904', '新邵', '101250904', '2509');
INSERT INTO `distract` VALUES ('250905', '邵东', '101250905', '2509');
INSERT INTO `distract` VALUES ('250906', '绥宁', '101250906', '2509');
INSERT INTO `distract` VALUES ('250907', '新宁', '101250907', '2509');
INSERT INTO `distract` VALUES ('250908', '武冈', '101250908', '2509');
INSERT INTO `distract` VALUES ('250909', '城步', '101250909', '2509');
INSERT INTO `distract` VALUES ('250910', '邵阳县', '101250910', '2509');
INSERT INTO `distract` VALUES ('251001', '岳阳', '101251001', '2510');
INSERT INTO `distract` VALUES ('251002', '华容', '101251002', '2510');
INSERT INTO `distract` VALUES ('251003', '湘阴', '101251003', '2510');
INSERT INTO `distract` VALUES ('251004', '汨罗', '101251004', '2510');
INSERT INTO `distract` VALUES ('251005', '平江', '101251005', '2510');
INSERT INTO `distract` VALUES ('251006', '临湘', '101251006', '2510');
INSERT INTO `distract` VALUES ('251101', '张家界', '101251101', '2511');
INSERT INTO `distract` VALUES ('251102', '桑植', '101251102', '2511');
INSERT INTO `distract` VALUES ('251103', '慈利', '101251103', '2511');
INSERT INTO `distract` VALUES ('251104', '武陵源', '101251104', '2511');
INSERT INTO `distract` VALUES ('251201', '怀化', '101251201', '2512');
INSERT INTO `distract` VALUES ('251202', '沅陵', '101251203', '2512');
INSERT INTO `distract` VALUES ('251203', '辰溪', '101251204', '2512');
INSERT INTO `distract` VALUES ('251204', '靖州', '101251205', '2512');
INSERT INTO `distract` VALUES ('251205', '会同', '101251206', '2512');
INSERT INTO `distract` VALUES ('251206', '通道', '101251207', '2512');
INSERT INTO `distract` VALUES ('251207', '麻阳', '101251208', '2512');
INSERT INTO `distract` VALUES ('251208', '新晃', '101251209', '2512');
INSERT INTO `distract` VALUES ('251209', '芷江', '101251210', '2512');
INSERT INTO `distract` VALUES ('251210', '溆浦', '101251211', '2512');
INSERT INTO `distract` VALUES ('251211', '中方', '101251212', '2512');
INSERT INTO `distract` VALUES ('251212', '洪江', '101251213', '2512');
INSERT INTO `distract` VALUES ('251301', '永州', '101251401', '2513');
INSERT INTO `distract` VALUES ('251302', '祁阳', '101251402', '2513');
INSERT INTO `distract` VALUES ('251303', '东安', '101251403', '2513');
INSERT INTO `distract` VALUES ('251304', '双牌', '101251404', '2513');
INSERT INTO `distract` VALUES ('251305', '道县', '101251405', '2513');
INSERT INTO `distract` VALUES ('251306', '宁远', '101251406', '2513');
INSERT INTO `distract` VALUES ('251307', '江永', '101251407', '2513');
INSERT INTO `distract` VALUES ('251308', '蓝山', '101251408', '2513');
INSERT INTO `distract` VALUES ('251309', '新田', '101251409', '2513');
INSERT INTO `distract` VALUES ('251310', '江华', '101251410', '2513');
INSERT INTO `distract` VALUES ('251311', '冷水滩', '101251411', '2513');
INSERT INTO `distract` VALUES ('251401', '吉首', '101251501', '2514');
INSERT INTO `distract` VALUES ('251402', '保靖', '101251502', '2514');
INSERT INTO `distract` VALUES ('251403', '永顺', '101251503', '2514');
INSERT INTO `distract` VALUES ('251404', '古丈', '101251504', '2514');
INSERT INTO `distract` VALUES ('251405', '凤凰', '101251505', '2514');
INSERT INTO `distract` VALUES ('251406', '泸溪', '101251506', '2514');
INSERT INTO `distract` VALUES ('251407', '龙山', '101251507', '2514');
INSERT INTO `distract` VALUES ('251408', '花垣', '101251508', '2514');
INSERT INTO `distract` VALUES ('260101', '贵阳', '101260101', '2601');
INSERT INTO `distract` VALUES ('260102', '白云', '101260102', '2601');
INSERT INTO `distract` VALUES ('260103', '花溪', '101260103', '2601');
INSERT INTO `distract` VALUES ('260104', '乌当', '101260104', '2601');
INSERT INTO `distract` VALUES ('260105', '息烽', '101260105', '2601');
INSERT INTO `distract` VALUES ('260106', '开阳', '101260106', '2601');
INSERT INTO `distract` VALUES ('260107', '修文', '101260107', '2601');
INSERT INTO `distract` VALUES ('260108', '清镇', '101260108', '2601');
INSERT INTO `distract` VALUES ('260109', '小河', '101260109', '2601');
INSERT INTO `distract` VALUES ('260110', '云岩', '101260110', '2601');
INSERT INTO `distract` VALUES ('260111', '南明', '101260111', '2601');
INSERT INTO `distract` VALUES ('260201', '遵义', '101260201', '2602');
INSERT INTO `distract` VALUES ('260202', '遵义县', '101260202', '2602');
INSERT INTO `distract` VALUES ('260203', '仁怀', '101260203', '2602');
INSERT INTO `distract` VALUES ('260204', '绥阳', '101260204', '2602');
INSERT INTO `distract` VALUES ('260205', '湄潭', '101260205', '2602');
INSERT INTO `distract` VALUES ('260206', '凤冈', '101260206', '2602');
INSERT INTO `distract` VALUES ('260207', '桐梓', '101260207', '2602');
INSERT INTO `distract` VALUES ('260208', '赤水', '101260208', '2602');
INSERT INTO `distract` VALUES ('260209', '习水', '101260209', '2602');
INSERT INTO `distract` VALUES ('260210', '道真', '101260210', '2602');
INSERT INTO `distract` VALUES ('260211', '正安', '101260211', '2602');
INSERT INTO `distract` VALUES ('260212', '务川', '101260212', '2602');
INSERT INTO `distract` VALUES ('260213', '余庆', '101260213', '2602');
INSERT INTO `distract` VALUES ('260214', '汇川', '101260214', '2602');
INSERT INTO `distract` VALUES ('260215', '红花岗', '101260215', '2602');
INSERT INTO `distract` VALUES ('260301', '安顺', '101260301', '2603');
INSERT INTO `distract` VALUES ('260302', '普定', '101260302', '2603');
INSERT INTO `distract` VALUES ('260303', '镇宁', '101260303', '2603');
INSERT INTO `distract` VALUES ('260304', '平坝', '101260304', '2603');
INSERT INTO `distract` VALUES ('260305', '紫云', '101260305', '2603');
INSERT INTO `distract` VALUES ('260306', '关岭', '101260306', '2603');
INSERT INTO `distract` VALUES ('260401', '都匀', '101260401', '2604');
INSERT INTO `distract` VALUES ('260402', '贵定', '101260402', '2604');
INSERT INTO `distract` VALUES ('260403', '瓮安', '101260403', '2604');
INSERT INTO `distract` VALUES ('260404', '长顺', '101260404', '2604');
INSERT INTO `distract` VALUES ('260405', '福泉', '101260405', '2604');
INSERT INTO `distract` VALUES ('260406', '惠水', '101260406', '2604');
INSERT INTO `distract` VALUES ('260407', '龙里', '101260407', '2604');
INSERT INTO `distract` VALUES ('260408', '罗甸', '101260408', '2604');
INSERT INTO `distract` VALUES ('260409', '平塘', '101260409', '2604');
INSERT INTO `distract` VALUES ('260410', '独山', '101260410', '2604');
INSERT INTO `distract` VALUES ('260411', '三都', '101260411', '2604');
INSERT INTO `distract` VALUES ('260412', '荔波', '101260412', '2604');
INSERT INTO `distract` VALUES ('260501', '凯里', '101260501', '2605');
INSERT INTO `distract` VALUES ('260502', '岑巩', '101260502', '2605');
INSERT INTO `distract` VALUES ('260503', '施秉', '101260503', '2605');
INSERT INTO `distract` VALUES ('260504', '镇远', '101260504', '2605');
INSERT INTO `distract` VALUES ('260505', '黄平', '101260505', '2605');
INSERT INTO `distract` VALUES ('260506', '麻江', '101260507', '2605');
INSERT INTO `distract` VALUES ('260507', '丹寨', '101260508', '2605');
INSERT INTO `distract` VALUES ('260508', '三穗', '101260509', '2605');
INSERT INTO `distract` VALUES ('260509', '台江', '101260510', '2605');
INSERT INTO `distract` VALUES ('260510', '剑河', '101260511', '2605');
INSERT INTO `distract` VALUES ('260511', '雷山', '101260512', '2605');
INSERT INTO `distract` VALUES ('260512', '黎平', '101260513', '2605');
INSERT INTO `distract` VALUES ('260513', '天柱', '101260514', '2605');
INSERT INTO `distract` VALUES ('260514', '锦屏', '101260515', '2605');
INSERT INTO `distract` VALUES ('260515', '榕江', '101260516', '2605');
INSERT INTO `distract` VALUES ('260516', '从江', '101260517', '2605');
INSERT INTO `distract` VALUES ('260601', '铜仁', '101260601', '2606');
INSERT INTO `distract` VALUES ('260602', '江口', '101260602', '2606');
INSERT INTO `distract` VALUES ('260603', '玉屏', '101260603', '2606');
INSERT INTO `distract` VALUES ('260604', '万山', '101260604', '2606');
INSERT INTO `distract` VALUES ('260605', '思南', '101260605', '2606');
INSERT INTO `distract` VALUES ('260606', '印江', '101260607', '2606');
INSERT INTO `distract` VALUES ('260607', '石阡', '101260608', '2606');
INSERT INTO `distract` VALUES ('260608', '沿河', '101260609', '2606');
INSERT INTO `distract` VALUES ('260609', '德江', '101260610', '2606');
INSERT INTO `distract` VALUES ('260610', '松桃', '101260611', '2606');
INSERT INTO `distract` VALUES ('260701', '毕节', '101260701', '2607');
INSERT INTO `distract` VALUES ('260702', '赫章', '101260702', '2607');
INSERT INTO `distract` VALUES ('260703', '金沙', '101260703', '2607');
INSERT INTO `distract` VALUES ('260704', '威宁', '101260704', '2607');
INSERT INTO `distract` VALUES ('260705', '大方', '101260705', '2607');
INSERT INTO `distract` VALUES ('260706', '纳雍', '101260706', '2607');
INSERT INTO `distract` VALUES ('260707', '织金', '101260707', '2607');
INSERT INTO `distract` VALUES ('260708', '黔西', '101260708', '2607');
INSERT INTO `distract` VALUES ('260801', '水城', '101260801', '2608');
INSERT INTO `distract` VALUES ('260802', '六枝', '101260802', '2608');
INSERT INTO `distract` VALUES ('260803', '盘县', '101260804', '2608');
INSERT INTO `distract` VALUES ('260901', '兴义', '101260901', '2609');
INSERT INTO `distract` VALUES ('260902', '晴隆', '101260902', '2609');
INSERT INTO `distract` VALUES ('260903', '兴仁', '101260903', '2609');
INSERT INTO `distract` VALUES ('260904', '贞丰', '101260904', '2609');
INSERT INTO `distract` VALUES ('260905', '望谟', '101260905', '2609');
INSERT INTO `distract` VALUES ('260906', '安龙', '101260907', '2609');
INSERT INTO `distract` VALUES ('260907', '册亨', '101260908', '2609');
INSERT INTO `distract` VALUES ('260908', '普安', '101260909', '2609');
INSERT INTO `distract` VALUES ('270101', '成都', '101270101', '2701');
INSERT INTO `distract` VALUES ('270102', '龙泉驿', '101270102', '2701');
INSERT INTO `distract` VALUES ('270103', '新都', '101270103', '2701');
INSERT INTO `distract` VALUES ('270104', '温江', '101270104', '2701');
INSERT INTO `distract` VALUES ('270105', '金堂', '101270105', '2701');
INSERT INTO `distract` VALUES ('270106', '双流', '101270106', '2701');
INSERT INTO `distract` VALUES ('270107', '郫县', '101270107', '2701');
INSERT INTO `distract` VALUES ('270108', '大邑', '101270108', '2701');
INSERT INTO `distract` VALUES ('270109', '蒲江', '101270109', '2701');
INSERT INTO `distract` VALUES ('270110', '新津', '101270110', '2701');
INSERT INTO `distract` VALUES ('270111', '都江堰', '101270111', '2701');
INSERT INTO `distract` VALUES ('270112', '彭州', '101270112', '2701');
INSERT INTO `distract` VALUES ('270113', '邛崃', '101270113', '2701');
INSERT INTO `distract` VALUES ('270114', '崇州', '101270114', '2701');
INSERT INTO `distract` VALUES ('270201', '攀枝花', '101270201', '2702');
INSERT INTO `distract` VALUES ('270202', '仁和', '101270202', '2702');
INSERT INTO `distract` VALUES ('270203', '米易', '101270203', '2702');
INSERT INTO `distract` VALUES ('270204', '盐边', '101270204', '2702');
INSERT INTO `distract` VALUES ('270301', '自贡', '101270301', '2703');
INSERT INTO `distract` VALUES ('270302', '富顺', '101270302', '2703');
INSERT INTO `distract` VALUES ('270303', '荣县', '101270303', '2703');
INSERT INTO `distract` VALUES ('270401', '绵阳', '101270401', '2704');
INSERT INTO `distract` VALUES ('270402', '三台', '101270402', '2704');
INSERT INTO `distract` VALUES ('270403', '盐亭', '101270403', '2704');
INSERT INTO `distract` VALUES ('270404', '安县', '101270404', '2704');
INSERT INTO `distract` VALUES ('270405', '梓潼', '101270405', '2704');
INSERT INTO `distract` VALUES ('270406', '北川', '101270406', '2704');
INSERT INTO `distract` VALUES ('270407', '平武', '101270407', '2704');
INSERT INTO `distract` VALUES ('270408', '江油', '101270408', '2704');
INSERT INTO `distract` VALUES ('270501', '南充', '101270501', '2705');
INSERT INTO `distract` VALUES ('270502', '南部', '101270502', '2705');
INSERT INTO `distract` VALUES ('270503', '营山', '101270503', '2705');
INSERT INTO `distract` VALUES ('270504', '蓬安', '101270504', '2705');
INSERT INTO `distract` VALUES ('270505', '仪陇', '101270505', '2705');
INSERT INTO `distract` VALUES ('270506', '西充', '101270506', '2705');
INSERT INTO `distract` VALUES ('270507', '阆中', '101270507', '2705');
INSERT INTO `distract` VALUES ('270601', '达州', '101270601', '2706');
INSERT INTO `distract` VALUES ('270602', '宣汉', '101270602', '2706');
INSERT INTO `distract` VALUES ('270603', '开江', '101270603', '2706');
INSERT INTO `distract` VALUES ('270604', '大竹', '101270604', '2706');
INSERT INTO `distract` VALUES ('270605', '渠县', '101270605', '2706');
INSERT INTO `distract` VALUES ('270606', '万源', '101270606', '2706');
INSERT INTO `distract` VALUES ('270607', '通川', '101270607', '2706');
INSERT INTO `distract` VALUES ('270608', '达县', '101270608', '2706');
INSERT INTO `distract` VALUES ('270701', '遂宁', '101270701', '2707');
INSERT INTO `distract` VALUES ('270702', '蓬溪', '101270702', '2707');
INSERT INTO `distract` VALUES ('270703', '射洪', '101270703', '2707');
INSERT INTO `distract` VALUES ('270801', '广安', '101270801', '2708');
INSERT INTO `distract` VALUES ('270802', '岳池', '101270802', '2708');
INSERT INTO `distract` VALUES ('270803', '武胜', '101270803', '2708');
INSERT INTO `distract` VALUES ('270804', '邻水', '101270804', '2708');
INSERT INTO `distract` VALUES ('270805', '华蓥', '101270805', '2708');
INSERT INTO `distract` VALUES ('270901', '巴中', '101270901', '2709');
INSERT INTO `distract` VALUES ('270902', '通江', '101270902', '2709');
INSERT INTO `distract` VALUES ('270903', '南江', '101270903', '2709');
INSERT INTO `distract` VALUES ('270904', '平昌', '101270904', '2709');
INSERT INTO `distract` VALUES ('271001', '泸州', '101271001', '2710');
INSERT INTO `distract` VALUES ('271002', '泸县', '101271003', '2710');
INSERT INTO `distract` VALUES ('271003', '合江', '101271004', '2710');
INSERT INTO `distract` VALUES ('271004', '叙永', '101271005', '2710');
INSERT INTO `distract` VALUES ('271005', '古蔺', '101271006', '2710');
INSERT INTO `distract` VALUES ('271006', '纳溪', '101271007', '2710');
INSERT INTO `distract` VALUES ('271101', '宜宾', '101271101', '2711');
INSERT INTO `distract` VALUES ('271102', '宜宾县', '101271103', '2711');
INSERT INTO `distract` VALUES ('271103', '南溪', '101271104', '2711');
INSERT INTO `distract` VALUES ('271104', '江安', '101271105', '2711');
INSERT INTO `distract` VALUES ('271105', '长宁', '101271106', '2711');
INSERT INTO `distract` VALUES ('271106', '高县', '101271107', '2711');
INSERT INTO `distract` VALUES ('271107', '珙县', '101271108', '2711');
INSERT INTO `distract` VALUES ('271108', '筠连', '101271109', '2711');
INSERT INTO `distract` VALUES ('271109', '兴文', '101271110', '2711');
INSERT INTO `distract` VALUES ('271110', '屏山', '101271111', '2711');
INSERT INTO `distract` VALUES ('271201', '内江', '101271201', '2712');
INSERT INTO `distract` VALUES ('271202', '东兴', '101271202', '2712');
INSERT INTO `distract` VALUES ('271203', '威远', '101271203', '2712');
INSERT INTO `distract` VALUES ('271204', '资中', '101271204', '2712');
INSERT INTO `distract` VALUES ('271205', '隆昌', '101271205', '2712');
INSERT INTO `distract` VALUES ('271301', '资阳', '101271301', '2713');
INSERT INTO `distract` VALUES ('271302', '安岳', '101271302', '2713');
INSERT INTO `distract` VALUES ('271303', '乐至', '101271303', '2713');
INSERT INTO `distract` VALUES ('271304', '简阳', '101271304', '2713');
INSERT INTO `distract` VALUES ('271401', '乐山', '101271401', '2714');
INSERT INTO `distract` VALUES ('271402', '犍为', '101271402', '2714');
INSERT INTO `distract` VALUES ('271403', '井研', '101271403', '2714');
INSERT INTO `distract` VALUES ('271404', '夹江', '101271404', '2714');
INSERT INTO `distract` VALUES ('271405', '沐川', '101271405', '2714');
INSERT INTO `distract` VALUES ('271406', '峨边', '101271406', '2714');
INSERT INTO `distract` VALUES ('271407', '马边', '101271407', '2714');
INSERT INTO `distract` VALUES ('271408', '峨眉', '101271408', '2714');
INSERT INTO `distract` VALUES ('271409', '峨眉山', '101271409', '2714');
INSERT INTO `distract` VALUES ('271501', '眉山', '101271501', '2715');
INSERT INTO `distract` VALUES ('271502', '仁寿', '101271502', '2715');
INSERT INTO `distract` VALUES ('271503', '彭山', '101271503', '2715');
INSERT INTO `distract` VALUES ('271504', '洪雅', '101271504', '2715');
INSERT INTO `distract` VALUES ('271505', '丹棱', '101271505', '2715');
INSERT INTO `distract` VALUES ('271506', '青神', '101271506', '2715');
INSERT INTO `distract` VALUES ('271601', '凉山', '101271601', '2716');
INSERT INTO `distract` VALUES ('271602', '木里', '101271603', '2716');
INSERT INTO `distract` VALUES ('271603', '盐源', '101271604', '2716');
INSERT INTO `distract` VALUES ('271604', '德昌', '101271605', '2716');
INSERT INTO `distract` VALUES ('271605', '会理', '101271606', '2716');
INSERT INTO `distract` VALUES ('271606', '会东', '101271607', '2716');
INSERT INTO `distract` VALUES ('271607', '宁南', '101271608', '2716');
INSERT INTO `distract` VALUES ('271608', '普格', '101271609', '2716');
INSERT INTO `distract` VALUES ('271609', '西昌', '101271610', '2716');
INSERT INTO `distract` VALUES ('271610', '金阳', '101271611', '2716');
INSERT INTO `distract` VALUES ('271611', '昭觉', '101271612', '2716');
INSERT INTO `distract` VALUES ('271612', '喜德', '101271613', '2716');
INSERT INTO `distract` VALUES ('271613', '冕宁', '101271614', '2716');
INSERT INTO `distract` VALUES ('271614', '越西', '101271615', '2716');
INSERT INTO `distract` VALUES ('271615', '甘洛', '101271616', '2716');
INSERT INTO `distract` VALUES ('271616', '雷波', '101271617', '2716');
INSERT INTO `distract` VALUES ('271617', '美姑', '101271618', '2716');
INSERT INTO `distract` VALUES ('271618', '布拖', '101271619', '2716');
INSERT INTO `distract` VALUES ('271701', '雅安', '101271701', '2717');
INSERT INTO `distract` VALUES ('271702', '名山', '101271702', '2717');
INSERT INTO `distract` VALUES ('271703', '荥经', '101271703', '2717');
INSERT INTO `distract` VALUES ('271704', '汉源', '101271704', '2717');
INSERT INTO `distract` VALUES ('271705', '石棉', '101271705', '2717');
INSERT INTO `distract` VALUES ('271706', '天全', '101271706', '2717');
INSERT INTO `distract` VALUES ('271707', '芦山', '101271707', '2717');
INSERT INTO `distract` VALUES ('271708', '宝兴', '101271708', '2717');
INSERT INTO `distract` VALUES ('271801', '甘孜', '101271801', '2718');
INSERT INTO `distract` VALUES ('271802', '康定', '101271802', '2718');
INSERT INTO `distract` VALUES ('271803', '泸定', '101271803', '2718');
INSERT INTO `distract` VALUES ('271804', '丹巴', '101271804', '2718');
INSERT INTO `distract` VALUES ('271805', '九龙', '101271805', '2718');
INSERT INTO `distract` VALUES ('271806', '雅江', '101271806', '2718');
INSERT INTO `distract` VALUES ('271807', '道孚', '101271807', '2718');
INSERT INTO `distract` VALUES ('271808', '炉霍', '101271808', '2718');
INSERT INTO `distract` VALUES ('271809', '新龙', '101271809', '2718');
INSERT INTO `distract` VALUES ('271810', '德格', '101271810', '2718');
INSERT INTO `distract` VALUES ('271811', '白玉', '101271811', '2718');
INSERT INTO `distract` VALUES ('271812', '石渠', '101271812', '2718');
INSERT INTO `distract` VALUES ('271813', '色达', '101271813', '2718');
INSERT INTO `distract` VALUES ('271814', '理塘', '101271814', '2718');
INSERT INTO `distract` VALUES ('271815', '巴塘', '101271815', '2718');
INSERT INTO `distract` VALUES ('271816', '乡城', '101271816', '2718');
INSERT INTO `distract` VALUES ('271817', '稻城', '101271817', '2718');
INSERT INTO `distract` VALUES ('271818', '得荣', '101271818', '2718');
INSERT INTO `distract` VALUES ('271901', '阿坝', '101271901', '2719');
INSERT INTO `distract` VALUES ('271902', '汶川', '101271902', '2719');
INSERT INTO `distract` VALUES ('271903', '理县', '101271903', '2719');
INSERT INTO `distract` VALUES ('271904', '茂县', '101271904', '2719');
INSERT INTO `distract` VALUES ('271905', '松潘', '101271905', '2719');
INSERT INTO `distract` VALUES ('271906', '九寨沟', '101271906', '2719');
INSERT INTO `distract` VALUES ('271907', '金川', '101271907', '2719');
INSERT INTO `distract` VALUES ('271908', '小金', '101271908', '2719');
INSERT INTO `distract` VALUES ('271909', '黑水', '101271909', '2719');
INSERT INTO `distract` VALUES ('271910', '马尔康', '101271910', '2719');
INSERT INTO `distract` VALUES ('271911', '壤塘', '101271911', '2719');
INSERT INTO `distract` VALUES ('271912', '若尔盖', '101271912', '2719');
INSERT INTO `distract` VALUES ('271913', '红原', '101271913', '2719');
INSERT INTO `distract` VALUES ('272001', '德阳', '101272001', '2720');
INSERT INTO `distract` VALUES ('272002', '中江', '101272002', '2720');
INSERT INTO `distract` VALUES ('272003', '广汉', '101272003', '2720');
INSERT INTO `distract` VALUES ('272004', '什邡', '101272004', '2720');
INSERT INTO `distract` VALUES ('272005', '绵竹', '101272005', '2720');
INSERT INTO `distract` VALUES ('272006', '罗江', '101272006', '2720');
INSERT INTO `distract` VALUES ('272101', '广元', '101272101', '2721');
INSERT INTO `distract` VALUES ('272102', '旺苍', '101272102', '2721');
INSERT INTO `distract` VALUES ('272103', '青川', '101272103', '2721');
INSERT INTO `distract` VALUES ('272104', '剑阁', '101272104', '2721');
INSERT INTO `distract` VALUES ('272105', '苍溪', '101272105', '2721');
INSERT INTO `distract` VALUES ('280101', '广州', '101280101', '2801');
INSERT INTO `distract` VALUES ('280102', '番禺', '101280102', '2801');
INSERT INTO `distract` VALUES ('280103', '从化', '101280103', '2801');
INSERT INTO `distract` VALUES ('280104', '增城', '101280104', '2801');
INSERT INTO `distract` VALUES ('280105', '花都', '101280105', '2801');
INSERT INTO `distract` VALUES ('280201', '韶关', '101280201', '2802');
INSERT INTO `distract` VALUES ('280202', '乳源', '101280202', '2802');
INSERT INTO `distract` VALUES ('280203', '始兴', '101280203', '2802');
INSERT INTO `distract` VALUES ('280204', '翁源', '101280204', '2802');
INSERT INTO `distract` VALUES ('280205', '乐昌', '101280205', '2802');
INSERT INTO `distract` VALUES ('280206', '仁化', '101280206', '2802');
INSERT INTO `distract` VALUES ('280207', '南雄', '101280207', '2802');
INSERT INTO `distract` VALUES ('280208', '新丰', '101280208', '2802');
INSERT INTO `distract` VALUES ('280209', '曲江', '101280209', '2802');
INSERT INTO `distract` VALUES ('280210', '浈江', '101280210', '2802');
INSERT INTO `distract` VALUES ('280211', '武江', '101280211', '2802');
INSERT INTO `distract` VALUES ('280301', '惠州', '101280301', '2803');
INSERT INTO `distract` VALUES ('280302', '博罗', '101280302', '2803');
INSERT INTO `distract` VALUES ('280303', '惠阳', '101280303', '2803');
INSERT INTO `distract` VALUES ('280304', '惠东', '101280304', '2803');
INSERT INTO `distract` VALUES ('280305', '龙门', '101280305', '2803');
INSERT INTO `distract` VALUES ('280401', '梅州', '101280401', '2804');
INSERT INTO `distract` VALUES ('280402', '兴宁', '101280402', '2804');
INSERT INTO `distract` VALUES ('280403', '蕉岭', '101280403', '2804');
INSERT INTO `distract` VALUES ('280404', '大埔', '101280404', '2804');
INSERT INTO `distract` VALUES ('280405', '丰顺', '101280406', '2804');
INSERT INTO `distract` VALUES ('280406', '平远', '101280407', '2804');
INSERT INTO `distract` VALUES ('280407', '五华', '101280408', '2804');
INSERT INTO `distract` VALUES ('280408', '梅县', '101280409', '2804');
INSERT INTO `distract` VALUES ('280501', '汕头', '101280501', '2805');
INSERT INTO `distract` VALUES ('280502', '潮阳', '101280502', '2805');
INSERT INTO `distract` VALUES ('280503', '澄海', '101280503', '2805');
INSERT INTO `distract` VALUES ('280504', '南澳', '101280504', '2805');
INSERT INTO `distract` VALUES ('280601', '深圳', '101280601', '2806');
INSERT INTO `distract` VALUES ('280701', '珠海', '101280701', '2807');
INSERT INTO `distract` VALUES ('280702', '斗门', '101280702', '2807');
INSERT INTO `distract` VALUES ('280703', '金湾', '101280703', '2807');
INSERT INTO `distract` VALUES ('280801', '佛山', '101280800', '2808');
INSERT INTO `distract` VALUES ('280802', '顺德', '101280801', '2808');
INSERT INTO `distract` VALUES ('280803', '三水', '101280802', '2808');
INSERT INTO `distract` VALUES ('280804', '南海', '101280803', '2808');
INSERT INTO `distract` VALUES ('280805', '高明', '101280804', '2808');
INSERT INTO `distract` VALUES ('280901', '肇庆', '101280901', '2809');
INSERT INTO `distract` VALUES ('280902', '广宁', '101280902', '2809');
INSERT INTO `distract` VALUES ('280903', '四会', '101280903', '2809');
INSERT INTO `distract` VALUES ('280904', '德庆', '101280905', '2809');
INSERT INTO `distract` VALUES ('280905', '怀集', '101280906', '2809');
INSERT INTO `distract` VALUES ('280906', '封开', '101280907', '2809');
INSERT INTO `distract` VALUES ('280907', '高要', '101280908', '2809');
INSERT INTO `distract` VALUES ('281001', '湛江', '101281001', '2810');
INSERT INTO `distract` VALUES ('281002', '吴川', '101281002', '2810');
INSERT INTO `distract` VALUES ('281003', '雷州', '101281003', '2810');
INSERT INTO `distract` VALUES ('281004', '徐闻', '101281004', '2810');
INSERT INTO `distract` VALUES ('281005', '廉江', '101281005', '2810');
INSERT INTO `distract` VALUES ('281006', '赤坎', '101281006', '2810');
INSERT INTO `distract` VALUES ('281007', '遂溪', '101281007', '2810');
INSERT INTO `distract` VALUES ('281008', '坡头', '101281008', '2810');
INSERT INTO `distract` VALUES ('281009', '霞山', '101281009', '2810');
INSERT INTO `distract` VALUES ('281010', '麻章', '101281010', '2810');
INSERT INTO `distract` VALUES ('281101', '江门', '101281101', '2811');
INSERT INTO `distract` VALUES ('281102', '开平', '101281103', '2811');
INSERT INTO `distract` VALUES ('281103', '新会', '101281104', '2811');
INSERT INTO `distract` VALUES ('281104', '恩平', '101281105', '2811');
INSERT INTO `distract` VALUES ('281105', '台山', '101281106', '2811');
INSERT INTO `distract` VALUES ('281106', '蓬江', '101281107', '2811');
INSERT INTO `distract` VALUES ('281107', '鹤山', '101281108', '2811');
INSERT INTO `distract` VALUES ('281108', '江海', '101281109', '2811');
INSERT INTO `distract` VALUES ('281201', '河源', '101281201', '2812');
INSERT INTO `distract` VALUES ('281202', '紫金', '101281202', '2812');
INSERT INTO `distract` VALUES ('281203', '连平', '101281203', '2812');
INSERT INTO `distract` VALUES ('281204', '和平', '101281204', '2812');
INSERT INTO `distract` VALUES ('281205', '龙川', '101281205', '2812');
INSERT INTO `distract` VALUES ('281206', '东源', '101281206', '2812');
INSERT INTO `distract` VALUES ('281301', '清远', '101281301', '2813');
INSERT INTO `distract` VALUES ('281302', '连南', '101281302', '2813');
INSERT INTO `distract` VALUES ('281303', '连州', '101281303', '2813');
INSERT INTO `distract` VALUES ('281304', '连山', '101281304', '2813');
INSERT INTO `distract` VALUES ('281305', '阳山', '101281305', '2813');
INSERT INTO `distract` VALUES ('281306', '佛冈', '101281306', '2813');
INSERT INTO `distract` VALUES ('281307', '英德', '101281307', '2813');
INSERT INTO `distract` VALUES ('281308', '清新', '101281308', '2813');
INSERT INTO `distract` VALUES ('281401', '云浮', '101281401', '2814');
INSERT INTO `distract` VALUES ('281402', '罗定', '101281402', '2814');
INSERT INTO `distract` VALUES ('281403', '新兴', '101281403', '2814');
INSERT INTO `distract` VALUES ('281404', '郁南', '101281404', '2814');
INSERT INTO `distract` VALUES ('281405', '云安', '101281406', '2814');
INSERT INTO `distract` VALUES ('281501', '潮州', '101281501', '2815');
INSERT INTO `distract` VALUES ('281502', '饶平', '101281502', '2815');
INSERT INTO `distract` VALUES ('281503', '潮安', '101281503', '2815');
INSERT INTO `distract` VALUES ('281601', '东莞', '101281601', '2816');
INSERT INTO `distract` VALUES ('281701', '中山', '101281701', '2817');
INSERT INTO `distract` VALUES ('281801', '阳江', '101281801', '2818');
INSERT INTO `distract` VALUES ('281802', '阳春', '101281802', '2818');
INSERT INTO `distract` VALUES ('281803', '阳东', '101281803', '2818');
INSERT INTO `distract` VALUES ('281804', '阳西', '101281804', '2818');
INSERT INTO `distract` VALUES ('281901', '揭阳', '101281901', '2819');
INSERT INTO `distract` VALUES ('281902', '揭西', '101281902', '2819');
INSERT INTO `distract` VALUES ('281903', '普宁', '101281903', '2819');
INSERT INTO `distract` VALUES ('281904', '惠来', '101281904', '2819');
INSERT INTO `distract` VALUES ('281905', '揭东', '101281905', '2819');
INSERT INTO `distract` VALUES ('282001', '茂名', '101282001', '2820');
INSERT INTO `distract` VALUES ('282002', '高州', '101282002', '2820');
INSERT INTO `distract` VALUES ('282003', '化州', '101282003', '2820');
INSERT INTO `distract` VALUES ('282004', '电白', '101282004', '2820');
INSERT INTO `distract` VALUES ('282005', '信宜', '101282005', '2820');
INSERT INTO `distract` VALUES ('282006', '茂港', '101282006', '2820');
INSERT INTO `distract` VALUES ('282101', '汕尾', '101282101', '2821');
INSERT INTO `distract` VALUES ('282102', '海丰', '101282102', '2821');
INSERT INTO `distract` VALUES ('282103', '陆丰', '101282103', '2821');
INSERT INTO `distract` VALUES ('282104', '陆河', '101282104', '2821');
INSERT INTO `distract` VALUES ('290101', '昆明', '101290101', '2901');
INSERT INTO `distract` VALUES ('290102', '东川', '101290103', '2901');
INSERT INTO `distract` VALUES ('290103', '寻甸', '101290104', '2901');
INSERT INTO `distract` VALUES ('290104', '晋宁', '101290105', '2901');
INSERT INTO `distract` VALUES ('290105', '宜良', '101290106', '2901');
INSERT INTO `distract` VALUES ('290106', '石林', '101290107', '2901');
INSERT INTO `distract` VALUES ('290107', '呈贡', '101290108', '2901');
INSERT INTO `distract` VALUES ('290108', '富民', '101290109', '2901');
INSERT INTO `distract` VALUES ('290109', '嵩明', '101290110', '2901');
INSERT INTO `distract` VALUES ('290110', '禄劝', '101290111', '2901');
INSERT INTO `distract` VALUES ('290111', '安宁', '101290112', '2901');
INSERT INTO `distract` VALUES ('290112', '太华山', '101290113', '2901');
INSERT INTO `distract` VALUES ('290201', '大理', '101290201', '2902');
INSERT INTO `distract` VALUES ('290202', '云龙', '101290202', '2902');
INSERT INTO `distract` VALUES ('290203', '漾濞', '101290203', '2902');
INSERT INTO `distract` VALUES ('290204', '永平', '101290204', '2902');
INSERT INTO `distract` VALUES ('290205', '宾川', '101290205', '2902');
INSERT INTO `distract` VALUES ('290206', '弥渡', '101290206', '2902');
INSERT INTO `distract` VALUES ('290207', '祥云', '101290207', '2902');
INSERT INTO `distract` VALUES ('290208', '巍山', '101290208', '2902');
INSERT INTO `distract` VALUES ('290209', '剑川', '101290209', '2902');
INSERT INTO `distract` VALUES ('290210', '洱源', '101290210', '2902');
INSERT INTO `distract` VALUES ('290211', '鹤庆', '101290211', '2902');
INSERT INTO `distract` VALUES ('290212', '南涧', '101290212', '2902');
INSERT INTO `distract` VALUES ('290301', '红河', '101290301', '2903');
INSERT INTO `distract` VALUES ('290302', '石屏', '101290302', '2903');
INSERT INTO `distract` VALUES ('290303', '建水', '101290303', '2903');
INSERT INTO `distract` VALUES ('290304', '弥勒', '101290304', '2903');
INSERT INTO `distract` VALUES ('290305', '元阳', '101290305', '2903');
INSERT INTO `distract` VALUES ('290306', '绿春', '101290306', '2903');
INSERT INTO `distract` VALUES ('290307', '开远', '101290307', '2903');
INSERT INTO `distract` VALUES ('290308', '个旧', '101290308', '2903');
INSERT INTO `distract` VALUES ('290309', '蒙自', '101290309', '2903');
INSERT INTO `distract` VALUES ('290310', '屏边', '101290310', '2903');
INSERT INTO `distract` VALUES ('290311', '泸西', '101290311', '2903');
INSERT INTO `distract` VALUES ('290312', '金平', '101290312', '2903');
INSERT INTO `distract` VALUES ('290313', '河口', '101290313', '2903');
INSERT INTO `distract` VALUES ('290401', '曲靖', '101290401', '2904');
INSERT INTO `distract` VALUES ('290402', '沾益', '101290402', '2904');
INSERT INTO `distract` VALUES ('290403', '陆良', '101290403', '2904');
INSERT INTO `distract` VALUES ('290404', '富源', '101290404', '2904');
INSERT INTO `distract` VALUES ('290405', '马龙', '101290405', '2904');
INSERT INTO `distract` VALUES ('290406', '师宗', '101290406', '2904');
INSERT INTO `distract` VALUES ('290407', '罗平', '101290407', '2904');
INSERT INTO `distract` VALUES ('290408', '会泽', '101290408', '2904');
INSERT INTO `distract` VALUES ('290409', '宣威', '101290409', '2904');
INSERT INTO `distract` VALUES ('290501', '保山', '101290501', '2905');
INSERT INTO `distract` VALUES ('290502', '龙陵', '101290503', '2905');
INSERT INTO `distract` VALUES ('290503', '施甸', '101290504', '2905');
INSERT INTO `distract` VALUES ('290504', '昌宁', '101290505', '2905');
INSERT INTO `distract` VALUES ('290505', '腾冲', '101290506', '2905');
INSERT INTO `distract` VALUES ('290601', '文山', '101290601', '2906');
INSERT INTO `distract` VALUES ('290602', '西畴', '101290602', '2906');
INSERT INTO `distract` VALUES ('290603', '马关', '101290603', '2906');
INSERT INTO `distract` VALUES ('290604', '麻栗坡', '101290604', '2906');
INSERT INTO `distract` VALUES ('290605', '砚山', '101290605', '2906');
INSERT INTO `distract` VALUES ('290606', '丘北', '101290606', '2906');
INSERT INTO `distract` VALUES ('290607', '广南', '101290607', '2906');
INSERT INTO `distract` VALUES ('290608', '富宁', '101290608', '2906');
INSERT INTO `distract` VALUES ('290701', '玉溪', '101290701', '2907');
INSERT INTO `distract` VALUES ('290702', '澄江', '101290702', '2907');
INSERT INTO `distract` VALUES ('290703', '江川', '101290703', '2907');
INSERT INTO `distract` VALUES ('290704', '通海', '101290704', '2907');
INSERT INTO `distract` VALUES ('290705', '华宁', '101290705', '2907');
INSERT INTO `distract` VALUES ('290706', '新平', '101290706', '2907');
INSERT INTO `distract` VALUES ('290707', '易门', '101290707', '2907');
INSERT INTO `distract` VALUES ('290708', '峨山', '101290708', '2907');
INSERT INTO `distract` VALUES ('290709', '元江', '101290709', '2907');
INSERT INTO `distract` VALUES ('290801', '楚雄', '101290801', '2908');
INSERT INTO `distract` VALUES ('290802', '大姚', '101290802', '2908');
INSERT INTO `distract` VALUES ('290803', '元谋', '101290803', '2908');
INSERT INTO `distract` VALUES ('290804', '姚安', '101290804', '2908');
INSERT INTO `distract` VALUES ('290805', '牟定', '101290805', '2908');
INSERT INTO `distract` VALUES ('290806', '南华', '101290806', '2908');
INSERT INTO `distract` VALUES ('290807', '武定', '101290807', '2908');
INSERT INTO `distract` VALUES ('290808', '禄丰', '101290808', '2908');
INSERT INTO `distract` VALUES ('290809', '双柏', '101290809', '2908');
INSERT INTO `distract` VALUES ('290810', '永仁', '101290810', '2908');
INSERT INTO `distract` VALUES ('290901', '普洱', '101290901', '2909');
INSERT INTO `distract` VALUES ('290902', '景谷', '101290902', '2909');
INSERT INTO `distract` VALUES ('290903', '景东', '101290903', '2909');
INSERT INTO `distract` VALUES ('290904', '澜沧', '101290904', '2909');
INSERT INTO `distract` VALUES ('290905', '墨江', '101290906', '2909');
INSERT INTO `distract` VALUES ('290906', '江城', '101290907', '2909');
INSERT INTO `distract` VALUES ('290907', '孟连', '101290908', '2909');
INSERT INTO `distract` VALUES ('290908', '西盟', '101290909', '2909');
INSERT INTO `distract` VALUES ('290909', '镇沅', '101290911', '2909');
INSERT INTO `distract` VALUES ('290910', '宁洱', '101290912', '2909');
INSERT INTO `distract` VALUES ('291001', '昭通', '101291001', '2910');
INSERT INTO `distract` VALUES ('291002', '鲁甸', '101291002', '2910');
INSERT INTO `distract` VALUES ('291003', '彝良', '101291003', '2910');
INSERT INTO `distract` VALUES ('291004', '镇雄', '101291004', '2910');
INSERT INTO `distract` VALUES ('291005', '威信', '101291005', '2910');
INSERT INTO `distract` VALUES ('291006', '巧家', '101291006', '2910');
INSERT INTO `distract` VALUES ('291007', '绥江', '101291007', '2910');
INSERT INTO `distract` VALUES ('291008', '永善', '101291008', '2910');
INSERT INTO `distract` VALUES ('291009', '盐津', '101291009', '2910');
INSERT INTO `distract` VALUES ('291010', '大关', '101291010', '2910');
INSERT INTO `distract` VALUES ('291011', '水富', '101291011', '2910');
INSERT INTO `distract` VALUES ('291101', '临沧', '101291101', '2911');
INSERT INTO `distract` VALUES ('291102', '沧源', '101291102', '2911');
INSERT INTO `distract` VALUES ('291103', '耿马', '101291103', '2911');
INSERT INTO `distract` VALUES ('291104', '双江', '101291104', '2911');
INSERT INTO `distract` VALUES ('291105', '凤庆', '101291105', '2911');
INSERT INTO `distract` VALUES ('291106', '永德', '101291106', '2911');
INSERT INTO `distract` VALUES ('291107', '云县', '101291107', '2911');
INSERT INTO `distract` VALUES ('291108', '镇康', '101291108', '2911');
INSERT INTO `distract` VALUES ('291201', '怒江', '101291201', '2912');
INSERT INTO `distract` VALUES ('291202', '福贡', '101291203', '2912');
INSERT INTO `distract` VALUES ('291203', '兰坪', '101291204', '2912');
INSERT INTO `distract` VALUES ('291204', '泸水', '101291205', '2912');
INSERT INTO `distract` VALUES ('291205', '六库', '101291206', '2912');
INSERT INTO `distract` VALUES ('291206', '贡山', '101291207', '2912');
INSERT INTO `distract` VALUES ('291301', '香格里拉', '101291301', '2913');
INSERT INTO `distract` VALUES ('291302', '德钦', '101291302', '2913');
INSERT INTO `distract` VALUES ('291303', '维西', '101291303', '2913');
INSERT INTO `distract` VALUES ('291304', '中甸', '101291304', '2913');
INSERT INTO `distract` VALUES ('291401', '丽江', '101291401', '2914');
INSERT INTO `distract` VALUES ('291402', '永胜', '101291402', '2914');
INSERT INTO `distract` VALUES ('291403', '华坪', '101291403', '2914');
INSERT INTO `distract` VALUES ('291404', '宁蒗', '101291404', '2914');
INSERT INTO `distract` VALUES ('291501', '德宏', '101291501', '2915');
INSERT INTO `distract` VALUES ('291502', '陇川', '101291503', '2915');
INSERT INTO `distract` VALUES ('291503', '盈江', '101291504', '2915');
INSERT INTO `distract` VALUES ('291504', '瑞丽', '101291506', '2915');
INSERT INTO `distract` VALUES ('291505', '梁河', '101291507', '2915');
INSERT INTO `distract` VALUES ('291506', '潞西', '101291508', '2915');
INSERT INTO `distract` VALUES ('291601', '景洪', '101291601', '2916');
INSERT INTO `distract` VALUES ('291602', '勐海', '101291603', '2916');
INSERT INTO `distract` VALUES ('291603', '勐腊', '101291605', '2916');
INSERT INTO `distract` VALUES ('300101', '南宁', '101300101', '3001');
INSERT INTO `distract` VALUES ('300102', '邕宁', '101300103', '3001');
INSERT INTO `distract` VALUES ('300103', '横县', '101300104', '3001');
INSERT INTO `distract` VALUES ('300104', '隆安', '101300105', '3001');
INSERT INTO `distract` VALUES ('300105', '马山', '101300106', '3001');
INSERT INTO `distract` VALUES ('300106', '上林', '101300107', '3001');
INSERT INTO `distract` VALUES ('300107', '武鸣', '101300108', '3001');
INSERT INTO `distract` VALUES ('300108', '宾阳', '101300109', '3001');
INSERT INTO `distract` VALUES ('300201', '崇左', '101300201', '3002');
INSERT INTO `distract` VALUES ('300202', '天等', '101300202', '3002');
INSERT INTO `distract` VALUES ('300203', '龙州', '101300203', '3002');
INSERT INTO `distract` VALUES ('300204', '凭祥', '101300204', '3002');
INSERT INTO `distract` VALUES ('300205', '大新', '101300205', '3002');
INSERT INTO `distract` VALUES ('300206', '扶绥', '101300206', '3002');
INSERT INTO `distract` VALUES ('300207', '宁明', '101300207', '3002');
INSERT INTO `distract` VALUES ('300301', '柳州', '101300301', '3003');
INSERT INTO `distract` VALUES ('300302', '柳城', '101300302', '3003');
INSERT INTO `distract` VALUES ('300303', '鹿寨', '101300304', '3003');
INSERT INTO `distract` VALUES ('300304', '柳江', '101300305', '3003');
INSERT INTO `distract` VALUES ('300305', '融安', '101300306', '3003');
INSERT INTO `distract` VALUES ('300306', '融水', '101300307', '3003');
INSERT INTO `distract` VALUES ('300307', '三江', '101300308', '3003');
INSERT INTO `distract` VALUES ('300401', '来宾', '101300401', '3004');
INSERT INTO `distract` VALUES ('300402', '忻城', '101300402', '3004');
INSERT INTO `distract` VALUES ('300403', '金秀', '101300403', '3004');
INSERT INTO `distract` VALUES ('300404', '象州', '101300404', '3004');
INSERT INTO `distract` VALUES ('300405', '武宣', '101300405', '3004');
INSERT INTO `distract` VALUES ('300406', '合山', '101300406', '3004');
INSERT INTO `distract` VALUES ('300501', '桂林', '101300501', '3005');
INSERT INTO `distract` VALUES ('300502', '龙胜', '101300503', '3005');
INSERT INTO `distract` VALUES ('300503', '永福', '101300504', '3005');
INSERT INTO `distract` VALUES ('300504', '临桂', '101300505', '3005');
INSERT INTO `distract` VALUES ('300505', '兴安', '101300506', '3005');
INSERT INTO `distract` VALUES ('300506', '灵川', '101300507', '3005');
INSERT INTO `distract` VALUES ('300507', '全州', '101300508', '3005');
INSERT INTO `distract` VALUES ('300508', '灌阳', '101300509', '3005');
INSERT INTO `distract` VALUES ('300509', '阳朔', '101300510', '3005');
INSERT INTO `distract` VALUES ('300510', '恭城', '101300511', '3005');
INSERT INTO `distract` VALUES ('300511', '平乐', '101300512', '3005');
INSERT INTO `distract` VALUES ('300512', '荔浦', '101300513', '3005');
INSERT INTO `distract` VALUES ('300513', '资源', '101300514', '3005');
INSERT INTO `distract` VALUES ('300601', '梧州', '101300601', '3006');
INSERT INTO `distract` VALUES ('300602', '藤县', '101300602', '3006');
INSERT INTO `distract` VALUES ('300603', '苍梧', '101300604', '3006');
INSERT INTO `distract` VALUES ('300604', '蒙山', '101300605', '3006');
INSERT INTO `distract` VALUES ('300605', '岑溪', '101300606', '3006');
INSERT INTO `distract` VALUES ('300701', '贺州', '101300701', '3007');
INSERT INTO `distract` VALUES ('300702', '昭平', '101300702', '3007');
INSERT INTO `distract` VALUES ('300703', '富川', '101300703', '3007');
INSERT INTO `distract` VALUES ('300704', '钟山', '101300704', '3007');
INSERT INTO `distract` VALUES ('300801', '贵港', '101300801', '3008');
INSERT INTO `distract` VALUES ('300802', '桂平', '101300802', '3008');
INSERT INTO `distract` VALUES ('300803', '平南', '101300803', '3008');
INSERT INTO `distract` VALUES ('300901', '玉林', '101300901', '3009');
INSERT INTO `distract` VALUES ('300902', '博白', '101300902', '3009');
INSERT INTO `distract` VALUES ('300903', '北流', '101300903', '3009');
INSERT INTO `distract` VALUES ('300904', '容县', '101300904', '3009');
INSERT INTO `distract` VALUES ('300905', '陆川', '101300905', '3009');
INSERT INTO `distract` VALUES ('300906', '兴业', '101300906', '3009');
INSERT INTO `distract` VALUES ('301001', '百色', '101301001', '3010');
INSERT INTO `distract` VALUES ('301002', '那坡', '101301002', '3010');
INSERT INTO `distract` VALUES ('301003', '田阳', '101301003', '3010');
INSERT INTO `distract` VALUES ('301004', '德保', '101301004', '3010');
INSERT INTO `distract` VALUES ('301005', '靖西', '101301005', '3010');
INSERT INTO `distract` VALUES ('301006', '田东', '101301006', '3010');
INSERT INTO `distract` VALUES ('301007', '平果', '101301007', '3010');
INSERT INTO `distract` VALUES ('301008', '隆林', '101301008', '3010');
INSERT INTO `distract` VALUES ('301009', '西林', '101301009', '3010');
INSERT INTO `distract` VALUES ('301010', '乐业', '101301010', '3010');
INSERT INTO `distract` VALUES ('301011', '凌云', '101301011', '3010');
INSERT INTO `distract` VALUES ('301012', '田林', '101301012', '3010');
INSERT INTO `distract` VALUES ('301101', '钦州', '101301101', '3011');
INSERT INTO `distract` VALUES ('301102', '浦北', '101301102', '3011');
INSERT INTO `distract` VALUES ('301103', '灵山', '101301103', '3011');
INSERT INTO `distract` VALUES ('301201', '河池', '101301201', '3012');
INSERT INTO `distract` VALUES ('301202', '天峨', '101301202', '3012');
INSERT INTO `distract` VALUES ('301203', '东兰', '101301203', '3012');
INSERT INTO `distract` VALUES ('301204', '巴马', '101301204', '3012');
INSERT INTO `distract` VALUES ('301205', '环江', '101301205', '3012');
INSERT INTO `distract` VALUES ('301206', '罗城', '101301206', '3012');
INSERT INTO `distract` VALUES ('301207', '宜州', '101301207', '3012');
INSERT INTO `distract` VALUES ('301208', '凤山', '101301208', '3012');
INSERT INTO `distract` VALUES ('301209', '南丹', '101301209', '3012');
INSERT INTO `distract` VALUES ('301210', '都安', '101301210', '3012');
INSERT INTO `distract` VALUES ('301211', '大化', '101301211', '3012');
INSERT INTO `distract` VALUES ('301301', '北海', '101301301', '3013');
INSERT INTO `distract` VALUES ('301302', '合浦', '101301302', '3013');
INSERT INTO `distract` VALUES ('301303', '涠洲岛', '101301303', '3013');
INSERT INTO `distract` VALUES ('301401', '防城港', '101301401', '3014');
INSERT INTO `distract` VALUES ('301402', '上思', '101301402', '3014');
INSERT INTO `distract` VALUES ('301403', '东兴', '101301403', '3014');
INSERT INTO `distract` VALUES ('301404', '防城', '101301405', '3014');
INSERT INTO `distract` VALUES ('310101', '海口', '101310101', '3101');
INSERT INTO `distract` VALUES ('310201', '三亚', '101310201', '3102');
INSERT INTO `distract` VALUES ('310301', '东方', '101310202', '3103');
INSERT INTO `distract` VALUES ('310401', '临高', '101310203', '3104');
INSERT INTO `distract` VALUES ('310501', '澄迈', '101310204', '3105');
INSERT INTO `distract` VALUES ('310601', '儋州', '101310205', '3106');
INSERT INTO `distract` VALUES ('310701', '昌江', '101310206', '3107');
INSERT INTO `distract` VALUES ('310801', '白沙', '101310207', '3108');
INSERT INTO `distract` VALUES ('310901', '琼中', '101310208', '3109');
INSERT INTO `distract` VALUES ('311001', '定安', '101310209', '3110');
INSERT INTO `distract` VALUES ('311101', '屯昌', '101310210', '3111');
INSERT INTO `distract` VALUES ('311201', '琼海', '101310211', '3112');
INSERT INTO `distract` VALUES ('311301', '文昌', '101310212', '3113');
INSERT INTO `distract` VALUES ('311401', '保亭', '101310214', '3114');
INSERT INTO `distract` VALUES ('311501', '万宁', '101310215', '3115');
INSERT INTO `distract` VALUES ('311601', '陵水', '101310216', '3116');
INSERT INTO `distract` VALUES ('311701', '西沙', '101310217', '3117');
INSERT INTO `distract` VALUES ('311801', '南沙', '101310220', '3118');
INSERT INTO `distract` VALUES ('311901', '乐东', '101310221', '3119');
INSERT INTO `distract` VALUES ('312001', '五指山', '101310222', '3120');
INSERT INTO `distract` VALUES ('320101', '香港', '101320101', '3201');
INSERT INTO `distract` VALUES ('320102', '九龙', '101320102', '3201');
INSERT INTO `distract` VALUES ('320103', '新界', '101320103', '3201');
INSERT INTO `distract` VALUES ('330101', '澳门', '101330101', '3301');
INSERT INTO `distract` VALUES ('330102', '氹仔岛', '101330102', '3301');
INSERT INTO `distract` VALUES ('330103', '路环岛', '101330103', '3301');
INSERT INTO `distract` VALUES ('340101', '台北', '101340101', '3401');
INSERT INTO `distract` VALUES ('340102', '桃园', '101340102', '3401');
INSERT INTO `distract` VALUES ('340103', '新竹', '101340103', '3401');
INSERT INTO `distract` VALUES ('340104', '宜兰', '101340104', '3401');
INSERT INTO `distract` VALUES ('340201', '高雄', '101340201', '3402');
INSERT INTO `distract` VALUES ('340202', '嘉义', '101340202', '3402');
INSERT INTO `distract` VALUES ('340203', '台南', '101340203', '3402');
INSERT INTO `distract` VALUES ('340204', '台东', '101340204', '3402');
INSERT INTO `distract` VALUES ('340205', '屏东', '101340205', '3402');
INSERT INTO `distract` VALUES ('340301', '台中', '101340401', '3403');
INSERT INTO `distract` VALUES ('340302', '苗栗', '101340402', '3403');
INSERT INTO `distract` VALUES ('340303', '彰化', '101340403', '3403');
INSERT INTO `distract` VALUES ('340304', '南投', '101340404', '3403');
INSERT INTO `distract` VALUES ('340305', '花莲', '101340405', '3403');
INSERT INTO `distract` VALUES ('340306', '云林', '101340406', '3403');

-- ----------------------------
-- Table structure for `keywords`
-- ----------------------------
DROP TABLE IF EXISTS `keywords`;
CREATE TABLE `keywords` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL DEFAULT '',
  `num` int(11) NOT NULL DEFAULT '1',
  `recordtime` int(11) NOT NULL,
  `order` int(5) NOT NULL DEFAULT '20' COMMENT '为普通标签  20以下需要排序此为管理员添加标签越小越靠前',
  PRIMARY KEY (`id`),
  KEY `name_index` (`name`)
) ENGINE=MyISAM AUTO_INCREMENT=40 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of keywords
-- ----------------------------
INSERT INTO `keywords` VALUES ('2', 'php', '105', '1496220750', '1');
INSERT INTO `keywords` VALUES ('3', 'js', '24', '1515231478', '20');
INSERT INTO `keywords` VALUES ('4', 'json', '32', '1473312991', '20');
INSERT INTO `keywords` VALUES ('5', '时间戳', '12', '1473306998', '20');
INSERT INTO `keywords` VALUES ('6', '时间戳转换', '31', '1480493026', '20');
INSERT INTO `keywords` VALUES ('7', 'json转换', '11', '1479369843', '20');
INSERT INTO `keywords` VALUES ('8', 'utf8', '6', '1478500432', '20');
INSERT INTO `keywords` VALUES ('9', '二维码生成', '4', '1478500913', '20');
INSERT INTO `keywords` VALUES ('11', 'qrcode', '2', '1473307002', '20');
INSERT INTO `keywords` VALUES ('13', 'html', '23', '1473305615', '20');
INSERT INTO `keywords` VALUES ('14', 'a标签', '4', '1478500444', '20');
INSERT INTO `keywords` VALUES ('29', 'redis', '2', '1494840112', '20');
INSERT INTO `keywords` VALUES ('26', 'sfasd', '2', '1478501604', '20');
INSERT INTO `keywords` VALUES ('27', '656', '1', '1478513227', '20');
INSERT INTO `keywords` VALUES ('28', '111212121', '1', '1479367985', '20');
INSERT INTO `keywords` VALUES ('30', 'hook', '1', '1479368011', '20');
INSERT INTO `keywords` VALUES ('31', 'tags', '1', '1479368016', '20');
INSERT INTO `keywords` VALUES ('32', '2323', '4', '1479373535', '20');
INSERT INTO `keywords` VALUES ('33', '2323.', '4', '1479373996', '20');
INSERT INTO `keywords` VALUES ('34', 'zx', '16', '1479892821', '20');
INSERT INTO `keywords` VALUES ('35', 'zx.', '10', '1479719331', '20');
INSERT INTO `keywords` VALUES ('36', '1321513213213', '17', '1479719702', '20');
INSERT INTO `keywords` VALUES ('37', 'git', '3', '1504259097', '20');
INSERT INTO `keywords` VALUES ('38', 'centos', '3', '1516349395', '20');
INSERT INTO `keywords` VALUES ('39', 'composer.json', '1', '1520416698', '20');

-- ----------------------------
-- Table structure for `province`
-- ----------------------------
DROP TABLE IF EXISTS `province`;
CREATE TABLE `province` (
  `id` varchar(10) NOT NULL DEFAULT '',
  `name` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of province
-- ----------------------------
INSERT INTO `province` VALUES ('01', '北京');
INSERT INTO `province` VALUES ('02', '上海');
INSERT INTO `province` VALUES ('03', '天津');
INSERT INTO `province` VALUES ('04', '重庆');
INSERT INTO `province` VALUES ('05', '黑龙江');
INSERT INTO `province` VALUES ('06', '吉林');
INSERT INTO `province` VALUES ('07', '辽宁');
INSERT INTO `province` VALUES ('08', '内蒙古');
INSERT INTO `province` VALUES ('09', '河北');
INSERT INTO `province` VALUES ('10', '山西');
INSERT INTO `province` VALUES ('11', '陕西');
INSERT INTO `province` VALUES ('12', '山东');
INSERT INTO `province` VALUES ('13', '新疆');
INSERT INTO `province` VALUES ('14', '西藏');
INSERT INTO `province` VALUES ('15', '青海');
INSERT INTO `province` VALUES ('16', '甘肃');
INSERT INTO `province` VALUES ('17', '宁夏');
INSERT INTO `province` VALUES ('18', '河南');
INSERT INTO `province` VALUES ('19', '江苏');
INSERT INTO `province` VALUES ('20', '湖北');
INSERT INTO `province` VALUES ('21', '浙江');
INSERT INTO `province` VALUES ('22', '安徽');
INSERT INTO `province` VALUES ('23', '福建');
INSERT INTO `province` VALUES ('24', '江西');
INSERT INTO `province` VALUES ('25', '湖南');
INSERT INTO `province` VALUES ('26', '贵州');
INSERT INTO `province` VALUES ('27', '四川');
INSERT INTO `province` VALUES ('28', '广东');
INSERT INTO `province` VALUES ('29', '云南');
INSERT INTO `province` VALUES ('30', '广西');
INSERT INTO `province` VALUES ('31', '海南');
INSERT INTO `province` VALUES ('32', '香港');
INSERT INTO `province` VALUES ('33', '澳门');
INSERT INTO `province` VALUES ('34', '台湾');

-- ----------------------------
-- Table structure for `statisticsip`
-- ----------------------------
DROP TABLE IF EXISTS `statisticsip`;
CREATE TABLE `statisticsip` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `date` int(8) NOT NULL,
  `ip` varchar(15) NOT NULL,
  `recordtime` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=139 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of statisticsip
-- ----------------------------
INSERT INTO `statisticsip` VALUES ('1', '20160901', '127.0.0.1', '1472727584');
INSERT INTO `statisticsip` VALUES ('2', '20160902', '127.0.0.1', '1472780757');
INSERT INTO `statisticsip` VALUES ('3', '20160903', '127.0.0.1', '1472867746');
INSERT INTO `statisticsip` VALUES ('4', '20160903', '127.0.0.1', '1472867746');
INSERT INTO `statisticsip` VALUES ('5', '20160905', '127.0.0.1', '1473060894');
INSERT INTO `statisticsip` VALUES ('6', '20160905', '127.0.0.1', '1473060894');
INSERT INTO `statisticsip` VALUES ('7', '20160906', '127.0.0.1', '1473127470');
INSERT INTO `statisticsip` VALUES ('8', '20160907', '127.0.0.1', '1473215274');
INSERT INTO `statisticsip` VALUES ('9', '20160908', '127.0.0.1', '1473305336');
INSERT INTO `statisticsip` VALUES ('10', '20160909', '127.0.0.1', '1473411184');
INSERT INTO `statisticsip` VALUES ('11', '20160913', '127.0.0.1', '1473733237');
INSERT INTO `statisticsip` VALUES ('12', '20160914', '127.0.0.1', '1473818334');
INSERT INTO `statisticsip` VALUES ('13', '20160916', '127.0.0.1', '1473995725');
INSERT INTO `statisticsip` VALUES ('14', '20160918', '127.0.0.1', '1474167468');
INSERT INTO `statisticsip` VALUES ('15', '20160918', '127.0.0.1', '1474167468');
INSERT INTO `statisticsip` VALUES ('16', '20160919', '127.0.0.1', '1474251903');
INSERT INTO `statisticsip` VALUES ('17', '20160920', '127.0.0.1', '1474359935');
INSERT INTO `statisticsip` VALUES ('18', '20160921', '127.0.0.1', '1474424589');
INSERT INTO `statisticsip` VALUES ('19', '20160922', '127.0.0.1', '1474509751');
INSERT INTO `statisticsip` VALUES ('20', '20160923', '127.0.0.1', '1474624533');
INSERT INTO `statisticsip` VALUES ('21', '20160928', '127.0.0.1', '1475028489');
INSERT INTO `statisticsip` VALUES ('22', '20160930', '127.0.0.1', '1475206185');
INSERT INTO `statisticsip` VALUES ('23', '20161008', '127.0.0.1', '1475920968');
INSERT INTO `statisticsip` VALUES ('24', '20161010', '127.0.0.1', '1476084019');
INSERT INTO `statisticsip` VALUES ('25', '20161011', '127.0.0.1', '1476168689');
INSERT INTO `statisticsip` VALUES ('26', '20161012', '127.0.0.1', '1476252801');
INSERT INTO `statisticsip` VALUES ('27', '20161014', '127.0.0.1', '1476437892');
INSERT INTO `statisticsip` VALUES ('28', '20161017', '127.0.0.1', '1476698197');
INSERT INTO `statisticsip` VALUES ('29', '20161019', '127.0.0.1', '1476844515');
INSERT INTO `statisticsip` VALUES ('30', '20161021', '127.0.0.1', '1477028593');
INSERT INTO `statisticsip` VALUES ('31', '20161024', '127.0.0.1', '1477278058');
INSERT INTO `statisticsip` VALUES ('32', '20161026', '127.0.0.1', '1477471811');
INSERT INTO `statisticsip` VALUES ('33', '20161031', '127.0.0.1', '1477882289');
INSERT INTO `statisticsip` VALUES ('34', '20161101', '127.0.0.1', '1477989547');
INSERT INTO `statisticsip` VALUES ('35', '20161103', '127.0.0.1', '1478163501');
INSERT INTO `statisticsip` VALUES ('36', '20161104', '127.0.0.1', '1478226668');
INSERT INTO `statisticsip` VALUES ('37', '20161107', '127.0.0.1', '1478489689');
INSERT INTO `statisticsip` VALUES ('38', '20161108', '127.0.0.1', '1478571407');
INSERT INTO `statisticsip` VALUES ('39', '20161110', '127.0.0.1', '1478763371');
INSERT INTO `statisticsip` VALUES ('40', '20161111', '127.0.0.1', '1478851911');
INSERT INTO `statisticsip` VALUES ('41', '20161114', '127.0.0.1', '1479102512');
INSERT INTO `statisticsip` VALUES ('42', '20161115', '127.0.0.1', '1479192291');
INSERT INTO `statisticsip` VALUES ('43', '20161117', '127.0.0.1', '1479362247');
INSERT INTO `statisticsip` VALUES ('44', '20161121', '127.0.0.1', '1479713230');
INSERT INTO `statisticsip` VALUES ('45', '20161122', '127.0.0.1', '1479805692');
INSERT INTO `statisticsip` VALUES ('46', '20161123', '127.0.0.1', '1479885642');
INSERT INTO `statisticsip` VALUES ('47', '20161124', '127.0.0.1', '1479967673');
INSERT INTO `statisticsip` VALUES ('48', '20161125', '127.0.0.1', '1480040783');
INSERT INTO `statisticsip` VALUES ('49', '20161129', '127.0.0.1', '1480404180');
INSERT INTO `statisticsip` VALUES ('50', '20161130', '127.0.0.1', '1480474654');
INSERT INTO `statisticsip` VALUES ('51', '20161201', '127.0.0.1', '1480557550');
INSERT INTO `statisticsip` VALUES ('52', '20161201', '127.0.0.1', '1480557550');
INSERT INTO `statisticsip` VALUES ('53', '20161205', '127.0.0.1', '1480917845');
INSERT INTO `statisticsip` VALUES ('54', '20161207', '127.0.0.1', '1481081973');
INSERT INTO `statisticsip` VALUES ('55', '20161209', '127.0.0.1', '1481273934');
INSERT INTO `statisticsip` VALUES ('56', '20161214', '127.0.0.1', '1481696621');
INSERT INTO `statisticsip` VALUES ('57', '20161215', '127.0.0.1', '1481792632');
INSERT INTO `statisticsip` VALUES ('58', '20161216', '127.0.0.1', '1481868458');
INSERT INTO `statisticsip` VALUES ('59', '20161217', '127.0.0.1', '1481955403');
INSERT INTO `statisticsip` VALUES ('60', '20161219', '127.0.0.1', '1482133251');
INSERT INTO `statisticsip` VALUES ('61', '20161220', '127.0.0.1', '1482205418');
INSERT INTO `statisticsip` VALUES ('62', '20161220', '88.88.88.88', '1482218180');
INSERT INTO `statisticsip` VALUES ('63', '20161221', '127.0.0.1', '1482313043');
INSERT INTO `statisticsip` VALUES ('64', '20161226', '88.88.88.88', '1482737360');
INSERT INTO `statisticsip` VALUES ('65', '20161226', '127.0.0.1', '1482744661');
INSERT INTO `statisticsip` VALUES ('66', '20161227', '127.0.0.1', '1482809319');
INSERT INTO `statisticsip` VALUES ('67', '20161228', '127.0.0.1', '1482903517');
INSERT INTO `statisticsip` VALUES ('68', '20161229', '127.0.0.1', '1482977808');
INSERT INTO `statisticsip` VALUES ('69', '20170103', '88.88.88.88', '1483432110');
INSERT INTO `statisticsip` VALUES ('70', '20170104', '127.0.0.1', '1483519543');
INSERT INTO `statisticsip` VALUES ('71', '20170106', '127.0.0.1', '1483695792');
INSERT INTO `statisticsip` VALUES ('72', '20170110', '127.0.0.1', '1484029742');
INSERT INTO `statisticsip` VALUES ('73', '20170112', '127.0.0.1', '1484201105');
INSERT INTO `statisticsip` VALUES ('74', '20170116', '127.0.0.1', '1484558568');
INSERT INTO `statisticsip` VALUES ('75', '20170120', '127.0.0.1', '1484894493');
INSERT INTO `statisticsip` VALUES ('76', '20170122', '127.0.0.1', '1485067170');
INSERT INTO `statisticsip` VALUES ('77', '20170123', '127.0.0.1', '1485139856');
INSERT INTO `statisticsip` VALUES ('78', '20170207', '127.0.0.1', '1486435902');
INSERT INTO `statisticsip` VALUES ('79', '20170208', '127.0.0.1', '1486520186');
INSERT INTO `statisticsip` VALUES ('80', '20170209', '127.0.0.1', '1486607596');
INSERT INTO `statisticsip` VALUES ('81', '20170210', '127.0.0.1', '1486693581');
INSERT INTO `statisticsip` VALUES ('82', '20170413', '127.0.0.1', '1492076835');
INSERT INTO `statisticsip` VALUES ('83', '20170424', '127.0.0.1', '1493021198');
INSERT INTO `statisticsip` VALUES ('84', '20170515', '127.0.0.1', '1494837786');
INSERT INTO `statisticsip` VALUES ('85', '20170517', '127.0.0.1', '1494986955');
INSERT INTO `statisticsip` VALUES ('86', '20170525', '127.0.0.1', '1495700933');
INSERT INTO `statisticsip` VALUES ('87', '20170526', '127.0.0.1', '1495765271');
INSERT INTO `statisticsip` VALUES ('88', '20170531', '127.0.0.1', '1496198626');
INSERT INTO `statisticsip` VALUES ('89', '20170601', '127.0.0.1', '1496302946');
INSERT INTO `statisticsip` VALUES ('90', '20170608', '127.0.0.1', '1496906120');
INSERT INTO `statisticsip` VALUES ('91', '20170619', '127.0.0.1', '1497861687');
INSERT INTO `statisticsip` VALUES ('92', '20170830', '127.0.0.1', '1504081384');
INSERT INTO `statisticsip` VALUES ('93', '20170831', '127.0.0.1', '1504143218');
INSERT INTO `statisticsip` VALUES ('94', '20170901', '127.0.0.1', '1504259047');
INSERT INTO `statisticsip` VALUES ('95', '20170914', '127.0.0.1', '1505379959');
INSERT INTO `statisticsip` VALUES ('96', '20170925', '127.0.0.1', '1506311075');
INSERT INTO `statisticsip` VALUES ('97', '20170926', '127.0.0.1', '1506393642');
INSERT INTO `statisticsip` VALUES ('98', '20170928', '127.0.0.1', '1506566499');
INSERT INTO `statisticsip` VALUES ('99', '20170930', '127.0.0.1', '1506751624');
INSERT INTO `statisticsip` VALUES ('100', '20171012', '127.0.0.1', '1507798742');
INSERT INTO `statisticsip` VALUES ('101', '20171013', '127.0.0.1', '1507864415');
INSERT INTO `statisticsip` VALUES ('102', '20171026', '127.0.0.1', '1508986857');
INSERT INTO `statisticsip` VALUES ('103', '20171107', '127.0.0.1', '1510021234');
INSERT INTO `statisticsip` VALUES ('104', '20171114', '127.0.0.1', '1510628623');
INSERT INTO `statisticsip` VALUES ('105', '20171117', '127.0.0.1', '1510887339');
INSERT INTO `statisticsip` VALUES ('106', '20171122', '127.0.0.1', '1511318872');
INSERT INTO `statisticsip` VALUES ('107', '20171207', '127.0.0.1', '1512636304');
INSERT INTO `statisticsip` VALUES ('108', '20171211', '127.0.0.1', '1512960861');
INSERT INTO `statisticsip` VALUES ('109', '20171218', '127.0.0.1', '1513577641');
INSERT INTO `statisticsip` VALUES ('110', '20171226', '127.0.0.1', '1514259419');
INSERT INTO `statisticsip` VALUES ('111', '20171229', '127.0.0.1', '1514516230');
INSERT INTO `statisticsip` VALUES ('112', '20180102', '127.0.0.1', '1514881575');
INSERT INTO `statisticsip` VALUES ('113', '20180103', '127.0.0.1', '1514948056');
INSERT INTO `statisticsip` VALUES ('114', '20180104', '127.0.0.1', '1515032045');
INSERT INTO `statisticsip` VALUES ('115', '20180106', '127.0.0.1', '1515210194');
INSERT INTO `statisticsip` VALUES ('116', '20180108', '127.0.0.1', '1515390820');
INSERT INTO `statisticsip` VALUES ('117', '20180109', '127.0.0.1', '1515468519');
INSERT INTO `statisticsip` VALUES ('118', '20180110', '127.0.0.1', '1515553030');
INSERT INTO `statisticsip` VALUES ('119', '20180111', '127.0.0.1', '1515653028');
INSERT INTO `statisticsip` VALUES ('120', '20180112', '127.0.0.1', '1515726957');
INSERT INTO `statisticsip` VALUES ('121', '20180116', '127.0.0.1', '1516070306');
INSERT INTO `statisticsip` VALUES ('122', '20180117', '127.0.0.1', '1516157275');
INSERT INTO `statisticsip` VALUES ('123', '20180119', '127.0.0.1', '1516349382');
INSERT INTO `statisticsip` VALUES ('124', '20180120', '127.0.0.1', '1516419367');
INSERT INTO `statisticsip` VALUES ('125', '20180123', '127.0.0.1', '1516694264');
INSERT INTO `statisticsip` VALUES ('126', '20180124', '127.0.0.1', '1516774362');
INSERT INTO `statisticsip` VALUES ('127', '20180124', '127.0.0.1', '1516774362');
INSERT INTO `statisticsip` VALUES ('128', '20180201', '127.0.0.1', '1517478597');
INSERT INTO `statisticsip` VALUES ('129', '20180202', '127.0.0.1', '1517541375');
INSERT INTO `statisticsip` VALUES ('130', '20180202', '127.0.0.1', '1517541375');
INSERT INTO `statisticsip` VALUES ('131', '20180222', '127.0.0.1', '1519268096');
INSERT INTO `statisticsip` VALUES ('132', '20180223', '127.0.0.1', '1519353877');
INSERT INTO `statisticsip` VALUES ('133', '20180302', '127.0.0.1', '1519961086');
INSERT INTO `statisticsip` VALUES ('134', '20180305', '127.0.0.1', '1520219141');
INSERT INTO `statisticsip` VALUES ('135', '20180306', '127.0.0.1', '1520324463');
INSERT INTO `statisticsip` VALUES ('136', '20180307', '127.0.0.1', '1520416355');
INSERT INTO `statisticsip` VALUES ('137', '20180308', '127.0.0.1', '1520474245');
INSERT INTO `statisticsip` VALUES ('138', '20180309', '127.0.0.1', '1520583171');

-- ----------------------------
-- Table structure for `type`
-- ----------------------------
DROP TABLE IF EXISTS `type`;
CREATE TABLE `type` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `parent_id` int(11) NOT NULL DEFAULT '0',
  `order` tinyint(3) NOT NULL DEFAULT '50',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of type
-- ----------------------------
INSERT INTO `type` VALUES ('1', 'php', '0', '100');
INSERT INTO `type` VALUES ('2', 'java', '0', '100');
INSERT INTO `type` VALUES ('3', 'linux', '0', '100');
INSERT INTO `type` VALUES ('4', 'thinkphp', '0', '100');
INSERT INTO `type` VALUES ('5', 'yii', '1', '100');
INSERT INTO `type` VALUES ('6', 'spring', '2', '100');
INSERT INTO `type` VALUES ('7', 'maven', '2', '100');
INSERT INTO `type` VALUES ('8', 'test', '4', '100');
INSERT INTO `type` VALUES ('13', 'Erroneous solution', '0', '100');
INSERT INTO `type` VALUES ('12', 'Mysql', '0', '100');
INSERT INTO `type` VALUES ('14', 'Other', '0', '100');
