[ 2016-11-29T17:45:09+08:00 ] 127.0.0.1 /admin
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.057004s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.002000s ]

[ 2016-11-29T17:45:10+08:00 ] 127.0.0.1 /admin/login.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.001000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001000s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.018001s ]
INFO: [ template_filter ] --END-- [ RunTime:0.018001s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.150008s ]
INFO: [ view_parse ] --END-- [ RunTime:0.150008s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.010001s ]
INFO: [ view_filter ] --END-- [ RunTime:0.010001s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.022001s ]
INFO: [ app_end ] --END-- [ RunTime:0.022001s ]

[ 2016-11-29T17:45:19+08:00 ] 127.0.0.1 /admin/login/dologin.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.001000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.002000s ]
NOTIC: [2048] Non-static method Admin\Model\AdminModel::adminLogin() should not be called statically, assuming $this from incompatible context D:\WWW\tools\Application\Admin\Controller\LoginController.class.php 第 36 行.
SQL: SHOW COLUMNS FROM `admin` [ RunTime:0.1190s ]
SQL: SELECT * FROM `admin` WHERE `user` = 'admin' LIMIT 1   [ RunTime:0.0160s ]

[ 2016-11-29T17:45:21+08:00 ] 127.0.0.1 /admin/login/dologin.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.001000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002001s ]
INFO: [ app_begin ] --END-- [ RunTime:0.002001s ]
NOTIC: [2048] Non-static method Admin\Model\AdminModel::adminLogin() should not be called statically, assuming $this from incompatible context D:\WWW\tools\Application\Admin\Controller\LoginController.class.php 第 36 行.
SQL: SHOW COLUMNS FROM `admin` [ RunTime:0.0100s ]
SQL: SELECT * FROM `admin` WHERE `user` = 'admin' LIMIT 1   [ RunTime:0.0010s ]

[ 2016-11-29T17:45:21+08:00 ] 127.0.0.1 /admin/index.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.000000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000000s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.119007s ]
INFO: [ view_parse ] --END-- [ RunTime:0.119007s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001000s ]
INFO: [ app_end ] --END-- [ RunTime:0.002000s ]

[ 2016-11-29T17:45:21+08:00 ] 127.0.0.1 /admin/index.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.001001s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000000s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.001000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.001000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.016001s ]
INFO: [ view_parse ] --END-- [ RunTime:0.016001s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001000s ]
INFO: [ app_end ] --END-- [ RunTime:0.001000s ]

[ 2016-11-29T17:45:24+08:00 ] 127.0.0.1 /admin/index/lists.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.001000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001000s ]
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::save() should be compatible with Think\Model::save($data = '', $options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::delete() should be compatible with Think\Model::delete($options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
SQL: SHOW COLUMNS FROM `article` [ RunTime:0.0120s ]
NOTIC: [8] Undefined variable: arr D:\WWW\tools\Application\Admin\Controller\IndexController.class.php 第 96 行.
SQL: SELECT * FROM `article` ORDER BY id desc LIMIT 0,10   [ RunTime:0.0550s ]
SQL: SELECT COUNT(*) AS tp_count FROM `article` LIMIT 1   [ RunTime:0.0770s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.001000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.046003s ]
INFO: [ view_parse ] --END-- [ RunTime:0.046003s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001000s ]
INFO: [ app_end ] --END-- [ RunTime:0.001000s ]

[ 2016-11-29T17:45:26+08:00 ] 127.0.0.1 /admin/index/article.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.001000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000000s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.023001s ]
INFO: [ view_parse ] --END-- [ RunTime:0.023001s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000000s ]
INFO: [ app_end ] --END-- [ RunTime:0.000000s ]

[ 2016-11-29T17:45:38+08:00 ] 127.0.0.1 /admin/index/SaveArticle.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.000000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001000s ]
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::save() should be compatible with Think\Model::save($data = '', $options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::delete() should be compatible with Think\Model::delete($options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
SQL: SHOW COLUMNS FROM `article` [ RunTime:0.0120s ]
SQL: INSERT INTO `article` (`type`,`title`,`keyword`,`author`,`content`,`createtime`) VALUES ('0','正则表达式 - 语法','正则表达式','小兔','&lt;h1 style=&quot;font-size:2.1em;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	正则表达式 -&amp;nbsp;&lt;span class=&quot;color_h1&quot; style=&quot;color:#64854C;&quot;&gt;语法&lt;/span&gt;
&lt;/h1&gt;
&lt;div class=&quot;tutintro&quot; style=&quot;border:0px;margin:0px;padding:0px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	&lt;p style=&quot;font-size:14px;font-family:&amp;quot;&quot;&gt;
		正则表达式(regular expression)描述了一种字符串匹配的模式，可以用来检查一个串是否含有某种子串、将匹配的子串做替换或者从某个串中取出符合某个条件的子串等。
	&lt;/p&gt;
	&lt;ul&gt;
		&lt;li style=&quot;font-size:1em;&quot;&gt;
			列目录时，　dir *.txt或ls *.txt中的*.txt就不是一个正则表达式,因为这里*与正则式的*的含义是不同的。
		&lt;/li&gt;
		&lt;li style=&quot;font-size:1em;&quot;&gt;
			构造正则表达式的方法和创建数学表达式的方法一样。也就是用多种元字符与运算符可以将小的表达式结合在一起来创建更大的表达式。正则表达式的组件可以是单个的字符、字符集合、字符范围、字符间的选择或者所有这些组件的任意组合。
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;p style=&quot;font-size:14px;font-family:&amp;quot;&quot;&gt;
		正则表达式是由普通字符（例如字符 a 到 z）以及特殊字符（称为&quot;元字符&quot;）组成的文字模式。模式描述在搜索文本时要匹配的一个或多个字符串。正则表达式作为一个模板，将某个字符模式与所搜索的字符串进行匹配。
	&lt;/p&gt;
&lt;/div&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	普通字符
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	普通字符包括没有显式指定为元字符的所有可打印和不可打印字符。这包括所有大写和小写字母、所有数字、所有标点符号和一些其他符号。
&lt;/p&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	非打印字符
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	非打印字符也可以是正则表达式的组成部分。下表列出了表示非打印字符的转义序列：
&lt;/p&gt;
&lt;table class=&quot;reference notranslate&quot; style=&quot;border:0px;margin:4px 0px;padding:0px;width:729px;color:#333333;font-family:&amp;quot;font-size:12px;background-color:#FFFFFF;&quot;&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;th width=&quot;20%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				字符
			&lt;/th&gt;
			&lt;th width=&quot;80%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				描述
			&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				cx
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配由x指明的控制字符。例如， cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 \'c\' 字符。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				f
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个换页符。等价于 x0c 和 cL。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				n
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个换行符。等价于 x0a 和 cJ。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				r
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个回车符。等价于 x0d 和 cM。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				s
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ fnrtv]。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				S
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配任何非空白字符。等价于 [^ fnrtv]。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				t
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个制表符。等价于 x09 和 cI。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				v
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个垂直制表符。等价于 x0b 和 cK。
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	特殊字符
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	所谓特殊字符，就是一些有特殊含义的字符，如上面说的&quot;*.txt&quot;中的*，简单的说就是表示任何字符串的意思。如果要查找文件名中有*的文件，则需要对*进行转义，即在其前加一个。ls *.txt。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	许多元字符要求在试图匹配它们时特别对待。若要匹配这些特殊字符，必须首先使字符&quot;转义&quot;，即，将反斜杠字符 () 放在它们前面。下表列出了正则表达式中的特殊字符：
&lt;/p&gt;
&lt;table class=&quot;reference notranslate&quot; style=&quot;border:0px;margin:4px 0px;padding:0px;width:729px;color:#333333;font-family:&amp;quot;font-size:12px;background-color:#FFFFFF;&quot;&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;th width=&quot;20%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				特别字符
			&lt;/th&gt;
			&lt;th width=&quot;80%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				描述
			&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				$
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 \'n\' 或 \'r\'。要匹配 $ 字符本身，请使用 $。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				( )
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 ( 和 )。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				*
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 *。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				+
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 +。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				.
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配除换行符 n 之外的任何单字符。要匹配 . ，请使用 . 。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				[
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				标记一个中括号表达式的开始。要匹配 [，请使用 [。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				?
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 ?。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， \'n\' 匹配字符 \'n\'。\'n\' 匹配换行符。序列 \'\' 匹配 &quot;&quot;，而 \'(\' 则匹配 &quot;(&quot;。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				^
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合。要匹配 ^ 字符本身，请使用 ^。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				{
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				标记限定符表达式的开始。要匹配 {，请使用 {。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				|
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				指明两项之间的一个选择。要匹配 |，请使用 |。
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	限定符
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有*或+或?或{n}或{n,}或{n,m}共6种。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	正则表达式的限定符有：
&lt;/p&gt;
&lt;table class=&quot;reference notranslate&quot; style=&quot;border:0px;margin:4px 0px;padding:0px;width:729px;color:#333333;font-family:&amp;quot;font-size:12px;background-color:#FFFFFF;&quot;&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;th width=&quot;20%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				字符
			&lt;/th&gt;
			&lt;th width=&quot;80%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				描述
			&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				*
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式零次或多次。例如，zo* 能匹配 &quot;z&quot; 以及 &quot;zoo&quot;。* 等价于{0,}。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				+
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式一次或多次。例如，\'zo+\' 能匹配 &quot;zo&quot; 以及 &quot;zoo&quot;，但不能匹配 &quot;z&quot;。+ 等价于 {1,}。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				?
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式零次或一次。例如，&quot;do(es)?&quot; 可以匹配 &quot;do&quot; 或 &quot;does&quot; 中的&quot;do&quot; 。? 等价于 {0,1}。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				{n}
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				n 是一个非负整数。匹配确定的 n 次。例如，\'o{2}\' 不能匹配 &quot;Bob&quot; 中的 \'o\'，但是能匹配 &quot;food&quot; 中的两个 o。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				{n,}
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				n 是一个非负整数。至少匹配n 次。例如，\'o{2,}\' 不能匹配 &quot;Bob&quot; 中的 \'o\'，但能匹配 &quot;foooood&quot; 中的所有 o。\'o{1,}\' 等价于 \'o+\'。\'o{0,}\' 则等价于 \'o*\'。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				{n,m}
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				m 和 n 均为非负整数，其中n &amp;lt;= m。最少匹配 n 次且最多匹配 m 次。例如，&quot;o{1,3}&quot; 将匹配 &quot;fooooood&quot; 中的前三个 o。\'o{0,1}\' 等价于 \'o?\'。请注意在逗号和两个数之间不能有空格。
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	由于章节编号在大的输入文档中会很可能超过九，所以您需要一种方式来处理两位或三位章节编号。限定符给您这种能力。下面的正则表达式匹配编号为任何位数的章节标题：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Chapter [1-9][0-9]*/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	请注意，限定符出现在范围表达式之后。因此，它应用于整个范围表达式，在本例中，只指定从 0 到 9 的数字（包括 0 和 9）。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	这里不使用 + 限定符，因为在第二个位置或后面的位置不一定需要有一个数字。也不使用？字符，因为它将章节编号限制到只有两位数。您需要至少匹配 Chapter 和空格字符后面的一个数字。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	如果您知道章节编号被限制为只有 99 章，可以使用下面的表达式来至少指定一位但至多两位数字。
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Chapter [0-9]{1,2}/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	上面的表达式的缺点是，大于 99 的章节编号仍只匹配开头两位数字。另一个缺点是 Chapter 0 也将匹配。只匹配两位数字的更好的表达式如下：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Chapter [1-9][0-9]?/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	或
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Chapter [1-9][0-9]{0,1}/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&lt;strong&gt;*、+和?限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个?就可以实现非贪婪或最小匹配。&lt;/strong&gt;
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	例如，您可能搜索 HTML 文档，以查找括在 H1 标记内的章节标题。该文本在您的文档中如下：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;H1&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;Chapter 1 – Introduction to Regular Expressions&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/H1&amp;gt;&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	下面的表达式匹配从开始小于符号 (&amp;lt;) 到关闭 H1 标记的大于符号 (&amp;gt;) 之间的所有内容。
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/&amp;lt;.*&amp;gt;/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	如果您只需要匹配开始 H1 标记，下面的&quot;非贪心&quot;表达式只匹配 &amp;lt;H1&amp;gt;。
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/&amp;lt;.*?&amp;gt;/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	通过在 *、+ 或 ? 限定符之后放置 ?，该表达式从&quot;贪心&quot;表达式转换为&quot;非贪心&quot;表达式或者最小匹配。
&lt;/p&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	定位符
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	定位符使您能够将正则表达式固定到行首或行尾。它们还使您能够创建这样的正则表达式，这些正则表达式出现在一个单词内、在一个单词的开头或者一个单词的结尾。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	定位符用来描述字符串或单词的边界，^和$分别指字符串的开始与结束，b描述单词的前或后边界，B表示非单词边界。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	正则表达式的限定符有：
&lt;/p&gt;
&lt;table class=&quot;reference notranslate&quot; style=&quot;border:0px;margin:4px 0px;padding:0px;width:729px;color:#333333;font-family:&amp;quot;font-size:12px;background-color:#FFFFFF;&quot;&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;th width=&quot;20%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				字符
			&lt;/th&gt;
			&lt;th width=&quot;80%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				描述
			&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				^
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配输入字符串开始的位置。如果设置了 RegExp 对象的 Multiline 属性，^ 还会与 n 或 r 之后的位置匹配。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				$
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配输入字符串结尾的位置。如果设置了 RegExp 对象的 Multiline 属性，$ 还会与 n 或 r 之前的位置匹配。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				b
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个字边界，即字与空格间的位置。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				B
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				非字边界匹配。
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&lt;strong&gt;注意&lt;/strong&gt;：不能将限定符与定位点一起使用。由于在紧靠换行或者字边界的前面或后面不能有一个以上位置，因此不允许诸如 ^* 之类的表达式。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	若要匹配一行文本开始处的文本，请在正则表达式的开始使用 ^ 字符。不要将 ^ 的这种用法与中括号表达式内的用法混淆。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	若要匹配一行文本的结束处的文本，请在正则表达式的结束处使用 $ 字符。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	若要在搜索章节标题时使用定位点，下面的正则表达式匹配一个章节标题，该标题只包含两个尾随数字，并且出现在行首：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/^Chapter [1-9][0-9]{0,1}/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	真正的章节标题不仅出现行的开始处，而且它还是该行中仅有的文本。它即出现在行首又出现在同一行的结尾。下面的表达式能确保指定的匹配只匹配章节而不匹配交叉引用。通过创建只匹配一行文本的开始和结尾的正则表达式，就可做到这一点。
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/^Chapter [1-9][0-9]{0,1}$/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	匹配字边界稍有不同，但向正则表达式添加了很重要的能力。字边界是单词和空格之间的位置。非字边界是任何其他位置。下面的表达式匹配单词 Chapter 的开头三个字符，因为这三个字符出现字边界后面：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/bCha/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	b 字符的位置是非常重要的。如果它位于要匹配的字符串的开始，它在单词的开始处查找匹配项。如果它位于字符串的结尾，它在单词的结尾处查找匹配项。例如，下面的表达式匹配单词 Chapter 中的字符串 ter，因为它出现在字边界的前面：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/terb/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	下面的表达式匹配 Chapter 中的字符串 apt，但不匹配 aptitude 中的字符串 apt：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Bapt/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	字符串 apt 出现在单词 Chapter 中的非字边界处，但出现在单词 aptitude 中的字边界处。对于 B 非字边界运算符，位置并不重要，因为匹配不关心究竟是单词的开头还是结尾。
&lt;/p&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	选择
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	用圆括号将所有选择项括起来，相邻的选择项之间用|分隔。但用圆括号会有一个副作用，是相关的匹配会被缓存，此时可用?:放在第一个选项前来消除这种副作用。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	其中?:是非捕获元之一，还有两个非捕获元是?=和?!，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。
&lt;/p&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	反向引用
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	对一个正则表达式模式或部分模式两边添加圆括号将导致相关匹配存储到一个临时缓冲区中，所捕获的每个子匹配都按照在正则表达式模式中从左到右出现的顺序存储。缓冲区编号从 1 开始，最多可存储 99 个捕获的子表达式。每个缓冲区都可以使用 \'n\' 访问，其中 n 为一个标识特定缓冲区的一位或两位十进制数。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	可以使用非捕获元字符 \'?:\'、\'?=\' 或 \'?!\' 来重写捕获，忽略对相关匹配的保存。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	反向引用的最简单的、最有用的应用之一，是提供查找文本中两个相同的相邻单词的匹配项的能力。以下面的句子为例：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;Is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the cost of of gasoline going up up&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	上面的句子很显然有多个重复的单词。如果能设计一种方法定位该句子，而不必查找每个单词的重复出现，那该有多好。下面的正则表达式使用单个子表达式来实现这一点：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/b([a-z]+) 1b/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;gi&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	捕获的表达式，正如 [a-z]+ 指定的，包括一个或多个字母。正则表达式的第二部分是对以前捕获的子匹配项的引用，即，单词的第二个匹配项正好由括号表达式匹配。1 指定第一个子匹配项。字边界元字符确保只检测整个单词。否则，诸如&quot;is issued&quot;或&quot;this is&quot;之类的词组将不能正确地被此表达式识别。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	正则表达式后面的全局标记 (g) 指示，将该表达式应用到输入字符串中能够查找到的尽可能多的匹配。表达式的结尾处的不区分大小写 (i) 标记指定不区分大小写。多行标记指定换行符的两边可能出现潜在的匹配。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	反向引用还可以将通用资源指示符 (URI) 分解为其组件。假定您想将下面的 URI 分解为协议（ftp、http 等等）、域地址和页/路径：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;pln&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//www.runoob.com:80/html/html-tutorial.html&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	下面的正则表达式提供该功能：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/(w+)://([^/:]+)(:d*)?([^# ]*)/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	第一个括号子表达式捕获 Web 地址的协议部分。该子表达式匹配在冒号和两个正斜杠前面的任何单词。第二个括号子表达式捕获地址的域地址部分。子表达式匹配 / 和 : 之外的一个或多个字符。第三个括号子表达式捕获端口号（如果指定了的话）。该子表达式匹配冒号后面的零个或多个数字。只能重复一次该子表达式。最后，第四个括号子表达式捕获 Web 地址指定的路径和/或页信息。该子表达式能匹配不包括 # 或空格字符的任何字符序列。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	将正则表达式应用到上面的 URI，各子匹配项包含下面的内容：
&lt;/p&gt;
&lt;ul style=&quot;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	&lt;li style=&quot;font-size:1em;&quot;&gt;
		第一个括号子表达式包含&quot;http&quot;
	&lt;/li&gt;
	&lt;li style=&quot;font-size:1em;&quot;&gt;
		第二个括号子表达式包含&quot;www.runoob.com&quot;
	&lt;/li&gt;
	&lt;li style=&quot;font-size:1em;&quot;&gt;
		第三个括号子表达式包含&quot;:80&quot;
	&lt;/li&gt;
	&lt;li style=&quot;font-size:1em;&quot;&gt;
		第四个括号子表达式包含&quot;/html/html-tutorial.html&quot;
	&lt;/li&gt;
&lt;/ul&gt;','1480412737') [ RunTime:0.1150s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.043002s ]
INFO: [ view_parse ] --END-- [ RunTime:0.043002s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.004000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.004000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.005001s ]
INFO: [ app_end ] --END-- [ RunTime:0.005001s ]

[ 2016-11-29T17:45:39+08:00 ] 127.0.0.1 /admin/index/article.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.000000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.003000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.003000s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013001s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013001s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.003000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.003000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.002000s ]
INFO: [ app_end ] --END-- [ RunTime:0.002000s ]

[ 2016-11-29T17:45:42+08:00 ] 127.0.0.1 /admin/index/lists.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.001000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002001s ]
INFO: [ app_begin ] --END-- [ RunTime:0.002001s ]
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::save() should be compatible with Think\Model::save($data = '', $options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::delete() should be compatible with Think\Model::delete($options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
SQL: SHOW COLUMNS FROM `article` [ RunTime:0.0110s ]
NOTIC: [8] Undefined variable: arr D:\WWW\tools\Application\Admin\Controller\IndexController.class.php 第 96 行.
SQL: SELECT * FROM `article` ORDER BY id desc LIMIT 0,10   [ RunTime:0.0040s ]
SQL: SELECT COUNT(*) AS tp_count FROM `article` LIMIT 1   [ RunTime:0.0010s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.001000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.018001s ]
INFO: [ view_parse ] --END-- [ RunTime:0.018001s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.003000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.003000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.005000s ]
INFO: [ app_end ] --END-- [ RunTime:0.005000s ]

[ 2016-11-29T17:51:55+08:00 ] 127.0.0.1 /admin/index/article/id/27.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.001000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001000s ]
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::save() should be compatible with Think\Model::save($data = '', $options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::delete() should be compatible with Think\Model::delete($options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
SQL: SHOW COLUMNS FROM `article` [ RunTime:0.0100s ]
SQL: SELECT * FROM `article` WHERE `id` = 27 LIMIT 1   [ RunTime:0.0010s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012001s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012001s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001000s ]
INFO: [ app_end ] --END-- [ RunTime:0.001000s ]

[ 2016-11-29T17:52:43+08:00 ] 127.0.0.1 /admin/index/SaveArticle.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.001000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001000s ]
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::save() should be compatible with Think\Model::save($data = '', $options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::delete() should be compatible with Think\Model::delete($options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
SQL: SHOW COLUMNS FROM `article` [ RunTime:0.0440s ]
SQL: UPDATE `article` SET `type`='0',`title`='正则表达式 - 语法',`keyword`='正则表达式',`author`='小兔',`content`='&lt;h1 style=&quot;font-size:2.1em;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	正则表达式 -&amp;nbsp;&lt;span class=&quot;color_h1&quot; style=&quot;color:#64854C;&quot;&gt;语法&lt;/span&gt; 
&lt;/h1&gt;
&lt;div class=&quot;tutintro&quot; style=&quot;border:0px;margin:0px;padding:0px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	&lt;p style=&quot;font-size:14px;font-family:&amp;quot;&quot;&gt;
		正则表达式(regular expression)描述了一种字符串匹配的模式，可以用来检查一个串是否含有某种子串、将匹配的子串做替换或者从某个串中取出符合某个条件的子串等。
	&lt;/p&gt;
	&lt;ul&gt;
		&lt;li style=&quot;font-size:1em;&quot;&gt;
			列目录时，　dir *.txt或ls *.txt中的*.txt就不是一个正则表达式,因为这里*与正则式的*的含义是不同的。
		&lt;/li&gt;
		&lt;li style=&quot;font-size:1em;&quot;&gt;
			构造正则表达式的方法和创建数学表达式的方法一样。也就是用多种元字符与运算符可以将小的表达式结合在一起来创建更大的表达式。正则表达式的组件可以是单个的字符、字符集合、字符范围、字符间的选择或者所有这些组件的任意组合。
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;p style=&quot;font-size:14px;font-family:&amp;quot;&quot;&gt;
		正则表达式是由普通字符（例如字符 a 到 z）以及特殊字符（称为&quot;元字符&quot;）组成的文字模式。模式描述在搜索文本时要匹配的一个或多个字符串。正则表达式作为一个模板，将某个字符模式与所搜索的字符串进行匹配。
	&lt;/p&gt;
&lt;/div&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	普通字符
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	普通字符包括没有显式指定为元字符的所有可打印和不可打印字符。这包括所有大写和小写字母、所有数字、所有标点符号和一些其他符号。
&lt;/p&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	非打印字符
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	非打印字符也可以是正则表达式的组成部分。下表列出了表示非打印字符的转义序列：
&lt;/p&gt;
&lt;table class=&quot;reference notranslate&quot; style=&quot;border:0px;margin:4px 0px;padding:0px;color:#333333;font-family:&amp;quot;font-size:12px;background-color:#FFFFFF;&quot;&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;th width=&quot;20%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				字符
			&lt;/th&gt;
			&lt;th width=&quot;80%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				描述
			&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				cx
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配由x指明的控制字符。例如， cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 \'c\' 字符。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				f
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个换页符。等价于 x0c 和 cL。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				n
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个换行符。等价于 x0a 和 cJ。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				r
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个回车符。等价于 x0d 和 cM。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				s
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ fnrtv]。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				S
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配任何非空白字符。等价于 [^ fnrtv]。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				t
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个制表符。等价于 x09 和 cI。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				v
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个垂直制表符。等价于 x0b 和 cK。
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	特殊字符
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	所谓特殊字符，就是一些有特殊含义的字符，如上面说的&quot;*.txt&quot;中的*，简单的说就是表示任何字符串的意思。如果要查找文件名中有*的文件，则需要对*进行转义，即在其前加一个。ls *.txt。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	许多元字符要求在试图匹配它们时特别对待。若要匹配这些特殊字符，必须首先使字符&quot;转义&quot;，即，将反斜杠字符 () 放在它们前面。下表列出了正则表达式中的特殊字符：
&lt;/p&gt;
&lt;table class=&quot;reference notranslate&quot; style=&quot;border:0px;margin:4px 0px;padding:0px;color:#333333;font-family:&amp;quot;font-size:12px;background-color:#FFFFFF;&quot;&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;th width=&quot;20%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				特别字符
			&lt;/th&gt;
			&lt;th width=&quot;80%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				描述
			&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				$
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 \'n\' 或 \'r\'。要匹配 $ 字符本身，请使用 $。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				( )
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 ( 和 )。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				*
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 *。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				+
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 +。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				.
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配除换行符 n 之外的任何单字符。要匹配 . ，请使用 . 。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				[
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				标记一个中括号表达式的开始。要匹配 [，请使用 [。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				?
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 ?。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， \'n\' 匹配字符 \'n\'。\'n\' 匹配换行符。序列 \'\' 匹配 &quot;&quot;，而 \'(\' 则匹配 &quot;(&quot;。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				^
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合。要匹配 ^ 字符本身，请使用 ^。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				{
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				标记限定符表达式的开始。要匹配 {，请使用 {。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				|
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				指明两项之间的一个选择。要匹配 |，请使用 |。
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	限定符
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有*或+或?或{n}或{n,}或{n,m}共6种。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	正则表达式的限定符有：
&lt;/p&gt;
&lt;table class=&quot;reference notranslate&quot; style=&quot;border:0px;margin:4px 0px;padding:0px;color:#333333;font-family:&amp;quot;font-size:12px;background-color:#FFFFFF;&quot;&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;th width=&quot;20%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				字符
			&lt;/th&gt;
			&lt;th width=&quot;80%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				描述
			&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				*
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式零次或多次。例如，zo* 能匹配 &quot;z&quot; 以及 &quot;zoo&quot;。* 等价于{0,}。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				+
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式一次或多次。例如，\'zo+\' 能匹配 &quot;zo&quot; 以及 &quot;zoo&quot;，但不能匹配 &quot;z&quot;。+ 等价于 {1,}。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				?
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式零次或一次。例如，&quot;do(es)?&quot; 可以匹配 &quot;do&quot; 或 &quot;does&quot; 中的&quot;do&quot; 。? 等价于 {0,1}。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				{n}
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				n 是一个非负整数。匹配确定的 n 次。例如，\'o{2}\' 不能匹配 &quot;Bob&quot; 中的 \'o\'，但是能匹配 &quot;food&quot; 中的两个 o。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				{n,}
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				n 是一个非负整数。至少匹配n 次。例如，\'o{2,}\' 不能匹配 &quot;Bob&quot; 中的 \'o\'，但能匹配 &quot;foooood&quot; 中的所有 o。\'o{1,}\' 等价于 \'o+\'。\'o{0,}\' 则等价于 \'o*\'。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				{n,m}
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				m 和 n 均为非负整数，其中n &amp;lt;= m。最少匹配 n 次且最多匹配 m 次。例如，&quot;o{1,3}&quot; 将匹配 &quot;fooooood&quot; 中的前三个 o。\'o{0,1}\' 等价于 \'o?\'。请注意在逗号和两个数之间不能有空格。
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	由于章节编号在大的输入文档中会很可能超过九，所以您需要一种方式来处理两位或三位章节编号。限定符给您这种能力。下面的正则表达式匹配编号为任何位数的章节标题：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Chapter [1-9][0-9]*/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	请注意，限定符出现在范围表达式之后。因此，它应用于整个范围表达式，在本例中，只指定从 0 到 9 的数字（包括 0 和 9）。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	这里不使用 + 限定符，因为在第二个位置或后面的位置不一定需要有一个数字。也不使用？字符，因为它将章节编号限制到只有两位数。您需要至少匹配 Chapter 和空格字符后面的一个数字。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	如果您知道章节编号被限制为只有 99 章，可以使用下面的表达式来至少指定一位但至多两位数字。
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Chapter [0-9]{1,2}/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	上面的表达式的缺点是，大于 99 的章节编号仍只匹配开头两位数字。另一个缺点是 Chapter 0 也将匹配。只匹配两位数字的更好的表达式如下：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Chapter [1-9][0-9]?/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	或
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Chapter [1-9][0-9]{0,1}/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&lt;strong&gt;*、+和?限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个?就可以实现非贪婪或最小匹配。&lt;/strong&gt; 
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	例如，您可能搜索 HTML 文档，以查找括在 H1 标记内的章节标题。该文本在您的文档中如下：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;H1&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;Chapter 1 – Introduction to Regular Expressions&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/H1&amp;gt;&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	下面的表达式匹配从开始小于符号 (&amp;lt;) 到关闭 H1 标记的大于符号 (&amp;gt;) 之间的所有内容。
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/&amp;lt;.*&amp;gt;/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	如果您只需要匹配开始 H1 标记，下面的&quot;非贪心&quot;表达式只匹配 &amp;lt;H1&amp;gt;。
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/&amp;lt;.*?&amp;gt;/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	通过在 *、+ 或 ? 限定符之后放置 ?，该表达式从&quot;贪心&quot;表达式转换为&quot;非贪心&quot;表达式或者最小匹配。
&lt;/p&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	定位符
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	定位符使您能够将正则表达式固定到行首或行尾。它们还使您能够创建这样的正则表达式，这些正则表达式出现在一个单词内、在一个单词的开头或者一个单词的结尾。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	定位符用来描述字符串或单词的边界，^和$分别指字符串的开始与结束，b描述单词的前或后边界，B表示非单词边界。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	正则表达式的限定符有：
&lt;/p&gt;
&lt;table class=&quot;reference notranslate&quot; style=&quot;border:0px;margin:4px 0px;padding:0px;color:#333333;font-family:&amp;quot;font-size:12px;background-color:#FFFFFF;&quot;&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;th width=&quot;20%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				字符
			&lt;/th&gt;
			&lt;th width=&quot;80%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				描述
			&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				^
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配输入字符串开始的位置。如果设置了 RegExp 对象的 Multiline 属性，^ 还会与 n 或 r 之后的位置匹配。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				$
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配输入字符串结尾的位置。如果设置了 RegExp 对象的 Multiline 属性，$ 还会与 n 或 r 之前的位置匹配。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				b
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个字边界，即字与空格间的位置。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				B
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				非字边界匹配。
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&lt;strong&gt;注意&lt;/strong&gt;：不能将限定符与定位点一起使用。由于在紧靠换行或者字边界的前面或后面不能有一个以上位置，因此不允许诸如 ^* 之类的表达式。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	若要匹配一行文本开始处的文本，请在正则表达式的开始使用 ^ 字符。不要将 ^ 的这种用法与中括号表达式内的用法混淆。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	若要匹配一行文本的结束处的文本，请在正则表达式的结束处使用 $ 字符。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	若要在搜索章节标题时使用定位点，下面的正则表达式匹配一个章节标题，该标题只包含两个尾随数字，并且出现在行首：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/^Chapter [1-9][0-9]{0,1}/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	真正的章节标题不仅出现行的开始处，而且它还是该行中仅有的文本。它即出现在行首又出现在同一行的结尾。下面的表达式能确保指定的匹配只匹配章节而不匹配交叉引用。通过创建只匹配一行文本的开始和结尾的正则表达式，就可做到这一点。
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/^Chapter [1-9][0-9]{0,1}$/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	匹配字边界稍有不同，但向正则表达式添加了很重要的能力。字边界是单词和空格之间的位置。非字边界是任何其他位置。下面的表达式匹配单词 Chapter 的开头三个字符，因为这三个字符出现字边界后面：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/bCha/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	b 字符的位置是非常重要的。如果它位于要匹配的字符串的开始，它在单词的开始处查找匹配项。如果它位于字符串的结尾，它在单词的结尾处查找匹配项。例如，下面的表达式匹配单词 Chapter 中的字符串 ter，因为它出现在字边界的前面：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/terb/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	下面的表达式匹配 Chapter 中的字符串 apt，但不匹配 aptitude 中的字符串 apt：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Bapt/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	字符串 apt 出现在单词 Chapter 中的非字边界处，但出现在单词 aptitude 中的字边界处。对于 B 非字边界运算符，位置并不重要，因为匹配不关心究竟是单词的开头还是结尾。
&lt;/p&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	选择
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	用圆括号将所有选择项括起来，相邻的选择项之间用|分隔。但用圆括号会有一个副作用，是相关的匹配会被缓存，此时可用?:放在第一个选项前来消除这种副作用。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	其中?:是非捕获元之一，还有两个非捕获元是?=和?!，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。
&lt;/p&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	反向引用
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	对一个正则表达式模式或部分模式两边添加圆括号将导致相关匹配存储到一个临时缓冲区中，所捕获的每个子匹配都按照在正则表达式模式中从左到右出现的顺序存储。缓冲区编号从 1 开始，最多可存储 99 个捕获的子表达式。每个缓冲区都可以使用 \'n\' 访问，其中 n 为一个标识特定缓冲区的一位或两位十进制数。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	可以使用非捕获元字符 \'?:\'、\'?=\' 或 \'?!\' 来重写捕获，忽略对相关匹配的保存。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	反向引用的最简单的、最有用的应用之一，是提供查找文本中两个相同的相邻单词的匹配项的能力。以下面的句子为例：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;Is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the cost of of gasoline going up up&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	上面的句子很显然有多个重复的单词。如果能设计一种方法定位该句子，而不必查找每个单词的重复出现，那该有多好。下面的正则表达式使用单个子表达式来实现这一点：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/b([a-z]+) 1b/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;gi&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	捕获的表达式，正如 [a-z]+ 指定的，包括一个或多个字母。正则表达式的第二部分是对以前捕获的子匹配项的引用，即，单词的第二个匹配项正好由括号表达式匹配。1 指定第一个子匹配项。字边界元字符确保只检测整个单词。否则，诸如&quot;is issued&quot;或&quot;this is&quot;之类的词组将不能正确地被此表达式识别。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	正则表达式后面的全局标记 (g) 指示，将该表达式应用到输入字符串中能够查找到的尽可能多的匹配。表达式的结尾处的不区分大小写 (i) 标记指定不区分大小写。多行标记指定换行符的两边可能出现潜在的匹配。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	反向引用还可以将通用资源指示符 (URI) 分解为其组件。假定您想将下面的 URI 分解为协议（ftp、http 等等）、域地址和页/路径：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;pln&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//www.runoob.com:80/html/html-tutorial.html&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	下面的正则表达式提供该功能：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/(w+)://([^/:]+)(:d*)?([^# ]*)/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	第一个括号子表达式捕获 Web 地址的协议部分。该子表达式匹配在冒号和两个正斜杠前面的任何单词。第二个括号子表达式捕获地址的域地址部分。子表达式匹配 / 和 : 之外的一个或多个字符。第三个括号子表达式捕获端口号（如果指定了的话）。该子表达式匹配冒号后面的零个或多个数字。只能重复一次该子表达式。最后，第四个括号子表达式捕获 Web 地址指定的路径和/或页信息。该子表达式能匹配不包括 # 或空格字符的任何字符序列。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	将正则表达式应用到上面的 URI，各子匹配项包含下面的内容：
&lt;/p&gt;
&lt;ul style=&quot;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	&lt;li style=&quot;font-size:1em;&quot;&gt;
		第一个括号子表达式包含&quot;http&quot;
	&lt;/li&gt;
	&lt;li style=&quot;font-size:1em;&quot;&gt;
		第二个括号子表达式包含&quot;www.runoob.com&quot;
	&lt;/li&gt;
	&lt;li style=&quot;font-size:1em;&quot;&gt;
		第三个括号子表达式包含&quot;:80&quot;
	&lt;/li&gt;
	&lt;li style=&quot;font-size:1em;&quot;&gt;
		第四个括号子表达式包含&quot;/html/html-tutorial.html&quot;
	&lt;/li&gt;
&lt;/ul&gt;',`createtime`='1480413163' WHERE `id` = 27 [ RunTime:0.0050s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.016001s ]
INFO: [ view_parse ] --END-- [ RunTime:0.016001s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000000s ]
INFO: [ app_end ] --END-- [ RunTime:0.000000s ]

[ 2016-11-29T17:52:50+08:00 ] 127.0.0.1 /admin/index/article/id/27.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.001000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001000s ]
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::save() should be compatible with Think\Model::save($data = '', $options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::delete() should be compatible with Think\Model::delete($options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
SQL: SHOW COLUMNS FROM `article` [ RunTime:0.0300s ]
SQL: SELECT * FROM `article` WHERE `id` = 27 LIMIT 1   [ RunTime:0.0030s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.018001s ]
INFO: [ view_parse ] --END-- [ RunTime:0.018001s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.002000s ]
INFO: [ app_end ] --END-- [ RunTime:0.002000s ]

[ 2016-11-29T18:04:12+08:00 ] 127.0.0.1 /admin/index/SaveArticle.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.001000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001000s ]
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::save() should be compatible with Think\Model::save($data = '', $options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::delete() should be compatible with Think\Model::delete($options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
SQL: SHOW COLUMNS FROM `article` [ RunTime:0.0110s ]
SQL: UPDATE `article` SET `type`='0',`title`='正则表达式 - 语法',`keyword`='正则表达式',`author`='小兔',`content`='&lt;h1 style=&quot;font-size:2.1em;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	正则表达式 -&amp;nbsp;&lt;span class=&quot;color_h1&quot; style=&quot;color:#64854C;&quot;&gt;语法&lt;/span&gt; 
&lt;/h1&gt;
&lt;div class=&quot;tutintro&quot; style=&quot;border:0px;margin:0px;padding:0px;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	&lt;p style=&quot;font-size:14px;font-family:&amp;quot;&quot;&gt;
		正则表达式(regular expression)描述了一种字符串匹配的模式，可以用来检查一个串是否含有某种子串、将匹配的子串做替换或者从某个串中取出符合某个条件的子串等。
	&lt;/p&gt;
	&lt;ul&gt;
		&lt;li style=&quot;font-size:1em;&quot;&gt;
			列目录时，　dir *.txt或ls *.txt中的*.txt就不是一个正则表达式,因为这里*与正则式的*的含义是不同的。
		&lt;/li&gt;
		&lt;li style=&quot;font-size:1em;&quot;&gt;
			构造正则表达式的方法和创建数学表达式的方法一样。也就是用多种元字符与运算符可以将小的表达式结合在一起来创建更大的表达式。正则表达式的组件可以是单个的字符、字符集合、字符范围、字符间的选择或者所有这些组件的任意组合。
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;p style=&quot;font-size:14px;font-family:&amp;quot;&quot;&gt;
		正则表达式是由普通字符（例如字符 a 到 z）以及特殊字符（称为&quot;元字符&quot;）组成的文字模式。模式描述在搜索文本时要匹配的一个或多个字符串。正则表达式作为一个模板，将某个字符模式与所搜索的字符串进行匹配。
	&lt;/p&gt;
&lt;/div&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	普通字符
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	普通字符包括没有显式指定为元字符的所有可打印和不可打印字符。这包括所有大写和小写字母、所有数字、所有标点符号和一些其他符号。
&lt;/p&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	非打印字符
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	非打印字符也可以是正则表达式的组成部分。下表列出了表示非打印字符的转义序列：
&lt;/p&gt;
&lt;table class=&quot;reference notranslate&quot; style=&quot;border:0px;margin:4px 0px;padding:0px;color:#333333;font-family:&amp;quot;font-size:12px;background-color:#FFFFFF;&quot;&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;th width=&quot;20%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				字符
			&lt;/th&gt;
			&lt;th width=&quot;80%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				描述
			&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				cx
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配由x指明的控制字符。例如， cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 \'c\' 字符。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				f
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个换页符。等价于 x0c 和 cL。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				n
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个换行符。等价于 x0a 和 cJ。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				r
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个回车符。等价于 x0d 和 cM。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				s
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ fnrtv]。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				S
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配任何非空白字符。等价于 [^ fnrtv]。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				t
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个制表符。等价于 x09 和 cI。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				v
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个垂直制表符。等价于 x0b 和 cK。
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	特殊字符
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	所谓特殊字符，就是一些有特殊含义的字符，如上面说的&quot;*.txt&quot;中的*，简单的说就是表示任何字符串的意思。如果要查找文件名中有*的文件，则需要对*进行转义，即在其前加一个。ls *.txt。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	许多元字符要求在试图匹配它们时特别对待。若要匹配这些特殊字符，必须首先使字符&quot;转义&quot;，即，将反斜杠字符 () 放在它们前面。下表列出了正则表达式中的特殊字符：
&lt;/p&gt;
&lt;table class=&quot;reference notranslate&quot; style=&quot;border:0px;margin:4px 0px;padding:0px;color:#333333;font-family:&amp;quot;font-size:12px;background-color:#FFFFFF;&quot;&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;th width=&quot;20%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				特别字符
			&lt;/th&gt;
			&lt;th width=&quot;80%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				描述
			&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				$
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 \'n\' 或 \'r\'。要匹配 $ 字符本身，请使用 $。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				( )
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 ( 和 )。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				*
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 *。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				+
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 +。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				.
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配除换行符 n 之外的任何单字符。要匹配 . ，请使用 . 。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				[
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				标记一个中括号表达式的开始。要匹配 [，请使用 [。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				?
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 ?。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， \'n\' 匹配字符 \'n\'。\'n\' 匹配换行符。序列 \'\' 匹配 &quot;&quot;，而 \'(\' 则匹配 &quot;(&quot;。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				^
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合。要匹配 ^ 字符本身，请使用 ^。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				{
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				标记限定符表达式的开始。要匹配 {，请使用 {。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				|
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				指明两项之间的一个选择。要匹配 |，请使用 |。
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	限定符
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有*或+或?或{n}或{n,}或{n,m}共6种。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	正则表达式的限定符有：
&lt;/p&gt;
&lt;table class=&quot;reference notranslate&quot; style=&quot;border:0px;margin:4px 0px;padding:0px;color:#333333;font-family:&amp;quot;font-size:12px;background-color:#FFFFFF;&quot;&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;th width=&quot;20%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				字符
			&lt;/th&gt;
			&lt;th width=&quot;80%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				描述
			&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				*
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式零次或多次。例如，zo* 能匹配 &quot;z&quot; 以及 &quot;zoo&quot;。* 等价于{0,}。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				+
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式一次或多次。例如，\'zo+\' 能匹配 &quot;zo&quot; 以及 &quot;zoo&quot;，但不能匹配 &quot;z&quot;。+ 等价于 {1,}。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				?
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配前面的子表达式零次或一次。例如，&quot;do(es)?&quot; 可以匹配 &quot;do&quot; 或 &quot;does&quot; 中的&quot;do&quot; 。? 等价于 {0,1}。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				{n}
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				n 是一个非负整数。匹配确定的 n 次。例如，\'o{2}\' 不能匹配 &quot;Bob&quot; 中的 \'o\'，但是能匹配 &quot;food&quot; 中的两个 o。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				{n,}
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				n 是一个非负整数。至少匹配n 次。例如，\'o{2,}\' 不能匹配 &quot;Bob&quot; 中的 \'o\'，但能匹配 &quot;foooood&quot; 中的所有 o。\'o{1,}\' 等价于 \'o+\'。\'o{0,}\' 则等价于 \'o*\'。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				{n,m}
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				m 和 n 均为非负整数，其中n &amp;lt;= m。最少匹配 n 次且最多匹配 m 次。例如，&quot;o{1,3}&quot; 将匹配 &quot;fooooood&quot; 中的前三个 o。\'o{0,1}\' 等价于 \'o?\'。请注意在逗号和两个数之间不能有空格。
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	由于章节编号在大的输入文档中会很可能超过九，所以您需要一种方式来处理两位或三位章节编号。限定符给您这种能力。下面的正则表达式匹配编号为任何位数的章节标题：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Chapter [1-9][0-9]*/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	请注意，限定符出现在范围表达式之后。因此，它应用于整个范围表达式，在本例中，只指定从 0 到 9 的数字（包括 0 和 9）。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	这里不使用 + 限定符，因为在第二个位置或后面的位置不一定需要有一个数字。也不使用？字符，因为它将章节编号限制到只有两位数。您需要至少匹配 Chapter 和空格字符后面的一个数字。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	如果您知道章节编号被限制为只有 99 章，可以使用下面的表达式来至少指定一位但至多两位数字。
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Chapter [0-9]{1,2}/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	上面的表达式的缺点是，大于 99 的章节编号仍只匹配开头两位数字。另一个缺点是 Chapter 0 也将匹配。只匹配两位数字的更好的表达式如下：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Chapter [1-9][0-9]?/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	或
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Chapter [1-9][0-9]{0,1}/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&lt;strong&gt;*、+和?限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个?就可以实现非贪婪或最小匹配。&lt;/strong&gt; 
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	例如，您可能搜索 HTML 文档，以查找括在 H1 标记内的章节标题。该文本在您的文档中如下：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;H1&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;Chapter 1 – Introduction to Regular Expressions&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/H1&amp;gt;&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	下面的表达式匹配从开始小于符号 (&amp;lt;) 到关闭 H1 标记的大于符号 (&amp;gt;) 之间的所有内容。
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/&amp;lt;.*&amp;gt;/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	如果您只需要匹配开始 H1 标记，下面的&quot;非贪心&quot;表达式只匹配 &amp;lt;H1&amp;gt;。
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/&amp;lt;.*?&amp;gt;/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	通过在 *、+ 或 ? 限定符之后放置 ?，该表达式从&quot;贪心&quot;表达式转换为&quot;非贪心&quot;表达式或者最小匹配。
&lt;/p&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	定位符
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	定位符使您能够将正则表达式固定到行首或行尾。它们还使您能够创建这样的正则表达式，这些正则表达式出现在一个单词内、在一个单词的开头或者一个单词的结尾。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	定位符用来描述字符串或单词的边界，^和$分别指字符串的开始与结束，b描述单词的前或后边界，B表示非单词边界。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	正则表达式的限定符有：
&lt;/p&gt;
&lt;table class=&quot;reference notranslate&quot; style=&quot;border:0px;margin:4px 0px;padding:0px;color:#333333;font-family:&amp;quot;font-size:12px;background-color:#FFFFFF;&quot;&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;th width=&quot;20%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				字符
			&lt;/th&gt;
			&lt;th width=&quot;80%&quot; style=&quot;border:1px solid #555555;color:#FFFFFF;vertical-align:top;text-align:left;background-color:#555555;&quot;&gt;
				描述
			&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				^
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配输入字符串开始的位置。如果设置了 RegExp 对象的 Multiline 属性，^ 还会与 n 或 r 之后的位置匹配。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				$
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配输入字符串结尾的位置。如果设置了 RegExp 对象的 Multiline 属性，$ 还会与 n 或 r 之前的位置匹配。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				b
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				匹配一个字边界，即字与空格间的位置。
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				B
			&lt;/td&gt;
			&lt;td style=&quot;font-size:1em;border:1px solid #D4D4D4;vertical-align:top;&quot;&gt;
				非字边界匹配。
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&lt;strong&gt;注意&lt;/strong&gt;：不能将限定符与定位点一起使用。由于在紧靠换行或者字边界的前面或后面不能有一个以上位置，因此不允许诸如 ^* 之类的表达式。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	若要匹配一行文本开始处的文本，请在正则表达式的开始使用 ^ 字符。不要将 ^ 的这种用法与中括号表达式内的用法混淆。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	若要匹配一行文本的结束处的文本，请在正则表达式的结束处使用 $ 字符。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	若要在搜索章节标题时使用定位点，下面的正则表达式匹配一个章节标题，该标题只包含两个尾随数字，并且出现在行首：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/^Chapter [1-9][0-9]{0,1}/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	真正的章节标题不仅出现行的开始处，而且它还是该行中仅有的文本。它即出现在行首又出现在同一行的结尾。下面的表达式能确保指定的匹配只匹配章节而不匹配交叉引用。通过创建只匹配一行文本的开始和结尾的正则表达式，就可做到这一点。
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/^Chapter [1-9][0-9]{0,1}$/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	匹配字边界稍有不同，但向正则表达式添加了很重要的能力。字边界是单词和空格之间的位置。非字边界是任何其他位置。下面的表达式匹配单词 Chapter 的开头三个字符，因为这三个字符出现字边界后面：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/bCha/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	b 字符的位置是非常重要的。如果它位于要匹配的字符串的开始，它在单词的开始处查找匹配项。如果它位于字符串的结尾，它在单词的结尾处查找匹配项。例如，下面的表达式匹配单词 Chapter 中的字符串 ter，因为它出现在字边界的前面：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/terb/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	下面的表达式匹配 Chapter 中的字符串 apt，但不匹配 aptitude 中的字符串 apt：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/Bapt/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	字符串 apt 出现在单词 Chapter 中的非字边界处，但出现在单词 aptitude 中的字边界处。对于 B 非字边界运算符，位置并不重要，因为匹配不关心究竟是单词的开头还是结尾。
&lt;/p&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	选择
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	用圆括号将所有选择项括起来，相邻的选择项之间用|分隔。但用圆括号会有一个副作用，是相关的匹配会被缓存，此时可用?:放在第一个选项前来消除这种副作用。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	其中?:是非捕获元之一，还有两个非捕获元是?=和?!，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。
&lt;/p&gt;
&lt;h2 style=&quot;font-size:1.8em;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	反向引用
&lt;/h2&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	对一个正则表达式模式或部分模式两边添加圆括号将导致相关匹配存储到一个临时缓冲区中，所捕获的每个子匹配都按照在正则表达式模式中从左到右出现的顺序存储。缓冲区编号从 1 开始，最多可存储 99 个捕获的子表达式。每个缓冲区都可以使用 \'n\' 访问，其中 n 为一个标识特定缓冲区的一位或两位十进制数。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	可以使用非捕获元字符 \'?:\'、\'?=\' 或 \'?!\' 来重写捕获，忽略对相关匹配的保存。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	反向引用的最简单的、最有用的应用之一，是提供查找文本中两个相同的相邻单词的匹配项的能力。以下面的句子为例：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;typ&quot;&gt;Is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the cost of of gasoline going up up&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	上面的句子很显然有多个重复的单词。如果能设计一种方法定位该句子，而不必查找每个单词的重复出现，那该有多好。下面的正则表达式使用单个子表达式来实现这一点：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/b([a-z]+) 1b/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;gi&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	捕获的表达式，正如 [a-z]+ 指定的，包括一个或多个字母。正则表达式的第二部分是对以前捕获的子匹配项的引用，即，单词的第二个匹配项正好由括号表达式匹配。1 指定第一个子匹配项。字边界元字符确保只检测整个单词。否则，诸如&quot;is issued&quot;或&quot;this is&quot;之类的词组将不能正确地被此表达式识别。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	正则表达式后面的全局标记 (g) 指示，将该表达式应用到输入字符串中能够查找到的尽可能多的匹配。表达式的结尾处的不区分大小写 (i) 标记指定不区分大小写。多行标记指定换行符的两边可能出现潜在的匹配。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	反向引用还可以将通用资源指示符 (URI) 分解为其组件。假定您想将下面的 URI 分解为协议（ftp、http 等等）、域地址和页/路径：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;pln&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//www.runoob.com:80/html/html-tutorial.html&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	下面的正则表达式提供该功能：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;str&quot;&gt;/(w+)://([^/:]+)(:d*)?([^# ]*)/&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	第一个括号子表达式捕获 Web 地址的协议部分。该子表达式匹配在冒号和两个正斜杠前面的任何单词。第二个括号子表达式捕获地址的域地址部分。子表达式匹配 / 和 : 之外的一个或多个字符。第三个括号子表达式捕获端口号（如果指定了的话）。该子表达式匹配冒号后面的零个或多个数字。只能重复一次该子表达式。最后，第四个括号子表达式捕获 Web 地址指定的路径和/或页信息。该子表达式能匹配不包括 # 或空格字符的任何字符序列。
&lt;/p&gt;
&lt;p style=&quot;font-family:&amp;quot;color:#333333;background-color:#FFFFFF;&quot;&gt;
	将正则表达式应用到上面的 URI，各子匹配项包含下面的内容：
&lt;/p&gt;
&lt;ul style=&quot;color:#333333;font-family:&amp;quot;background-color:#FFFFFF;&quot;&gt;
	&lt;li style=&quot;font-size:1em;&quot;&gt;
		第一个括号子表达式包含&quot;http&quot;
	&lt;/li&gt;
	&lt;li style=&quot;font-size:1em;&quot;&gt;
		第二个括号子表达式包含&quot;www.runoob.com&quot;
	&lt;/li&gt;
	&lt;li style=&quot;font-size:1em;&quot;&gt;
		第三个括号子表达式包含&quot;:80&quot;
	&lt;/li&gt;
	&lt;li style=&quot;font-size:1em;&quot;&gt;
		第四个括号子表达式包含&quot;/html/html-tutorial.html&quot;
	&lt;/li&gt;
&lt;/ul&gt;
来源：http://www.runoob.com/regexp/regexp-syntax.html',`createtime`='1480413852' WHERE `id` = 27 [ RunTime:0.0020s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011001s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011001s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.002000s ]
INFO: [ app_end ] --END-- [ RunTime:0.002000s ]

[ 2016-11-29T18:04:14+08:00 ] 127.0.0.1 /admin/index/article/id/27.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.001000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.002000s ]
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::save() should be compatible with Think\Model::save($data = '', $options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::delete() should be compatible with Think\Model::delete($options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
SQL: SHOW COLUMNS FROM `article` [ RunTime:0.0070s ]
SQL: SELECT * FROM `article` WHERE `id` = 27 LIMIT 1   [ RunTime:0.0210s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.016000s ]
INFO: [ view_parse ] --END-- [ RunTime:0.016000s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.002001s ]
INFO: [ view_filter ] --END-- [ RunTime:0.002001s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.002000s ]
INFO: [ app_end ] --END-- [ RunTime:0.002000s ]

