[ 2016-12-19T17:53:00+08:00 ] 127.0.0.1 /admin
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.004000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.003000s ]

[ 2016-12-19T17:53:00+08:00 ] 127.0.0.1 /admin/login.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.002000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.004000s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.001000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.003000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.076004s ]
INFO: [ view_parse ] --END-- [ RunTime:0.078004s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.004001s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.002000s ]
INFO: [ app_end ] --END-- [ RunTime:0.004000s ]

[ 2016-12-19T17:53:06+08:00 ] 127.0.0.1 /admin/login/dologin.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.003000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.003000s ]
NOTIC: [2048] Non-static method Admin\Model\AdminModel::adminLogin() should not be called statically, assuming $this from incompatible context D:\WWW\tools\Application\Admin\Controller\LoginController.class.php 第 36 行.
SQL: SHOW COLUMNS FROM `admin` [ RunTime:0.0300s ]
SQL: SELECT * FROM `admin` WHERE `user` = 'admin' LIMIT 1   [ RunTime:0.0020s ]

[ 2016-12-19T17:53:07+08:00 ] 127.0.0.1 /admin/login/dologin.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.004000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.003000s ]
NOTIC: [2048] Non-static method Admin\Model\AdminModel::adminLogin() should not be called statically, assuming $this from incompatible context D:\WWW\tools\Application\Admin\Controller\LoginController.class.php 第 36 行.
SQL: SHOW COLUMNS FROM `admin` [ RunTime:0.0060s ]
SQL: SELECT * FROM `admin` WHERE `user` = 'admin' LIMIT 1   [ RunTime:0.0000s ]

[ 2016-12-19T17:53:07+08:00 ] 127.0.0.1 /admin/index.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.002000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.004000s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.001001s ]
INFO: [ template_filter ] --END-- [ RunTime:0.005001s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.099006s ]
INFO: [ view_parse ] --END-- [ RunTime:0.100006s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.003000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001000s ]
INFO: [ app_end ] --END-- [ RunTime:0.003000s ]

[ 2016-12-19T17:53:09+08:00 ] 127.0.0.1 /admin/login/dologin.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.003000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.003000s ]
NOTIC: [2048] Non-static method Admin\Model\AdminModel::adminLogin() should not be called statically, assuming $this from incompatible context D:\WWW\tools\Application\Admin\Controller\LoginController.class.php 第 36 行.
SQL: SHOW COLUMNS FROM `admin` [ RunTime:0.0110s ]
SQL: SELECT * FROM `admin` WHERE `user` = 'admin' LIMIT 1   [ RunTime:0.0020s ]

[ 2016-12-19T17:53:09+08:00 ] 127.0.0.1 /admin/index.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.001000s ]
INFO: [ app_init ] --END-- [ RunTime:0.003000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.003000s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.001000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.003000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.066004s ]
INFO: [ view_parse ] --END-- [ RunTime:0.068004s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.004000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.002000s ]
INFO: [ app_end ] --END-- [ RunTime:0.004000s ]

[ 2016-12-19T17:53:09+08:00 ] 127.0.0.1 /admin/index.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.001000s ]
INFO: [ app_init ] --END-- [ RunTime:0.004000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.004000s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.002000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.003000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.054003s ]
INFO: [ view_parse ] --END-- [ RunTime:0.055003s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.004000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.002000s ]
INFO: [ app_end ] --END-- [ RunTime:0.004000s ]

[ 2016-12-19T17:53:12+08:00 ] 127.0.0.1 /admin/index/lists.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.003000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.005000s ]
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::save() should be compatible with Think\Model::save($data = '', $options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::delete() should be compatible with Think\Model::delete($options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
SQL: SHOW COLUMNS FROM `article` [ RunTime:0.0120s ]
NOTIC: [8] Undefined variable: arr D:\WWW\tools\Application\Admin\Controller\IndexController.class.php 第 96 行.
SQL: SELECT * FROM `article` ORDER BY id desc LIMIT 0,10   [ RunTime:0.0120s ]
SQL: SELECT COUNT(*) AS tp_count FROM `article` LIMIT 1   [ RunTime:0.0010s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.001000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.003000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.153009s ]
INFO: [ view_parse ] --END-- [ RunTime:0.155009s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.002001s ]
INFO: [ view_filter ] --END-- [ RunTime:0.004001s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.004000s ]
INFO: [ app_end ] --END-- [ RunTime:0.006000s ]

[ 2016-12-19T17:53:21+08:00 ] 127.0.0.1 /admin/index/article.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.001001s ]
INFO: [ app_init ] --END-- [ RunTime:0.003001s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001001s ]
INFO: [ app_begin ] --END-- [ RunTime:0.004001s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.001000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.003000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.105006s ]
INFO: [ view_parse ] --END-- [ RunTime:0.107007s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.004000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001000s ]
INFO: [ app_end ] --END-- [ RunTime:0.003000s ]

[ 2016-12-19T17:53:30+08:00 ] 127.0.0.1 /admin/index/SaveArticle.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.003000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.004000s ]
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::save() should be compatible with Think\Model::save($data = '', $options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::delete() should be compatible with Think\Model::delete($options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
SQL: SHOW COLUMNS FROM `article` [ RunTime:0.0110s ]
SQL: INSERT INTO `article` (`type`,`title`,`keyword`,`author`,`content`,`createtime`) VALUES ('0','php foreach 使用引用注意事项','php foreach 使用引用注意事项','小兔','&lt;h2 id=&quot;-&quot; style=&quot;font-size:18px;color:#111111;font-family:Georgia, &amp;quot;background-color:#FCFCFA;&quot;&gt;
	问题案例
&lt;/h2&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;php
    $arr &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; array&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; var_dump&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$arr &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$v&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color:#999999;&quot;&gt;//do something here&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$arr &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; $v&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color:#999999;&quot;&gt;//do something here&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; var_dump&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;color:#111111;font-family:Georgia, &amp;quot;font-size:15px;background-color:#FCFCFA;&quot;&gt;
	输出为：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; array&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;
&lt;h2 id=&quot;-&quot; style=&quot;font-size:18px;color:#111111;font-family:Georgia, &amp;quot;background-color:#FCFCFA;&quot;&gt;
	问题分析
&lt;/h2&gt;
&lt;blockquote style=&quot;font-size:15px;color:#111111;font-family:Georgia, &amp;quot;background-color:whitesmoke;&quot;&gt;
	&lt;p&gt;
		foreach 中不使用引用就没事， 用 foreach $k =&amp;gt; $v 然后 $ar[$k] 来改变原始数组， 略微损失点效率。
	&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p style=&quot;color:#111111;font-family:Georgia, &amp;quot;font-size:15px;background-color:#FCFCFA;&quot;&gt;
	&lt;strong&gt;执行第一个使用引用的 foreach 时：&lt;/strong&gt;
&lt;/p&gt;
&lt;p style=&quot;color:#111111;font-family:Georgia, &amp;quot;font-size:15px;background-color:#FCFCFA;&quot;&gt;
	一开始， $v 指向 $arr[0] 的存储空间，空间内存储着 4 ， foreach 结束时， $v 指向 $arr[2] 的存储空间，空间内存储着 6 。
&lt;/p&gt;
&lt;p style=&quot;color:#111111;font-family:Georgia, &amp;quot;font-size:15px;background-color:#FCFCFA;&quot;&gt;
	&lt;strong&gt;开始执行第二个 foreach 时：&lt;/strong&gt;
&lt;/p&gt;
&lt;p style=&quot;color:#111111;font-family:Georgia, &amp;quot;font-size:15px;background-color:#FCFCFA;&quot;&gt;
	注意和第一个 foreach 不同， 第二个 foreach 没有使用引用，那么就是赋值方式， 即将 $arr 的值依次 赋值 给 $v 。 进行到第一个元素时，要将 $ar[0] 赋值给 $v 。&amp;nbsp;&lt;strong&gt;问题就在这里&lt;/strong&gt;，由于刚刚执行完第一个 foreach，&amp;nbsp;&lt;strong&gt;$v 不是一个新变量，而是已经存在的、指向 $arr[2] 的那个 引用&lt;/strong&gt;&amp;nbsp;， 如此一来，对 $v 进行赋值的时候，就将 $arr[0] = 4 写入了 $arr[2] 的实际存储空间， 相当于对 $arr[2] 进行赋值。 依此类推，第二个 foreach 执行的结果， 就是数组的最后一个元素变成了倒数第二个元素的值。
&lt;/p&gt;
&lt;blockquote style=&quot;font-size:15px;color:#111111;font-family:Georgia, &amp;quot;background-color:whitesmoke;&quot;&gt;
	&lt;p&gt;
		PHP 的开发者也认为，这种情况属于语言特性造成的，不是 bug。要修复这个问题，一种方法是对 foreach 进行特殊处理， 另一种就是限制 foreach 中 $v 的作用域， 这两种方式都与目前 PHP 的语言特性不符，开发人员不愿改， 但还是在&amp;nbsp;&lt;a href=&quot;http://cn2.php.net/manual/en/control-structures.foreach.php&quot;&gt;官方文档&lt;/a&gt;&amp;nbsp;中用 Warning 进行了说明。
	&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;-&quot; style=&quot;font-size:18px;color:#111111;font-family:Georgia, &amp;quot;background-color:#FCFCFA;&quot;&gt;
	解决方案
&lt;/h2&gt;
&lt;blockquote style=&quot;font-size:15px;color:#111111;font-family:Georgia, &amp;quot;background-color:whitesmoke;&quot;&gt;
	&lt;p&gt;
		简单的方法，就是在使用了引用的 foreach 之后， unset 掉 $v
	&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p style=&quot;color:#111111;font-family:Georgia, &amp;quot;font-size:15px;background-color:#FCFCFA;&quot;&gt;
	修改后的案例：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;php
    $arr &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; array&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; var_dump&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$arr &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$v&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color:#999999;&quot;&gt;//do something here&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; unset&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$v&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$arr &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; $v&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color:#999999;&quot;&gt;//do something here&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; var_dump&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/pre&gt;
&lt;p style=&quot;color:#111111;font-family:Georgia, &amp;quot;font-size:15px;background-color:#FCFCFA;&quot;&gt;
	输出：
&lt;/p&gt;
&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; array&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;]=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color:#CC99CC;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color:#F99157;&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color:#CCCCCC;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color:#CCCCCC;&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;
&lt;span&gt;来源：http://www.9958.pw/post/php_foreach&lt;/span&gt;','1482141210') [ RunTime:0.0190s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.001000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.003000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.069004s ]
INFO: [ view_parse ] --END-- [ RunTime:0.071004s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.004001s ]
INFO: [ view_filter ] --END-- [ RunTime:0.008001s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.004000s ]
INFO: [ app_end ] --END-- [ RunTime:0.006000s ]

[ 2016-12-19T17:53:36+08:00 ] 127.0.0.1 /admin/index/article.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.001000s ]
INFO: [ app_init ] --END-- [ RunTime:0.005000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.003000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.005000s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.001000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.003001s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.079004s ]
INFO: [ view_parse ] --END-- [ RunTime:0.081004s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.004001s ]
INFO: [ view_filter ] --END-- [ RunTime:0.007001s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.004000s ]
INFO: [ app_end ] --END-- [ RunTime:0.006000s ]

[ 2016-12-19T17:54:12+08:00 ] 127.0.0.1 /admin/index/SaveArticle.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.001000s ]
INFO: [ app_init ] --END-- [ RunTime:0.004001s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.004000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.006000s ]
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::save() should be compatible with Think\Model::save($data = '', $options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::delete() should be compatible with Think\Model::delete($options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
SQL: SHOW COLUMNS FROM `article` [ RunTime:0.0120s ]
SQL: INSERT INTO `article` (`type`,`title`,`keyword`,`author`,`content`,`createtime`) VALUES ('0','HTTP协议详解','HTTP协议详解','小兔','&lt;div class=&quot;postTitle&quot; style=&quot;border:0px solid red;padding:10px 10px 10px 5px;font-size:14px;font-weight:bold;font-family:&amp;quot;&quot;&gt;
	&lt;h1 style=&quot;font-size:14px;&quot;&gt;
		&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html&quot;&gt;HTTP协议详解&lt;/a&gt;
	&lt;/h1&gt;
&lt;/div&gt;
&lt;p&gt;
	&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
	当今web程序的开发技术真是百家争鸣，ASP.NET, PHP, JSP，Perl, AJAX 等等。 无论Web技术在未来如何发展，理解Web程序之间通信的基本协议相当重要, 因为它让我们理解了Web应用程序的内部工作. 本文将对HTTP协议进行详细的实例讲解，内容较多，希望大家耐心看。也希望对大家的开发工作或者测试工作有所帮助。使用Fiddler工具非常方便地捕获HTTP Request和HTTP Response,&amp;nbsp; 关于Fiddler工具的用法，请看我另一篇博客[&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/06/2337728.html&quot; target=&quot;_blank&quot;&gt;Fiddler 教程&lt;/a&gt;]
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	阅读目录
&lt;/p&gt;
&lt;ol&gt;
	&lt;li style=&quot;margin-left:10px;&quot;&gt;
		&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#whathttp&quot;&gt;什么是HTTP协议&lt;/a&gt;
	&lt;/li&gt;
	&lt;li style=&quot;margin-left:10px;&quot;&gt;
		&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#threeconcept&quot;&gt;Web服务器，浏览器,代理服务器&lt;/a&gt;
	&lt;/li&gt;
	&lt;li style=&quot;margin-left:10px;&quot;&gt;
		&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#urlexplain&quot;&gt;URL详解&lt;/a&gt;
	&lt;/li&gt;
	&lt;li style=&quot;margin-left:10px;&quot;&gt;
		&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#statelesshttp&quot;&gt;HTTP协议是无状态的&lt;/a&gt;
	&lt;/li&gt;
	&lt;li style=&quot;margin-left:10px;&quot;&gt;
		&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#ManyRequest&quot;&gt;打开一个网页需要浏览器发送很多次Request&lt;/a&gt;
	&lt;/li&gt;
	&lt;li style=&quot;margin-left:10px;&quot;&gt;
		&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#httpmeessagestructe&quot;&gt;HTTP消息的结构&lt;/a&gt;
	&lt;/li&gt;
	&lt;li style=&quot;margin-left:10px;&quot;&gt;
		&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#getpost&quot;&gt;Get和Post方法的区别&lt;/a&gt;
	&lt;/li&gt;
	&lt;li style=&quot;margin-left:10px;&quot;&gt;
		&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#statecode&quot;&gt;状态码&lt;/a&gt;
	&lt;/li&gt;
	&lt;li style=&quot;margin-left:10px;&quot;&gt;
		&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#httprequestheader&quot;&gt;HTTP Request header&lt;/a&gt;
	&lt;/li&gt;
	&lt;li style=&quot;margin-left:10px;&quot;&gt;
		&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#httpresponseheader&quot;&gt;HTTP Response header&lt;/a&gt;
	&lt;/li&gt;
	&lt;li style=&quot;margin-left:10px;&quot;&gt;
		&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#statelessalive&quot;&gt;HTTP协议是无状态的和Connection: keep-alive的区别&lt;/a&gt;
	&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;
	什么是HTTP协议&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;
	协议是指计算机通信网络中两台计算机之间进行通信所必须共同遵守的规定或规则，超文本传输协议(HTTP)是一种通信协议，它允许将超文本标记语言(HTML)文档从Web服务器传送到客户端的浏览器
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	目前我们使用的是HTTP/1.1 版本
&lt;/p&gt;
&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;
	Web服务器，浏览器,代理服务器&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;
	当我们打开浏览器，在地址栏中输入URL，然后我们就看到了网页。 原理是怎样的呢？
&lt;/p&gt;
&lt;p&gt;
	实际上我们输入URL后，我们的浏览器给Web服务器发送了一个Request, Web服务器接到Request后进行处理，生成相应的Response，然后发送给浏览器， 浏览器解析Response中的HTML,这样我们就看到了网页，过程如下图所示
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012020910422542.png&quot; alt=&quot;&quot; width=&quot;586&quot; height=&quot;272&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	我们的Request 有可能是经过了代理服务器，最后才到达Web服务器的。
&lt;/p&gt;
&lt;p&gt;
	过程如下图所示
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012020910491417.png&quot; alt=&quot;&quot; width=&quot;583&quot; height=&quot;256&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
	代理服务器就是网络信息的中转站，有什么功能呢？
&lt;/p&gt;
&lt;p&gt;
	1. 提高访问速度， 大多数的代理服务器都有缓存功能。
&lt;/p&gt;
&lt;p&gt;
	2. 突破限制， 也就是FQ了
&lt;/p&gt;
&lt;p&gt;
	3. 隐藏身份。
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;
	URL详解&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;
	&amp;nbsp;URL(Uniform Resource Locator) 地址用于描述一个网络上的资源,&amp;nbsp; 基本格式如下
&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:5px 0px;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;
&lt;pre&gt;schema://host[:port#]/path/.../[?query-string][#anchor]&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
	scheme&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 指定低层使用的协议(例如：http, https, ftp)
&lt;/p&gt;
&lt;p&gt;
	host&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; HTTP服务器的IP地址或者域名
&lt;/p&gt;
&lt;p&gt;
	port#&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; HTTP服务器的默认端口是80，这种情况下端口号可以省略。如果使用了别的端口，必须指明，例如 http://www.cnblogs.com:8080/
&lt;/p&gt;
&lt;p&gt;
	path&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 访问资源的路径
&lt;/p&gt;
&lt;p&gt;
	query-string&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 发送给http服务器的数据
&lt;/p&gt;
&lt;p&gt;
	anchor-&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 锚
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	URL 的一个例子
&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:5px 0px;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;
	&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;
		&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;img src=&quot;http://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/span&gt;
	&lt;/div&gt;
&lt;pre&gt;http://www.mywebsite.com/sj/test/test.aspx?name=sviergn&amp;amp;x=true#stuff

Schema:                 http
host:                   www.mywebsite.com
path:                   /sj/test/test.aspx
Query String:           name=sviergn&amp;amp;x=true
Anchor:                 stuff&lt;/pre&gt;
	&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;
		&lt;span class=&quot;cnblogs_code_copy&quot; style=&quot;line-height:1.5 !important;&quot;&gt;&lt;img src=&quot;http://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot; /&gt;&lt;/span&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;
	HTTP协议是无状态的&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;
	http协议是无状态的，同一个客户端的这次请求和上次请求是没有对应关系，对http服务器来说，它并不知道这两个请求来自同一个客户端。 为了解决这个问题， Web程序引入了Cookie机制来维护状态.
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;
	打开一个网页需要浏览器发送很多次Request&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;
	1. 当你在浏览器输入URL http://www.cnblogs.com 的时候，浏览器发送一个Request去获取 http://www.cnblogs.com 的html.&amp;nbsp; 服务器把Response发送回给浏览器.
&lt;/p&gt;
&lt;p&gt;
	2. 浏览器分析Response中的 HTML，发现其中引用了很多其他文件，比如图片，CSS文件，JS文件。
&lt;/p&gt;
&lt;p&gt;
	3. 浏览器会自动再次发送Request去获取图片，CSS文件，或者JS文件。
&lt;/p&gt;
&lt;p&gt;
	4. 等所有的文件都下载成功后。 网页就被显示出来了。
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;
	HTTP消息的结构&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;
	先看Request 消息的结构,&amp;nbsp;&amp;nbsp; Request 消息分为3部分，第一部分叫Request line, 第二部分叫Request header, 第三部分是body. header和body之间有个空行， 结构如下图
&lt;/p&gt;
&lt;p&gt;
	&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012020914293943.png&quot; alt=&quot;&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
	第一行中的Method表示请求方法,比如&quot;POST&quot;,&quot;GET&quot;,&amp;nbsp; Path-to-resoure表示请求的资源， Http/version-number 表示HTTP协议的版本号
&lt;/p&gt;
&lt;p&gt;
	当使用的是&quot;GET&quot; 方法的时候， body是为空的
&lt;/p&gt;
&lt;p&gt;
	比如我们打开博客园首页的request 如下
&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; style=&quot;border:1px solid #CCCCCC;padding:5px;margin:5px 0px;font-family:&amp;quot;font-size:12px !important;background-color:#F5F5F5;&quot;&gt;
&lt;pre&gt;GET http://www.cnblogs.com/ HTTP/1.1
Host: www.cnblogs.com&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
	抽象的东西，难以理解，老感觉是虚的， 所谓眼见为实, 实际见到的东西，我们才能理解和记忆。 我们今天用Fiddler，实际的看看Request和Response.
&lt;/p&gt;
&lt;p&gt;
	下面我们打开Fiddler 捕捉一个博客园登录的Request 然后分析下它的结构, 在Inspectors tab下以Raw的方式可以看到完整的Request的消息， &amp;nbsp; 如下图
&lt;/p&gt;
&lt;p&gt;
	&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012022009421183.png&quot; alt=&quot;&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	我们再看Response消息的结构, 和Request消息的结构基本一样。 同样也分为三部分,第一部分叫Response line, 第二部分叫Response header，第三部分是body. header和body之间也有个空行,&amp;nbsp; 结构如下图
&lt;/p&gt;
&lt;p&gt;
	&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021309365350.png&quot; alt=&quot;&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
	HTTP/version-number表示HTTP协议的版本号，&amp;nbsp; status-code 和message 请看下节[&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#statecode&quot; target=&quot;_blank&quot;&gt;状态代码&lt;/a&gt;]的详细解释.
&lt;/p&gt;
&lt;p&gt;
	我们用Fiddler 捕捉一个博客园首页的Response然后分析下它的结构, 在Inspectors tab下以Raw的方式可以看到完整的Response的消息， &amp;nbsp; 如下图
&lt;/p&gt;
&lt;p&gt;
	&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012022009373182.png&quot; alt=&quot;&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;
	Get和Post方法的区别&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;
	Http协议定义了很多与服务器交互的方法，最基本的有4种，分别是GET,POST,PUT,DELETE. 一个URL地址用于描述一个网络上的资源，而HTTP中的GET, POST, PUT, DELETE就对应着对这个资源的查，改，增，删4个操作。 我们最常见的就是GET和POST了。&lt;span style=&quot;color:#FF0000;&quot;&gt;GET一般用于获取/查询资源信息，而POST一般用于更新资源信息.&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
	我们看看GET和POST的区别
&lt;/p&gt;
&lt;p&gt;
	1. GET提交的数据会放在URL之后，以?分割URL和传输数据，参数之间以&amp;amp;相连，如EditPosts.aspx?name=test1&amp;amp;id=123456.&amp;nbsp; POST方法是把提交的数据放在HTTP包的Body中.
&lt;/p&gt;
&lt;p&gt;
	2. GET提交的数据大小有限制（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制.
&lt;/p&gt;
&lt;p&gt;
	3. GET方式需要使用Request.QueryString来取得变量的值，而POST方式通过Request.Form来获取变量的值。
&lt;/p&gt;
&lt;p&gt;
	4. GET方式提交数据，会带来安全问题，比如一个登录页面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码.
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;
	状态码&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;
	Response 消息中的第一行叫做状态行，由HTTP协议版本号， 状态码， 状态消息 三部分组成。
&lt;/p&gt;
&lt;p&gt;
	状态码用来告诉HTTP客户端,HTTP服务器是否产生了预期的Response.
&lt;/p&gt;
&lt;p&gt;
	HTTP/1.1中定义了5类状态码， 状态码由三位数字组成，第一个数字定义了响应的类别
&lt;/p&gt;
&lt;p&gt;
	1XX&amp;nbsp; 提示信息 - 表示请求已被成功接收，继续处理
&lt;/p&gt;
&lt;p&gt;
	2XX&amp;nbsp; 成功 - 表示请求已被成功接收，理解，接受
&lt;/p&gt;
&lt;p&gt;
	3XX&amp;nbsp; 重定向 - 要完成请求必须进行更进一步的处理
&lt;/p&gt;
&lt;p&gt;
	4XX&amp;nbsp; 客户端错误 -&amp;nbsp; 请求有语法错误或请求无法实现
&lt;/p&gt;
&lt;p&gt;
	5XX&amp;nbsp; 服务器端错误 -&amp;nbsp;&amp;nbsp; 服务器未能实现合法的请求
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	看看一些常见的状态码
&lt;/p&gt;
&lt;p&gt;
	200 OK&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
	最常见的就是成功响应状态码200了， 这表明该请求被成功地完成，所请求的资源发送回客户端
&lt;/p&gt;
&lt;p&gt;
	如下图， 打开博客园首页
&lt;/p&gt;
&lt;p&gt;
	&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021114423456.png&quot; alt=&quot;&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
	302 Found
&lt;/p&gt;
&lt;p&gt;
	重定向，新的URL会在response 中的Location中返回，浏览器将会自动使用新的URL发出新的Request
&lt;/p&gt;
&lt;p&gt;
	例如在IE中输入， http://www.google.com. HTTP服务器会返回302， IE取到Response中Location header的新URL, 又重新发送了一个Request.
&lt;/p&gt;
&lt;p&gt;
	&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021115280744.png&quot; alt=&quot;&quot; width=&quot;766&quot; height=&quot;527&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	304 Not Modified
&lt;/p&gt;
&lt;p&gt;
	代表上次的文档已经被缓存了， 还可以继续使用，
&lt;/p&gt;
&lt;p&gt;
	例如打开博客园首页, 发现很多Response 的status code 都是304
&lt;/p&gt;
&lt;p&gt;
	&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021115064471.png&quot; alt=&quot;&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
	提示：　如果你不想使用本地缓存可以用Ctrl+F5 强制刷新页面
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	400 Bad Request&amp;nbsp; 客户端请求与语法错误，不能被服务器所理解
&lt;/p&gt;
&lt;p&gt;
	403 Forbidden 服务器收到请求，但是拒绝提供服务
&lt;/p&gt;
&lt;p&gt;
	404 Not Found&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
	请求资源不存在（输错了URL）
&lt;/p&gt;
&lt;p&gt;
	比如在IE中输入一个错误的URL， http://www.cnblogs.com/tesdf.aspx
&lt;/p&gt;
&lt;p&gt;
	&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021114534541.png&quot; alt=&quot;&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	500 Internal Server Error 服务器发生了不可预期的错误
&lt;/p&gt;
&lt;p&gt;
	503 Server Unavailable 服务器当前不能处理客户端的请求，一段时间后可能恢复正常
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;
	HTTP Request header&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;
	使用Fiddler 能很方便的查看Reques header, 点击Inspectors tab -&amp;gt;Request tab-&amp;gt; headers&amp;nbsp; 如下图所示.
&lt;/p&gt;
&lt;p&gt;
	&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021116181545.png&quot; alt=&quot;&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
	header 有很多，比较难以记忆，我们也按照Fiddler那样把header 进行分类，这样比较清晰也容易记忆。
&lt;/p&gt;
&lt;h2 style=&quot;font-size:21px;&quot;&gt;
	Cache 头域
&lt;/h2&gt;
&lt;p&gt;
	If-Modified-Since
&lt;/p&gt;
&lt;p&gt;
	作用： 把浏览器端缓存页面的最后修改时间发送到服务器去，服务器会把这个时间与服务器上实际文件的最后修改时间进行对比。如果时间一致，那么返回304，客户端就直接使用本地缓存文件。如果时间不一致，就会返回200和新的文件内容。客户端接到之后，会丢弃旧文件，把新文件缓存起来，并显示在浏览器中.
&lt;/p&gt;
&lt;p&gt;
	例如：If-Modified-Since: Thu, 09 Feb 2012 09:07:57 GMT
&lt;/p&gt;
&lt;p&gt;
	实例如下图
&lt;/p&gt;
&lt;p&gt;
	&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021322503738.png&quot; alt=&quot;&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	If-None-Match
&lt;/p&gt;
&lt;p&gt;
	作用: If-None-Match和ETag一起工作，工作原理是在HTTP Response中添加ETag信息。 当用户再次请求该资源时，将在HTTP Request 中加入If-None-Match信息(ETag的值)。如果服务器验证资源的ETag没有改变（该资源没有更新），将返回一个304状态告诉客户端使用本地缓存文件。否则将返回200状态和新的资源和Etag.&amp;nbsp; 使用这样的机制将提高网站的性能
&lt;/p&gt;
&lt;p&gt;
	例如: If-None-Match: &quot;03f2b33c0bfcc1:0&quot;
&lt;/p&gt;
&lt;p&gt;
	实例如下图
&lt;/p&gt;
&lt;p&gt;
	&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021117041918.png&quot; alt=&quot;&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	Pragma
&lt;/p&gt;
&lt;p&gt;
	作用： 防止页面被缓存， 在HTTP/1.1版本中，它和Cache-Control:no-cache作用一模一样
&lt;/p&gt;
&lt;p&gt;
	Pargma只有一个用法， 例如： Pragma: no-cache
&lt;/p&gt;
&lt;p&gt;
	&lt;span style=&quot;color:#FF0000;&quot;&gt;注意: 在HTTP/1.0版本中，只实现了Pragema:no-cache, 没有实现Cache-Control&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	Cache-Control
&lt;/p&gt;
&lt;p&gt;
	作用: 这个是非常重要的规则。 这个用来指定Response-Request遵循的缓存机制。各个指令含义如下
&lt;/p&gt;
&lt;p&gt;
	Cache-Control:Public&amp;nbsp;&amp;nbsp; 可以被任何缓存所缓存（）
&lt;/p&gt;
&lt;p&gt;
	Cache-Control:Private&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 内容只缓存到私有缓存中
&lt;/p&gt;
&lt;p&gt;
	Cache-Control:no-cache&amp;nbsp; 所有内容都不会被缓存
&lt;/p&gt;
&lt;p&gt;
	还有其他的一些用法， 我没搞懂其中的意思， 请大家参考其他的资料
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;h2 style=&quot;font-size:21px;&quot;&gt;
	Client 头域
&lt;/h2&gt;
&lt;p&gt;
	Accept
&lt;/p&gt;
&lt;p&gt;
	作用：&amp;nbsp;浏览器端可以接受的媒体类型,
&lt;/p&gt;
&lt;p&gt;
	例如：&amp;nbsp; Accept: text/html &amp;nbsp;代表浏览器可以接受服务器回发的类型为 text/html &amp;nbsp;也就是我们常说的html文档,
&lt;/p&gt;
&lt;p&gt;
	如果服务器无法返回text/html类型的数据,服务器应该返回一个406错误(non acceptable)
&lt;/p&gt;
&lt;p&gt;
	通配符 * 代表任意类型
&lt;/p&gt;
&lt;p&gt;
	例如 &amp;nbsp;Accept: */* &amp;nbsp;代表浏览器可以处理所有类型,(一般浏览器发给服务器都是发这个)
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	Accept-Encoding：
&lt;/p&gt;
&lt;p&gt;
	作用： 浏览器申明自己接收的编码方法，通常指定压缩方法，是否支持压缩，支持什么压缩方法（gzip，deflate），（注意：这不是只字符编码）;
&lt;/p&gt;
&lt;p&gt;
	例如： Accept-Encoding: gzip, deflate
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	Accept-Language
&lt;/p&gt;
&lt;p&gt;
	作用： 浏览器申明自己接收的语言。&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	语言跟字符集的区别：中文是语言，中文有多种字符集，比如big5，gb2312，gbk等等；
&lt;/p&gt;
&lt;p&gt;
	例如： Accept-Language: en-us
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	User-Agent
&lt;/p&gt;
&lt;p&gt;
	作用：告诉HTTP服务器， 客户端使用的操作系统和浏览器的名称和版本.
&lt;/p&gt;
&lt;p&gt;
	我们上网登陆论坛的时候，往往会看到一些欢迎信息，其中列出了你的操作系统的名称和版本，你所使用的浏览器的名称和版本，这往往让很多人感到很神奇，实际上，服务器应用程序就是从User-Agent这个请求报头域中获取到这些信息User-Agent请求报头域允许客户端将它的操作系统、浏览器和其它属性告诉服务器。
&lt;/p&gt;
&lt;p&gt;
	例如：&amp;nbsp;User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; CIBA; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; InfoPath.2; .NET4.0E)
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	Accept-Charset
&lt;/p&gt;
&lt;p&gt;
	作用：浏览器申明自己接收的字符集，这就是本文前面介绍的各种字符集和字符编码，如gb2312，utf-8（通常我们说Charset包括了相应的字符编码方案）；
&lt;/p&gt;
&lt;p&gt;
	例如：
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;h2 style=&quot;font-size:21px;&quot;&gt;
	Cookie/Login 头域
&lt;/h2&gt;
&lt;p&gt;
	Cookie:
&lt;/p&gt;
&lt;p&gt;
	作用： 最重要的header, 将cookie的值发送给HTTP 服务器
&lt;/p&gt;
&lt;h2 style=&quot;font-size:21px;&quot;&gt;
	Entity头域
&lt;/h2&gt;
&lt;p&gt;
	Content-Length
&lt;/p&gt;
&lt;p&gt;
	作用：发送给HTTP服务器数据的长度。
&lt;/p&gt;
&lt;p&gt;
	例如： Content-Length: 38
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	Content-Type
&lt;/p&gt;
&lt;p&gt;
	作用：
&lt;/p&gt;
&lt;p&gt;
	例如：Content-Type: application/x-www-form-urlencoded
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;h2 style=&quot;font-size:21px;&quot;&gt;
	Miscellaneous 头域
&lt;/h2&gt;
&lt;p&gt;
	Referer:
&lt;/p&gt;
&lt;p&gt;
	作用： 提供了Request的上下文信息的服务器，告诉服务器我是从哪个链接过来的，比如从我主页上链接到一个朋友那里，他的服务器就能够从HTTP Referer中统计出每天有多少用户点击我主页上的链接访问他的网站。
&lt;/p&gt;
&lt;p&gt;
	例如: Referer:http://translate.google.cn/?hl=zh-cn&amp;amp;tab=wT
&lt;/p&gt;
&lt;h2 style=&quot;font-size:21px;&quot;&gt;
	Transport 头域
&lt;/h2&gt;
&lt;p&gt;
	Connection
&lt;/p&gt;
&lt;p&gt;
	例如：　Connection: keep-alive&amp;nbsp;&amp;nbsp; 当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的TCP连接不会关闭，如果客户端再次访问这个服务器上的网页，会继续使用这一条已经建立的连接
&lt;/p&gt;
&lt;p&gt;
	例如：&amp;nbsp; Connection: close&amp;nbsp; 代表一个Request完成后，客户端和服务器之间用于传输HTTP数据的TCP连接会关闭， 当客户端再次发送Request，需要重新建立TCP连接。
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	Host（发送请求时，该报头域是必需的）
&lt;/p&gt;
&lt;p&gt;
	作用: 请求报头域主要用于指定被请求资源的Internet主机和端口号，它通常从HTTP URL中提取出来的
&lt;/p&gt;
&lt;p&gt;
	例如: 我们在浏览器中输入：http://www.guet.edu.cn/index.html
&lt;/p&gt;
&lt;p&gt;
	浏览器发送的请求消息中，就会包含Host请求报头域，如下：
&lt;/p&gt;
&lt;p&gt;
	Host：http://www.guet.edu.cn
&lt;/p&gt;
&lt;p&gt;
	此处使用缺省端口号80，若指定了端口号，则变成：Host：指定端口号
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;
	&lt;span style=&quot;font-family:宋体;&quot;&gt;HTTP Response header&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/h1&gt;
&lt;p&gt;
	同样使用Fiddler 查看Response header, 点击Inspectors tab -&amp;gt;Response tab-&amp;gt; headers&amp;nbsp; 如下图所示
&lt;/p&gt;
&lt;p&gt;
	&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021116212815.png&quot; alt=&quot;&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;我们也按照Fiddler那样把header 进行分类，这样比较清晰也容易记忆。
&lt;/p&gt;
&lt;h2 style=&quot;font-size:21px;&quot;&gt;
	Cache头域
&lt;/h2&gt;
&lt;p&gt;
	Date
&lt;/p&gt;
&lt;p&gt;
	作用:&amp;nbsp; 生成消息的具体时间和日期
&lt;/p&gt;
&lt;p&gt;
	例如：　Date: Sat, 11 Feb 2012 11:35:14 GMT&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	Expires
&lt;/p&gt;
&lt;p&gt;
	作用: 浏览器会在指定过期时间内使用本地缓存
&lt;/p&gt;
&lt;p&gt;
	例如: Expires: Tue, 08 Feb 2022 11:35:14 GMT
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	Vary
&lt;/p&gt;
&lt;p&gt;
	作用：
&lt;/p&gt;
&lt;p&gt;
	例如: Vary: Accept-Encoding
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;h2 style=&quot;font-size:21px;&quot;&gt;
	Cookie/Login 头域
&lt;/h2&gt;
&lt;p&gt;
	P3P
&lt;/p&gt;
&lt;p&gt;
	作用: 用于跨域设置Cookie, 这样可以解决iframe跨域访问cookie的问题
&lt;/p&gt;
&lt;p&gt;
	例如: P3P: CP=CURa ADMa DEVa PSAo PSDo OUR BUS UNI PUR INT DEM STA PRE COM NAV OTC NOI DSP COR
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	Set-Cookie
&lt;/p&gt;
&lt;p&gt;
	作用： 非常重要的header, 用于把cookie 发送到客户端浏览器， 每一个写入cookie都会生成一个Set-Cookie.
&lt;/p&gt;
&lt;p&gt;
	例如: Set-Cookie: sc=4c31523a; path=/; domain=.acookie.taobao.com
&lt;/p&gt;
&lt;p&gt;
	&lt;img src=&quot;http://pic002.cnblogs.com/images/2012/263119/2012021119563476.png&quot; alt=&quot;&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;h2 style=&quot;font-size:21px;&quot;&gt;
	Entity头域
&lt;/h2&gt;
&lt;p&gt;
	ETag
&lt;/p&gt;
&lt;p&gt;
	作用:&amp;nbsp; 和If-None-Match 配合使用。 （实例请看上节中If-None-Match的实例）
&lt;/p&gt;
&lt;p&gt;
	例如: ETag: &quot;03f2b33c0bfcc1:0&quot;
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	Last-Modified:
&lt;/p&gt;
&lt;p&gt;
	作用： 用于指示资源的最后修改日期和时间。（实例请看上节的If-Modified-Since的实例）
&lt;/p&gt;
&lt;p&gt;
	例如: Last-Modified: Wed, 21 Dec 2011 09:09:10 GMT
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	Content-Type
&lt;/p&gt;
&lt;p&gt;
	作用：WEB服务器告诉浏览器自己响应的对象的类型和字符集,
&lt;/p&gt;
&lt;p&gt;
	例如:
&lt;/p&gt;
&lt;p&gt;
	Content-Type: text/html; charset=utf-8
&lt;/p&gt;
&lt;p&gt;
	Content-Type:text/html;charset=GB2312
&lt;/p&gt;
&lt;p&gt;
	Content-Type: image/jpeg
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	Content-Length
&lt;/p&gt;
&lt;p&gt;
	指明实体正文的长度，以字节方式存储的十进制数字来表示。在数据下行的过程中，Content-Length的方式要预先在服务器中缓存所有数据，然后所有数据再一股脑儿地发给客户端。
&lt;/p&gt;
&lt;p&gt;
	例如: Content-Length: 19847
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	Content-Encoding
&lt;/p&gt;
&lt;p&gt;
	WEB服务器表明自己使用了什么压缩方法（gzip，deflate）压缩响应中的对象。
&lt;/p&gt;
&lt;p&gt;
	例如：Content-Encoding：gzip
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	Content-Language
&lt;/p&gt;
&lt;p&gt;
	作用： WEB服务器告诉浏览器自己响应的对象的语言者
&lt;/p&gt;
&lt;p&gt;
	例如： Content-Language:da
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;h2 style=&quot;font-size:21px;&quot;&gt;
	Miscellaneous 头域
&lt;/h2&gt;
&lt;p&gt;
	Server:
&lt;/p&gt;
&lt;p&gt;
	作用：指明HTTP服务器的软件信息
&lt;/p&gt;
&lt;p&gt;
	例如:Server: Microsoft-IIS/7.5
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
	X-AspNet-Version:
&lt;/p&gt;
&lt;p&gt;
	作用：如果网站是用ASP.NET开发的，这个header用来表示ASP.NET的版本
&lt;/p&gt;
&lt;p&gt;
	例如: X-AspNet-Version: 4.0.30319
&lt;/p&gt;
&lt;p&gt;
	X-Powered-By:
&lt;/p&gt;
&lt;p&gt;
	作用：表示网站是用什么技术开发的
&lt;/p&gt;
&lt;p&gt;
	例如： X-Powered-By: ASP.NET
&lt;/p&gt;
&lt;h2 style=&quot;font-size:21px;&quot;&gt;
	Transport头域
&lt;/h2&gt;
&lt;p&gt;
	Connection
&lt;/p&gt;
&lt;p&gt;
	例如：　Connection: keep-alive&amp;nbsp;&amp;nbsp; 当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的TCP连接不会关闭，如果客户端再次访问这个服务器上的网页，会继续使用这一条已经建立的连接
&lt;/p&gt;
&lt;p&gt;
	例如：&amp;nbsp; Connection: close&amp;nbsp; 代表一个Request完成后，客户端和服务器之间用于传输HTTP数据的TCP连接会关闭， 当客户端再次发送Request，需要重新建立TCP连接。
&lt;/p&gt;
&lt;h2 style=&quot;font-size:21px;&quot;&gt;
	Location头域
&lt;/h2&gt;
&lt;p&gt;
	Location
&lt;/p&gt;
&lt;p&gt;
	作用： 用于重定向一个新的位置, 包含新的URL地址
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;实例请看304状态实例
&lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;h1 style=&quot;font-size:28px;background-color:#A5A5A5;&quot;&gt;
	HTTP协议是无状态的和Connection: keep-alive的区别&lt;a name=&quot;undefined&quot;&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;
	无状态是指协议对于事务处理没有记忆能力，服务器不知道客户端是什么状态。从另一方面讲，打开一个服务器上的网页和你之前打开这个服务器上的网页之间没有任何联系
&lt;/p&gt;
&lt;p&gt;
	HTTP是一个&lt;span style=&quot;color:#FF0000;&quot;&gt;无状态&lt;/span&gt;的&lt;span style=&quot;color:#FF0000;&quot;&gt;面向连接&lt;/span&gt;的协议，无状态不代表HTTP不能保持TCP连接，更不能代表HTTP使用的是UDP协议（无连接）
&lt;/p&gt;
&lt;div&gt;
	从HTTP/1.1起，默认都开启了Keep-Alive，保持连接特性，简单地说，当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的TCP连接不会关闭，如果客户端再次访问这个服务器上的网页，会继续使用这一条已经建立的连接
&lt;/div&gt;
&lt;p&gt;
	&amp;nbsp;Keep-Alive不会永久保持连接，它有一个保持时间，可以在不同的服务器软件（如Apache）中设定这个时间
&lt;/p&gt;
&lt;p&gt;
	来源：http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html#threeconcept
&lt;/p&gt;','1482141252') [ RunTime:0.0060s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.001000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.003000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.043002s ]
INFO: [ view_parse ] --END-- [ RunTime:0.045002s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.004001s ]
INFO: [ view_filter ] --END-- [ RunTime:0.006001s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.004000s ]
INFO: [ app_end ] --END-- [ RunTime:0.006000s ]

[ 2016-12-19T17:54:14+08:00 ] 127.0.0.1 /admin/index/article.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.003000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.005000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.007000s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.001000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.003000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.079005s ]
INFO: [ view_parse ] --END-- [ RunTime:0.081005s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.004000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.006000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.004001s ]
INFO: [ app_end ] --END-- [ RunTime:0.005001s ]

[ 2016-12-19T17:54:15+08:00 ] 127.0.0.1 /admin/index.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.001000s ]
INFO: [ app_init ] --END-- [ RunTime:0.003000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.003000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.005000s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.002000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.004001s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.065004s ]
INFO: [ view_parse ] --END-- [ RunTime:0.067004s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.004000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.006000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.003000s ]
INFO: [ app_end ] --END-- [ RunTime:0.006001s ]

[ 2016-12-19T17:54:17+08:00 ] 127.0.0.1 /admin/index/lists.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.003000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.004001s ]
INFO: [ app_begin ] --END-- [ RunTime:0.006001s ]
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::save() should be compatible with Think\Model::save($data = '', $options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::delete() should be compatible with Think\Model::delete($options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
SQL: SHOW COLUMNS FROM `article` [ RunTime:0.0110s ]
NOTIC: [8] Undefined variable: arr D:\WWW\tools\Application\Admin\Controller\IndexController.class.php 第 96 行.
SQL: SELECT * FROM `article` ORDER BY id desc LIMIT 0,10   [ RunTime:0.0090s ]
SQL: SELECT COUNT(*) AS tp_count FROM `article` LIMIT 1   [ RunTime:0.0000s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.001000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.004000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.147009s ]
INFO: [ view_parse ] --END-- [ RunTime:0.150009s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.003000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.006000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.016001s ]
INFO: [ app_end ] --END-- [ RunTime:0.018001s ]

