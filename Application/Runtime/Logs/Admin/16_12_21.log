[ 2016-12-21T17:37:30+08:00 ] 127.0.0.1 /admin
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.001000s ]
INFO: [ app_init ] --END-- [ RunTime:0.003000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.004000s ]

[ 2016-12-21T17:37:30+08:00 ] 127.0.0.1 /admin/login.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.001000s ]
INFO: [ app_init ] --END-- [ RunTime:0.004000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.004001s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.023001s ]
INFO: [ template_filter ] --END-- [ RunTime:0.026002s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.141008s ]
INFO: [ view_parse ] --END-- [ RunTime:0.143008s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.004000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.002000s ]
INFO: [ app_end ] --END-- [ RunTime:0.004000s ]

[ 2016-12-21T17:37:31+08:00 ] 127.0.0.1 /admin
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.001000s ]
INFO: [ app_init ] --END-- [ RunTime:0.003000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.004000s ]

[ 2016-12-21T17:37:31+08:00 ] 127.0.0.1 /admin/login.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.001000s ]
INFO: [ app_init ] --END-- [ RunTime:0.003000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.004000s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.001000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.003000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.036002s ]
INFO: [ view_parse ] --END-- [ RunTime:0.038003s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.004000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.002000s ]
INFO: [ app_end ] --END-- [ RunTime:0.004000s ]

[ 2016-12-21T17:37:36+08:00 ] 127.0.0.1 /admin/login/dologin.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.001000s ]
INFO: [ app_init ] --END-- [ RunTime:0.004000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.003000s ]
NOTIC: [2048] Non-static method Admin\Model\AdminModel::adminLogin() should not be called statically, assuming $this from incompatible context D:\WWW\tools\Application\Admin\Controller\LoginController.class.php 第 36 行.
SQL: SHOW COLUMNS FROM `admin` [ RunTime:0.0350s ]
SQL: SELECT * FROM `admin` WHERE `user` = 'admin' LIMIT 1   [ RunTime:0.0010s ]

[ 2016-12-21T17:37:36+08:00 ] 127.0.0.1 /admin/index.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.003001s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.003001s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.002000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.003000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.086005s ]
INFO: [ view_parse ] --END-- [ RunTime:0.088005s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001001s ]
INFO: [ view_filter ] --END-- [ RunTime:0.003001s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.003000s ]
INFO: [ app_end ] --END-- [ RunTime:0.005000s ]

[ 2016-12-21T17:37:39+08:00 ] 127.0.0.1 /admin/index/lists.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.002000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.004001s ]
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::save() should be compatible with Think\Model::save($data = '', $options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::delete() should be compatible with Think\Model::delete($options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
SQL: SHOW COLUMNS FROM `article` [ RunTime:0.0120s ]
NOTIC: [8] Undefined variable: arr D:\WWW\tools\Application\Admin\Controller\IndexController.class.php 第 96 行.
SQL: SELECT * FROM `article` ORDER BY id desc LIMIT 0,10   [ RunTime:0.0080s ]
SQL: SELECT COUNT(*) AS tp_count FROM `article` LIMIT 1   [ RunTime:0.0250s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.001000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.003001s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.170010s ]
INFO: [ view_parse ] --END-- [ RunTime:0.172010s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.003000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001000s ]
INFO: [ app_end ] --END-- [ RunTime:0.004001s ]

[ 2016-12-21T17:37:42+08:00 ] 127.0.0.1 /admin/index/article/id/32.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.003001s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001001s ]
INFO: [ app_begin ] --END-- [ RunTime:0.004001s ]
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::save() should be compatible with Think\Model::save($data = '', $options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::delete() should be compatible with Think\Model::delete($options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
SQL: SHOW COLUMNS FROM `article` [ RunTime:0.0100s ]
SQL: SELECT * FROM `article` WHERE `id` = 32 LIMIT 1   [ RunTime:0.0020s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.002000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.003000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.076005s ]
INFO: [ view_parse ] --END-- [ RunTime:0.078005s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.003000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.003000s ]
INFO: [ app_end ] --END-- [ RunTime:0.005000s ]

[ 2016-12-21T17:37:45+08:00 ] 127.0.0.1 /admin/index/article.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.003000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.003000s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.001000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.003000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.075005s ]
INFO: [ view_parse ] --END-- [ RunTime:0.079005s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.004000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001000s ]
INFO: [ app_end ] --END-- [ RunTime:0.004001s ]

[ 2016-12-21T17:37:55+08:00 ] 127.0.0.1 /admin/index/SaveArticle.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.003000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.004000s ]
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::save() should be compatible with Think\Model::save($data = '', $options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::delete() should be compatible with Think\Model::delete($options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
SQL: SHOW COLUMNS FROM `article` [ RunTime:0.0080s ]
SQL: INSERT INTO `article` (`type`,`title`,`keyword`,`author`,`content`,`createtime`) VALUES ('0','TCP和Http的区别','TCP和Http的区别','小兔','&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	1、TCP连接
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	手机能够使用联网功能是因为手机底层实现了TCP/IP协议，可以使手机终端通过无线网络建立TCP连接。TCP协议可以对上层网络提供接口，使上层网络数据的传输建立在“无差别”的网络之上。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	建立起一个TCP连接需要经过“三次握手”：
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	第一次握手：客户端发送syn包(syn=j)到服务器，并进入SYN_SEND状态，等待服务器确认；
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	第二次握手：服务器收到syn包，必须确认客户的SYN（ack=j+1），同时自己也发送一个SYN包（syn=k），即SYN+ACK包，此时服务器进入SYN_RECV状态；
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	第三次握手：客户端收到服务器的SYN＋ACK包，向服务器发送确认包ACK(ack=k+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	握 手过程中传送的包里不包含数据，三次握手完毕后，客户端与服务器才正式开始传送数据。理想状态下，TCP连接一旦建立，在通信双方中的任何一方主动关闭连 接之前，TCP&amp;nbsp;连接都将被一直保持下去。断开连接时服务器和客户端均可以主动发起断开TCP连接的请求，断开过程需要经过“四次握手”（过程就不细写 了，就是服务器和客户端交互，最终确定断开）
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&lt;br /&gt;
2、HTTP连接
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	HTTP协议即超文本传送协议(Hypertext&amp;nbsp;Transfer&amp;nbsp;Protocol&amp;nbsp;)，是Web联网的基础，也是手机联网常用的协议之一，HTTP协议是建立在TCP协议之上的一种应用。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	HTTP连接最显著的特点是客户端发送的每次请求都需要服务器回送响应，在请求结束后，会主动释放连接。从建立连接到关闭连接的过程称为“一次连接”。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	1）在HTTP&amp;nbsp;1.0中，客户端的每次请求都要求建立一次单独的连接，在处理完本次请求后，就自动释放连接。&lt;br /&gt;
&lt;br /&gt;
2）在HTTP&amp;nbsp;1.1中则可以在一次连接中处理多个请求，并且多个请求可以重叠进行，不需要等待一个请求结束后再发送下一个请求。&lt;br /&gt;
&lt;br /&gt;
由 于HTTP在每次请求结束后都会主动释放连接，因此HTTP连接是一种“短连接”，要保持客户端程序的在线状态，需要不断地向服务器发起连接请求。通常的 做法是即时不需要获得任何数据，客户端也保持每隔一段固定的时间向服务器发送一次“保持连接”的请求，服务器在收到该请求后对客户端进行回复，表明知道客 户端“在线”。若服务器长时间无法收到客户端的请求，则认为客户端“下线”，若客户端长时间无法收到服务器的回复，则认为网络已经断开。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&lt;br /&gt;
3、SOCKET原理
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	3.1套接字（socket）概念
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	套接字（socket）是通信的基石，是支持TCP/IP协议的网络通信的基本操作单元。它是网络通信过程中端点的抽象表示，包含进行网络通信必须的五种信息：连接使用的协议，本地主机的IP地址，本地进程的协议端口，远地主机的IP地址，远地进程的协议端口。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	应 用层通过传输层进行数据通信时，TCP会遇到同时为多个应用程序进程提供并发服务的问题。多个TCP连接或多个应用程序进程可能需要通过同一个&amp;nbsp;TCP协 议端口传输数据。为了区别不同的应用程序进程和连接，许多计算机操作系统为应用程序与TCP／IP协议交互提供了套接字(Socket)接口。应用层可以 和传输层通过Socket接口，区分来自不同应用程序进程或网络连接的通信，实现数据传输的并发服务。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&lt;br /&gt;
3.2&amp;nbsp;建立socket连接
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&lt;span style=&quot;font-family:Tahoma, Arial, sans-serif;font-size:16px;&quot;&gt;建立Socket连接至少需要一对套接字，其中一个运行于客户端，称为ClientSocket&amp;nbsp;，另一个运行于服务器端，称为ServerSocket&amp;nbsp;。&lt;/span&gt;
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;font-family:Tahoma, Arial, sans-serif;background-color:#FFFFFF;&quot;&gt;
	&lt;br /&gt;
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	套接字之间的连接过程分为三个步骤：服务器监听，客户端请求，连接确认。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	服务器监听：服务器端套接字并不定位具体的客户端套接字，而是处于等待连接的状态，实时监控网络状态，等待客户端的连接请求。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	客户端请求：指客户端的套接字提出连接请求，要连接的目标是服务器端的套接字。为此，客户端的套接字必须首先描述它要连接的服务器的套接字，指出服务器端套接字的地址和端口号，然后就向服务器端套接字提出连接请求。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	连 接确认：当服务器端套接字监听到或者说接收到客户端套接字的连接请求时，就响应客户端套接字的请求，建立一个新的线程，把服务器端套接字的描述发给客户 端，一旦客户端确认了此描述，双方就正式建立连接。而服务器端套接字继续处于监听状态，继续接收其他客户端套接字的连接请求。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&lt;br /&gt;
4、SOCKET连接与TCP连接
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	创建Socket连接时，可以指定使用的传输层协议，Socket可以支持不同的传输层协议（TCP或UDP），当使用TCP协议进行连接时，该Socket连接就是一个TCP连接。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&lt;br /&gt;
5、Socket连接与HTTP连接
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	由 于通常情况下Socket连接就是TCP连接，因此Socket连接一旦建立，通信双方即可开始相互发送数据内容，直到双方连接断开。但在实际网络应用 中，客户端到服务器之间的通信往往需要穿越多个中间节点，例如路由器、网关、防火墙等，大部分防火墙默认会关闭长时间处于非活跃状态的连接而导 致&amp;nbsp;Socket&amp;nbsp;连接断连，因此需要通过轮询告诉网络，该连接处于活跃状态。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	而HTTP连接使用的是“请求—响应”的方式，不仅在请求时需要先建立连接，而且需要客户端向服务器发出请求后，服务器端才能回复数据。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	很 多情况下，需要服务器端主动向客户端推送数据，保持客户端与服务器数据的实时与同步。此时若双方建立的是Socket连接，服务器就可以直接将数据传送给 客户端；若双方建立的是HTTP连接，则服务器需要等到客户端发送一次请求后才能将数据传回给客户端，因此，客户端定时向服务器端发送连接请求，不仅可以 保持在线，同时也是在“询问”服务器是否有新的数据，如果有就将数据传给客户端。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	二：首先，纠正一下我以 前一直误解的概念，我一直以为Http和Tcp是两种不同的，但是地位对等的协议，虽然知道TCP是传输层，而http是应用层今天学习了下，知道了 http是要基于TCP连接基础上的，简单的说，TCP就是单纯建立连接，不涉及任何我们需要请求的实际数据，简单的传输。http是用来收发数据，即实 际应用上来的。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	第一：从传输层，先说下TCP连接，我们要和服务端连接TCP连接，需要通过三次连接，包括：请求，确认，建立连接。即传说中的“三次握手协议”。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	第一次：C发送一个请求连接的位码SYN和一个随机产生的序列号给Seq，然后S收到了这些数据。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	第二次:S收到了这个请求连接的位码，啊呀，有人向我发出请求了么，那我要不要接受他的请求，得实现确认一下，于是，发送了一个确认码&amp;nbsp;ACN（seq+1），和SYN，Seq给C，然后C收到了，这个是第二次连接。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	第三次：C收到了确认的码和之前发送的SYN一比较，偶哟，对上了么，于是他又发送了一个ACN（SEQ+1）给S，S收到以后就确定建立连接，至此，TCP连接建立完成。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	简单就是：请求，确认，连接。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	第二：从实际上的数据应用来说httP:
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	在前面客户端和应用服务器建立TCP连接之后，就需要用http协议来传送数据了，HTTP协议简单来说，还是请求，确认，连接。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	总体就是C发送一个HTTP请求给S，S收到了这个http请求，然后返回给Chttp响应，然后C的中间件或者说浏览器把这些数据渲染成为了网页，展示在用户面前。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	第一：发送一个http请求给S，这个请求包括请求头和请求内容：
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	request&amp;nbsp;header：
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	包括了，1.请求的方法是POST/GET,请求的URL，http协议版本2.请求的数据，和编码方式3是否有cookie和cooies，是否缓存等。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	post和get请求方式的区别是，get把请求内容放在URL后面，但是URL长度有限制。而post是以表单的形势，适合要输入密码之类的，因为不在URL中显示，所以比较安全。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	request&amp;nbsp;body：
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	即请求的内容.
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	第二：S收到了http请求，然后根据请求头，返回http响应。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	response&amp;nbsp;header:包括了1.cookies或者sessions2.状态吗3.内容大小等
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	response&amp;nbsp;body：
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	即响应的内容，包括，JS什么的。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	第三，C收到了以后，就由浏览器完成一系列的渲染，包括执行JS脚本等。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	这就是我所理解的webTCP,HTTP基础知识，待续。。。。。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&amp;nbsp;
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	三、TCP是底层通讯协议，定义的是数据传输和连接方式的规范&lt;br /&gt;
HTTP是应用层协议，定义的是传输数据的内容的规范&lt;br /&gt;
&lt;br /&gt;
HTTP协议中的数据是利用TCP协议传输的，所以支持HTTP也就一定支持TCP
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	HTTP支持的是www服务&amp;nbsp;&lt;br /&gt;
而TCP/IP是协议&amp;nbsp;&lt;br /&gt;
它是Internet国际互联网络的基础。TCP/IP是网络中使用的基本的通信协议。&amp;nbsp;&lt;br /&gt;
&lt;br /&gt;
TCP/IP实际上是一组协议，它包括上百个各种功能的协议，如：远程登录、文件传输和电子邮件等，而TCP协议和IP协议是保证数据完整传输的两个基本的重要协议。通常说TCP/IP是Internet协议族，而不单单是TCP和IP。
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	&lt;br /&gt;
&lt;/p&gt;
&lt;p style=&quot;font-size:14px;color:#333333;background-color:#FFFFFF;&quot;&gt;
	来源：http://www.myhack58.com/Article/60/63/2014/50072.htm
&lt;/p&gt;
&lt;div&gt;
	&lt;br /&gt;
&lt;/div&gt;','1482313075') [ RunTime:0.0190s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.001000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.003000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.055003s ]
INFO: [ view_parse ] --END-- [ RunTime:0.057003s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.003000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.005000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.003000s ]
INFO: [ app_end ] --END-- [ RunTime:0.004000s ]

[ 2016-12-21T17:37:57+08:00 ] 127.0.0.1 /admin/index/article.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.003000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.003001s ]
INFO: [ app_begin ] --END-- [ RunTime:0.005001s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.001000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.003000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.073004s ]
INFO: [ view_parse ] --END-- [ RunTime:0.075004s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.003000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.005000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.003001s ]
INFO: [ app_end ] --END-- [ RunTime:0.005001s ]

[ 2016-12-21T17:38:04+08:00 ] 127.0.0.1 /admin/index/lists.aspx
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000000s ]
INFO: [ app_init ] --END-- [ RunTime:0.003000s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.003000s ]
INFO: [ app_begin ] --END-- [ RunTime:0.005000s ]
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::save() should be compatible with Think\Model::save($data = '', $options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
NOTIC: [2048] Declaration of Admin\Model\ArticleModel::delete() should be compatible with Think\Model::delete($options = Array) D:\WWW\tools\Application\Admin\Model\ArticleModel.class.php 第 101 行.
SQL: SHOW COLUMNS FROM `article` [ RunTime:0.0120s ]
NOTIC: [8] Undefined variable: arr D:\WWW\tools\Application\Admin\Controller\IndexController.class.php 第 96 行.
SQL: SELECT * FROM `article` ORDER BY id desc LIMIT 0,10   [ RunTime:0.0070s ]
SQL: SELECT COUNT(*) AS tp_count FROM `article` LIMIT 1   [ RunTime:0.0010s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.001000s ]
INFO: [ template_filter ] --END-- [ RunTime:0.004000s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.135008s ]
INFO: [ view_parse ] --END-- [ RunTime:0.137008s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.002000s ]
INFO: [ view_filter ] --END-- [ RunTime:0.004000s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.004000s ]
INFO: [ app_end ] --END-- [ RunTime:0.006000s ]

